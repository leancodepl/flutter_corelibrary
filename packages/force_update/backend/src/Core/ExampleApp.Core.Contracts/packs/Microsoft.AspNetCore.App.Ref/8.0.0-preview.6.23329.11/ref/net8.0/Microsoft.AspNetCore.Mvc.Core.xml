<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.AspNetCore.Mvc.Core</name>
    </assembly>
    <members>
        <member name="T:Microsoft.AspNetCore.Mvc.AcceptedAtActionResult">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ActionResult"/> that returns a Accepted (202) response with a Location header.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.AcceptedAtActionResult.#ctor(System.String,System.String,System.Object,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedAtActionResult"/> with the values
            provided.
            </summary>
            <param name="actionName">The name of the action to use for generating the URL.</param>
            <param name="controllerName">The name of the controller to use for generating the URL.</param>
            <param name="routeValues">The route data to use for generating the URL.</param>
            <param name="value">The value to format in the entity body.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.AcceptedAtActionResult.UrlHelper">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Mvc.IUrlHelper" /> used to generate URLs.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.AcceptedAtActionResult.ActionName">
            <summary>
            Gets or sets the name of the action to use for generating the URL.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.AcceptedAtActionResult.ControllerName">
            <summary>
            Gets or sets the name of the controller to use for generating the URL.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.AcceptedAtActionResult.RouteValues">
            <summary>
            Gets or sets the route data to use for generating the URL.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.AcceptedAtActionResult.OnFormatting(Microsoft.AspNetCore.Mvc.ActionContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.AcceptedAtRouteResult">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ActionResult"/> that returns a Accepted (202) response with a Location header.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.AcceptedAtRouteResult.#ctor(System.Object,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedAtRouteResult"/> class with the values
            provided.
            </summary>
            <param name="routeValues">The route data to use for generating the URL.</param>
            <param name="value">The value to format in the entity body.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.AcceptedAtRouteResult.#ctor(System.String,System.Object,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedAtRouteResult"/> class with the values
            provided.
            </summary>
            <param name="routeName">The name of the route to use for generating the URL.</param>
            <param name="routeValues">The route data to use for generating the URL.</param>
            <param name="value">The value to format in the entity body.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.AcceptedAtRouteResult.UrlHelper">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Mvc.IUrlHelper" /> used to generate URLs.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.AcceptedAtRouteResult.RouteName">
            <summary>
            Gets or sets the name of the route to use for generating the URL.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.AcceptedAtRouteResult.RouteValues">
            <summary>
            Gets or sets the route data to use for generating the URL.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.AcceptedAtRouteResult.OnFormatting(Microsoft.AspNetCore.Mvc.ActionContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.AcceptedResult">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ActionResult"/> that returns an Accepted (202) response with a Location header.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.AcceptedResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedResult"/> class with the values
            provided.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.AcceptedResult.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedResult"/> class with the values
            provided.
            </summary>
            <param name="location">The location at which the status of requested content can be monitored.</param>
            <param name="value">The value to format in the entity body.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.AcceptedResult.#ctor(System.Uri,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedResult"/> class with the values
            provided.
            </summary>
            <param name="locationUri">The location at which the status of requested content can be monitored.</param>
            <param name="value">The value to format in the entity body.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.AcceptedResult.Location">
            <summary>
            Gets or sets the location at which the status of the requested content can be monitored.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.AcceptedResult.OnFormatting(Microsoft.AspNetCore.Mvc.ActionContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.AcceptVerbsAttribute">
            <summary>
            Specifies what HTTP methods an action supports.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.AcceptVerbsAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.AcceptVerbsAttribute" /> class.
            </summary>
            <param name="method">The HTTP method the action supports.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.AcceptVerbsAttribute.#ctor(System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.AcceptVerbsAttribute" /> class.
            </summary>
            <param name="methods">The HTTP methods the action supports.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.AcceptVerbsAttribute.HttpMethods">
            <summary>
            Gets the HTTP methods the action supports.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.AcceptVerbsAttribute.Route">
            <summary>
            The route template. May be null.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.AcceptVerbsAttribute.Microsoft#AspNetCore#Mvc#Routing#IRouteTemplateProvider#Template">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.AcceptVerbsAttribute.Order">
            <summary>
            Gets the route order. The order determines the order of route execution. Routes with a lower
            order value are tried first. When a route doesn't specify a value, it gets the value of the
            <see cref="P:Microsoft.AspNetCore.Mvc.RouteAttribute.Order"/> or a default value of 0 if the <see cref="T:Microsoft.AspNetCore.Mvc.RouteAttribute"/>
            doesn't define a value on the controller.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.AcceptVerbsAttribute.Microsoft#AspNetCore#Mvc#Routing#IRouteTemplateProvider#Order">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.AcceptVerbsAttribute.Name">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ActionConstraints.ActionMethodSelectorAttribute">
            <summary>
            Base class for attributes which can implement conditional logic to enable or disable an action
            for a given request. See <see cref="T:Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraint"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ActionConstraints.ActionMethodSelectorAttribute.Order">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ActionConstraints.ActionMethodSelectorAttribute.Accept(Microsoft.AspNetCore.Mvc.ActionConstraints.ActionConstraintContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ActionConstraints.ActionMethodSelectorAttribute.IsValidForRequest(Microsoft.AspNetCore.Routing.RouteContext,Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor)">
            <summary>
            Determines whether the action selection is valid for the specified route context.
            </summary>
            <param name="routeContext">The route context.</param>
            <param name="action">Information about the action.</param>
            <returns>
            <see langword="true"/> if the action  selection is valid for the specified context;
            otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ActionConstraints.DefaultActionConstraintProvider">
            <summary>
            A default implementation of <see cref="T:Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraintProvider"/>.
            </summary>
            <remarks>
            This provider is able to provide an <see cref="T:Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraint"/> instance when the
            <see cref="T:Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraintMetadata"/> implements <see cref="T:Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraint"/> or
            <see cref="T:Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraintFactory"/>/
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ActionConstraints.DefaultActionConstraintProvider.Order">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ActionConstraints.DefaultActionConstraintProvider.OnProvidersExecuting(Microsoft.AspNetCore.Mvc.ActionConstraints.ActionConstraintProviderContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ActionConstraints.DefaultActionConstraintProvider.OnProvidersExecuted(Microsoft.AspNetCore.Mvc.ActionConstraints.ActionConstraintProviderContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ActionConstraints.HttpMethodActionConstraint">
            <summary>
            The implementation of <see cref="T:Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraint" /> used to enforce
            HTTP method filtering when MVC is used with legacy <see cref="T:Microsoft.AspNetCore.Routing.IRouter" />
            support. The <see cref="T:Microsoft.AspNetCore.Mvc.ActionConstraints.HttpMethodActionConstraint" /> can be used to determine
            the set of HTTP methods supported by an action.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.ActionConstraints.HttpMethodActionConstraint.HttpMethodConstraintOrder">
            <summary>
            The <see cref="P:Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraint.Order" /> value used by <see cref="T:Microsoft.AspNetCore.Mvc.ActionConstraints.HttpMethodActionConstraint" />.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ActionConstraints.HttpMethodActionConstraint.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ActionConstraints.HttpMethodActionConstraint" />.
            </summary>
            <param name="httpMethods">
            The list of HTTP methods to allow. Providing an empty list will allow
            any HTTP method.
            </param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ActionConstraints.HttpMethodActionConstraint.HttpMethods">
            <summary>
            Gets the list of allowed HTTP methods. Will return an empty list if all HTTP methods are allowed.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ActionConstraints.HttpMethodActionConstraint.Order">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ActionConstraints.HttpMethodActionConstraint.Accept(Microsoft.AspNetCore.Mvc.ActionConstraints.ActionConstraintContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ActionConstraints.IConsumesActionConstraint">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraint"/> constraint that identifies a type which can be used to select an action
            based on incoming request.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ActionContextAttribute">
            <summary>
            Specifies that a controller property should be set with the current
            <see cref="T:Microsoft.AspNetCore.Mvc.ActionContext"/> when creating the controller. The property must have a public
            set method.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ActionNameAttribute">
            <summary>
            Specifies the name of an action.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ActionNameAttribute.#ctor(System.String)">
            <summary>
            Initializes a new <see cref="T:Microsoft.AspNetCore.Mvc.ActionNameAttribute"/> instance.
            </summary>
            <param name="name">The name of the action.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ActionNameAttribute.Name">
            <summary>
            Gets the name of the action.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ActionResult">
            <summary>
            A default implementation of <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResultAsync(Microsoft.AspNetCore.Mvc.ActionContext)">
            <summary>
            Executes the result operation of the action method asynchronously. This method is called by MVC to process
            the result of an action method.
            The default implementation of this method calls the <see cref="M:Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResult(Microsoft.AspNetCore.Mvc.ActionContext)"/> method and
            returns a completed task.
            </summary>
            <param name="context">The context in which the result is executed. The context information includes
            information about the action that was executed and request information.</param>
            <returns>A task that represents the asynchronous execute operation.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ActionResult.ExecuteResult(Microsoft.AspNetCore.Mvc.ActionContext)">
            <summary>
            Executes the result operation of the action method synchronously. This method is called by MVC to process
            the result of an action method.
            </summary>
            <param name="context">The context in which the result is executed. The context information includes
            information about the action that was executed and request information.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ActionResult`1">
            <summary>
            A type that wraps either an <typeparamref name="TValue"/> instance or an <see cref="T:Microsoft.AspNetCore.Mvc.ActionResult"/>.
            </summary>
            <typeparam name="TValue">The type of the result.</typeparam>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ActionResult`1.#ctor(`0)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ActionResult`1"/> using the specified <paramref name="value"/>.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ActionResult`1.#ctor(Microsoft.AspNetCore.Mvc.ActionResult)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ActionResult`1"/> using the specified <see cref="T:Microsoft.AspNetCore.Mvc.ActionResult"/>.
            </summary>
            <param name="result">The <see cref="T:Microsoft.AspNetCore.Mvc.ActionResult"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ActionResult`1.Result">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Mvc.ActionResult"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ActionResult`1.Value">
            <summary>
            Gets the value.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ActionResult`1.op_Implicit(`0)~Microsoft.AspNetCore.Mvc.ActionResult{`0}">
            <summary>
            Implicitly converts the specified <paramref name="value"/> to an <see cref="T:Microsoft.AspNetCore.Mvc.ActionResult`1"/>.
            </summary>
            <param name="value">The value to convert.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ActionResult`1.op_Implicit(Microsoft.AspNetCore.Mvc.ActionResult)~Microsoft.AspNetCore.Mvc.ActionResult{`0}">
            <summary>
            Implicitly converts the specified <paramref name="result"/> to an <see cref="T:Microsoft.AspNetCore.Mvc.ActionResult`1"/>.
            </summary>
            <param name="result">The <see cref="T:Microsoft.AspNetCore.Mvc.ActionResult"/>.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.AntiforgeryValidationFailedResult">
            <summary>
            A <see cref="T:Microsoft.AspNetCore.Mvc.BadRequestResult"/> used for antiforgery validation
            failures. Use <see cref="T:Microsoft.AspNetCore.Mvc.Core.Infrastructure.IAntiforgeryValidationFailedResult"/> to
            match for validation failures inside MVC result filters.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ApiBehaviorOptions">
            <summary>
            Options used to configure behavior for types annotated with <see cref="T:Microsoft.AspNetCore.Mvc.ApiControllerAttribute"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApiBehaviorOptions.InvalidModelStateResponseFactory">
            <summary>
            Delegate invoked on actions annotated with <see cref="T:Microsoft.AspNetCore.Mvc.ApiControllerAttribute"/> to convert invalid
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/> into an <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApiBehaviorOptions.SuppressModelStateInvalidFilter">
            <summary>
            Gets or sets a value that determines if the filter that returns an <see cref="T:Microsoft.AspNetCore.Mvc.BadRequestObjectResult"/> when
            <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/> is invalid is suppressed. <seealso cref="P:Microsoft.AspNetCore.Mvc.ApiBehaviorOptions.InvalidModelStateResponseFactory"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApiBehaviorOptions.SuppressInferBindingSourcesForParameters">
            <summary>
            Gets or sets a value that determines if model binding sources are inferred for action parameters on controllers annotated
            with <see cref="T:Microsoft.AspNetCore.Mvc.ApiControllerAttribute"/> is suppressed.
            <para>
            When enabled, the following sources are inferred:
            Parameters that appear as route values, are assumed to be bound from the path (<see cref="F:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Path"/>).
            Parameters of type <see cref="T:Microsoft.AspNetCore.Http.IFormFile"/> and <see cref="T:Microsoft.AspNetCore.Http.IFormFileCollection"/> are assumed to be bound from form.
            Parameters that are complex (<see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.IsComplexType"/>) and are registered in the DI Container (<see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>) are assumed to be bound from the services <see cref="F:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Services"/>, unless this
            option is explicitly disabled <see cref="P:Microsoft.AspNetCore.Mvc.ApiBehaviorOptions.DisableImplicitFromServicesParameters"/>.
            Parameters that are complex (<see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.IsComplexType"/>) are assumed to be bound from the body (<see cref="F:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Body"/>).
            All other parameters are assumed to be bound from the query.
            </para>
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApiBehaviorOptions.DisableImplicitFromServicesParameters">
            <summary>
            Gets or sets a value that determines if parameters are inferred to be from services.
            This property is only applicable when <see cref="P:Microsoft.AspNetCore.Mvc.ApiBehaviorOptions.SuppressInferBindingSourcesForParameters" /> is <see langword="false" />.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApiBehaviorOptions.SuppressConsumesConstraintForFormFileParameters">
            <summary>
            Gets or sets a value that determines if an <c>multipart/form-data</c> consumes action constraint is added to parameters
            that are bound from form data.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApiBehaviorOptions.SuppressMapClientErrors">
            <summary>
            Gets or sets a value that determines if controllers with <see cref="T:Microsoft.AspNetCore.Mvc.ApiControllerAttribute"/>
            transform certain client errors.
            <para>
            When <see langword="false"/>, a result filter is added to API controller actions that transforms
            <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.IClientErrorActionResult"/>. Otherwise, the filter is suppressed.
            </para>
            <para>
            By default, <see cref="P:Microsoft.AspNetCore.Mvc.ApiBehaviorOptions.ClientErrorMapping"/> is used to map <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.IClientErrorActionResult"/> to a
            <see cref="T:Microsoft.AspNetCore.Mvc.ProblemDetails"/> instance (returned as the value for <see cref="T:Microsoft.AspNetCore.Mvc.ObjectResult"/>).
            </para>
            <para>
            To customize the output of the filter (for e.g. to return a different error type), register a custom
            implementation of <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.IClientErrorFactory"/> in the service collection.
            </para>
            </summary>
            <value>
            The default value is <see langword="false"/>.
            </value>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApiBehaviorOptions.ClientErrorMapping">
            <summary>
            Gets a map of HTTP status codes to <see cref="T:Microsoft.AspNetCore.Mvc.ClientErrorData"/>. Configured values
            are used to transform <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.IClientErrorActionResult"/> to an <see cref="T:Microsoft.AspNetCore.Mvc.ObjectResult"/>
            instance where the <see cref="P:Microsoft.AspNetCore.Mvc.ObjectResult.Value"/> is <see cref="T:Microsoft.AspNetCore.Mvc.ProblemDetails"/>.
            <para>
            Use of this feature can be disabled by resetting <see cref="P:Microsoft.AspNetCore.Mvc.ApiBehaviorOptions.SuppressMapClientErrors"/>.
            </para>
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ApiControllerAttribute">
            <summary>
            Indicates that a type and all derived types are used to serve HTTP API responses.
            <para>
            Controllers decorated with this attribute are configured with features and behavior targeted at improving the
            developer experience for building APIs.
            </para>
            <para>
            When decorated on an assembly, all controllers in the assembly will be treated as controllers with API behavior.
            For more information, see <see href="https://learn.microsoft.com/aspnet/core/web-api/#apicontroller-attribute">ApiController attribute</see>.
            </para>
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ApiConventionMethodAttribute">
            <summary>
            API conventions to be applied to a controller action.
            <para>
            API conventions are used to influence the output of ApiExplorer.
            <see cref="T:Microsoft.AspNetCore.Mvc.ApiConventionMethodAttribute"/> can be used to specify an exact convention method that applies
            to an action. <see cref="T:Microsoft.AspNetCore.Mvc.ApiConventionTypeAttribute"/> for details about applying conventions at
            the assembly or controller level.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApiConventionMethodAttribute.#ctor(System.Type,System.String)">
            <summary>
            Initializes an <see cref="T:Microsoft.AspNetCore.Mvc.ApiConventionMethodAttribute"/> instance using <paramref name="conventionType"/> and
            the specified <paramref name="methodName"/>.
            </summary>
            <param name="conventionType">
            The <see cref="T:System.Type"/> of the convention.
            <para>
            Conventions must be static types. Methods in a convention are
            matched to an action method using rules specified by <see cref="T:Microsoft.AspNetCore.Mvc.ApiExplorer.ApiConventionNameMatchAttribute" />
            that may be applied to a method name or its parameters and <see cref="T:Microsoft.AspNetCore.Mvc.ApiExplorer.ApiConventionTypeMatchAttribute"/>
            that are applied to parameters.
            </para>
            </param>
            <param name="methodName">The method name.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApiConventionMethodAttribute.ConventionType">
            <summary>
            Gets the convention type.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ApiConventionTypeAttribute">
            <summary>
            API conventions to be applied to an assembly containing MVC controllers or a single controller.
            <para>
            API conventions are used to influence the output of ApiExplorer.
            Conventions must be static types. Methods in a convention are
            matched to an action method using rules specified by <see cref="T:Microsoft.AspNetCore.Mvc.ApiExplorer.ApiConventionNameMatchAttribute" />
            that may be applied to a method name or its parameters and <see cref="T:Microsoft.AspNetCore.Mvc.ApiExplorer.ApiConventionTypeMatchAttribute"/>
            that are applied to parameters.
            </para>
            <para>
            When no attributes are found specifying the behavior, MVC matches method names and parameter names are matched
            using <see cref="F:Microsoft.AspNetCore.Mvc.ApiExplorer.ApiConventionNameMatchBehavior.Exact"/> and parameter types are matched
            using <see cref="F:Microsoft.AspNetCore.Mvc.ApiExplorer.ApiConventionTypeMatchBehavior.AssignableFrom"/>.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApiConventionTypeAttribute.#ctor(System.Type)">
            <summary>
            Initializes an <see cref="T:Microsoft.AspNetCore.Mvc.ApiConventionTypeAttribute"/> instance using <paramref name="conventionType"/>.
            </summary>
            <param name="conventionType">
            The <see cref="T:System.Type"/> of the convention.
            <para>
            Conventions must be static types. Methods in a convention are
            matched to an action method using rules specified by <see cref="T:Microsoft.AspNetCore.Mvc.ApiExplorer.ApiConventionNameMatchAttribute" />
            that may be applied to a method name or its parameters and <see cref="T:Microsoft.AspNetCore.Mvc.ApiExplorer.ApiConventionTypeMatchAttribute"/>
            that are applied to parameters.
            </para>
            </param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApiConventionTypeAttribute.ConventionType">
            <summary>
            Gets the convention type.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ApiExplorerSettingsAttribute">
            <summary>
            Controls the visibility and group name for an <c>ApiDescription</c>
            of the associated controller class or action method.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApiExplorerSettingsAttribute.GroupName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApiExplorerSettingsAttribute.IgnoreApi">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ApiExplorer.ApiConventionNameMatchAttribute">
            <summary>
            Determines the matching behavior an API convention method or parameter by name.
            <see cref="T:Microsoft.AspNetCore.Mvc.ApiExplorer.ApiConventionNameMatchBehavior"/> for supported options.
            <seealso cref="T:Microsoft.AspNetCore.Mvc.ApiConventionTypeAttribute"/>.
            </summary>
            <remarks>
            <see cref="F:Microsoft.AspNetCore.Mvc.ApiExplorer.ApiConventionNameMatchBehavior.Exact"/> is used if no value for this
            attribute is specified on a convention method or parameter.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApiExplorer.ApiConventionNameMatchAttribute.#ctor(Microsoft.AspNetCore.Mvc.ApiExplorer.ApiConventionNameMatchBehavior)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ApiExplorer.ApiConventionNameMatchAttribute"/>.
            </summary>
            <param name="matchBehavior">The <see cref="T:Microsoft.AspNetCore.Mvc.ApiExplorer.ApiConventionNameMatchBehavior"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApiExplorer.ApiConventionNameMatchAttribute.MatchBehavior">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Mvc.ApiExplorer.ApiConventionNameMatchBehavior"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ApiExplorer.ApiConventionNameMatchBehavior">
            <summary>
            The behavior for matching the name of a convention parameter or method.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.ApiExplorer.ApiConventionNameMatchBehavior.Any">
            <summary>
            Matches any name. Use this if the parameter does not need to be matched.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.ApiExplorer.ApiConventionNameMatchBehavior.Exact">
            <summary>
            The parameter or method name must exactly match the convention.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.ApiExplorer.ApiConventionNameMatchBehavior.Prefix">
            <summary>
            The parameter or method name in the convention is a proper prefix.
            <para>
            Casing is used to delineate words in a given name. For instance, with this behavior
            the convention name "Get" will match "Get", "GetPerson" or "GetById", but not "getById", "Getaway".
            </para>
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.ApiExplorer.ApiConventionNameMatchBehavior.Suffix">
            <summary>
            The parameter or method name in the convention is a proper suffix.
            <para>
            Casing is used to delineate words in a given name. For instance, with this behavior
            the convention name "id" will match "id", or "personId" but not "grid" or "personid".
            </para>
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ApiExplorer.ApiConventionResult">
            <summary>
            Metadata associated with an action method via API convention.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApiExplorer.ApiConventionResult.#ctor(System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseMetadataProvider})">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ApiExplorer.ApiConventionResult"/>.
            </summary>
            <param name="responseMetadataProviders">The sequence of <see cref="T:Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseMetadataProvider"/> that are associated with the action.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApiExplorer.ApiConventionResult.ResponseMetadataProviders">
            <summary>
            Gets the sequence of <see cref="T:Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseMetadataProvider"/> that are associated with the action.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ApiExplorer.ApiConventionTypeMatchAttribute">
            <summary>
            Determines the matching behavior an API convention parameter by type.
            <see cref="T:Microsoft.AspNetCore.Mvc.ApiExplorer.ApiConventionTypeMatchBehavior"/> for supported options.
            <seealso cref="T:Microsoft.AspNetCore.Mvc.ApiConventionTypeAttribute"/>.
            </summary>
            <remarks>
            <see cref="F:Microsoft.AspNetCore.Mvc.ApiExplorer.ApiConventionTypeMatchBehavior.AssignableFrom"/> is used if no value for this
            attribute is specified on a convention parameter.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApiExplorer.ApiConventionTypeMatchAttribute.#ctor(Microsoft.AspNetCore.Mvc.ApiExplorer.ApiConventionTypeMatchBehavior)">
            <summary>
            Initialzes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ApiExplorer.ApiConventionTypeMatchAttribute"/> with the specified <paramref name="matchBehavior"/>.
            </summary>
            <param name="matchBehavior">The <see cref="T:Microsoft.AspNetCore.Mvc.ApiExplorer.ApiConventionTypeMatchBehavior"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApiExplorer.ApiConventionTypeMatchAttribute.MatchBehavior">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Mvc.ApiExplorer.ApiConventionTypeMatchBehavior"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ApiExplorer.ApiConventionTypeMatchBehavior">
            <summary>
            The behavior for matching the type of a convention parameter.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.ApiExplorer.ApiConventionTypeMatchBehavior.Any">
            <summary>
            Matches any type. Use this if the parameter does not need to be matched.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.ApiExplorer.ApiConventionTypeMatchBehavior.AssignableFrom">
            <summary>
            The parameter in the convention is the exact type or a subclass of the type
            specified in the convention.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ApiExplorer.IApiDefaultResponseMetadataProvider">
            <summary>
            Provides a return type for all HTTP status codes that are not covered by other <see cref="T:Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseMetadataProvider"/> instances.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ApiExplorer.IApiDescriptionGroupNameProvider">
            <summary>
            Represents group name metadata for an <c>ApiDescription</c>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApiExplorer.IApiDescriptionGroupNameProvider.GroupName">
            <summary>
            The group name for the <c>ApiDescription</c> of the associated action or controller.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ApiExplorer.IApiDescriptionVisibilityProvider">
            <summary>
            Represents visibility metadata for an <c>ApiDescription</c>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApiExplorer.IApiDescriptionVisibilityProvider.IgnoreApi">
            <summary>
            If <c>true</c> then no <c>ApiDescription</c> objects will be created for the associated controller
            or action.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ApiExplorer.IApiRequestFormatMetadataProvider">
            <summary>
            Provides metadata information about the request format to an <c>IApiDescriptionProvider</c>.
            </summary>
            <remarks>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.IInputFormatter"/> should implement this interface to expose metadata information
            to an <c>IApiDescriptionProvider</c>.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApiExplorer.IApiRequestFormatMetadataProvider.GetSupportedContentTypes(System.String,System.Type)">
            <summary>
            Gets a filtered list of content types which are supported by the <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.IInputFormatter"/>
            for the <paramref name="objectType"/> and <paramref name="contentType"/>.
            </summary>
            <param name="contentType">
            The content type for which the supported content types are desired, or <c>null</c> if any content
            type can be used.
            </param>
            <param name="objectType">
            The <see cref="T:System.Type"/> for which the supported content types are desired.
            </param>
            <returns>Content types which are supported by the <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.IInputFormatter"/>.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ApiExplorer.IApiRequestMetadataProvider">
            <summary>
            Provides a set of possible content types than can be consumed by the action.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApiExplorer.IApiRequestMetadataProvider.SetContentTypes(Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection)">
            <summary>
            Configures a collection of allowed content types which can be consumed by the action.
            </summary>
            <param name="contentTypes">The <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection"/></param>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseMetadataProvider">
            <summary>
            Provides a return type, status code and a set of possible content types returned by a
            successful execution of the action.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseMetadataProvider.Type">
            <summary>
            Gets the optimistic return type of the action.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseMetadataProvider.StatusCode">
            <summary>
            Gets the HTTP status code of the response.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseMetadataProvider.SetContentTypes(Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection)">
            <summary>
            Configures a collection of allowed content types which can be produced by the action.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseTypeMetadataProvider">
            <summary>
            Provides metadata information about the response format to an <c>IApiDescriptionProvider</c>.
            </summary>
            <remarks>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter"/> should implement this interface to expose metadata information
            to an <c>IApiDescriptionProvider</c>.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApiExplorer.IApiResponseTypeMetadataProvider.GetSupportedContentTypes(System.String,System.Type)">
            <summary>
            Gets a filtered list of content types which are supported by the <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter"/>
            for the <paramref name="objectType"/> and <paramref name="contentType"/>.
            </summary>
            <param name="contentType">
            The content type for which the supported content types are desired, or <c>null</c> if any content
            type can be used.
            </param>
            <param name="objectType">
            The <see cref="T:System.Type"/> for which the supported content types are desired.
            </param>
            <returns>Content types which are supported by the <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter"/>.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ApiDescriptionActionData">
            <summary>
            Represents data used to build an <c>ApiDescription</c>, stored as part of the
            <see cref="P:Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.Properties"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApiDescriptionActionData.GroupName">
            <summary>
            The <c>ApiDescription.GroupName</c> of <c>ApiDescription</c> objects for the associated
            action.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel">
            <summary>
            An application model for controller actions.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel.#ctor(System.Reflection.MethodInfo,System.Collections.Generic.IReadOnlyList{System.Object})">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel"/>.
            </summary>
            <param name="actionMethod">The action <see cref="T:System.Reflection.MethodInfo"/>.</param>
            <param name="attributes">The attributes associated with the action.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel.#ctor(Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel)">
            <summary>
            Copy constructor for <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel"/>.
            </summary>
            <param name="other">The <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel"/> to copy.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel.ActionMethod">
            <summary>
            Gets the action <see cref="T:System.Reflection.MethodInfo"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel.ActionName">
            <summary>
            Gets the action name.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel.ApiExplorer">
             <summary>
             Gets or sets the <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ApiExplorerModel"/> for this action.
             </summary>
             <remarks>
             <see cref="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel.ApiExplorer"/> allows configuration of settings for ApiExplorer
             which apply to the action.
            
             Settings applied by <see cref="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel.ApiExplorer"/> override settings from
             <see cref="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel.ApiExplorer"/> and <see cref="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel.ApiExplorer"/>.
             </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel.Attributes">
            <summary>
            Gets the attributes associated with the action.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel.Controller">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel.Filters">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"/> instances associated with the action.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel.Parameters">
            <summary>
            Gets the parameters associated with this action.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel.RouteParameterTransformer">
            <summary>
            Gets or sets an <see cref="T:Microsoft.AspNetCore.Routing.IOutboundParameterTransformer"/> that will be used to transform
            built-in route parameters such as <c>action</c>, <c>controller</c>, and <c>area</c> as well as
            additional parameters specified by <see cref="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel.RouteValues"/> into static segments in the route template.
            </summary>
            <remarks>
            <para>
            This feature only applies when using endpoint routing.
            </para>
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel.RouteValues">
            <summary>
            Gets a collection of route values that must be present in the
            <see cref="P:Microsoft.AspNetCore.Routing.RouteData.Values"/> for the corresponding action to be selected.
            </summary>
            <remarks>
            <para>
            The value of <see cref="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel.ActionName"/> is considered an implicit route value corresponding
            to the key <c>action</c> and the value of <see cref="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel.ControllerName"/> is
            considered an implicit route value corresponding to the key <c>controller</c>. These entries
            will be implicitly added to <see cref="P:Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.RouteValues"/> when the action
            descriptor is created, but will not be visible in <see cref="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel.RouteValues"/>.
            </para>
            <para>
            Entries in <see cref="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel.RouteValues"/> can override entries in
            <see cref="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel.RouteValues"/>.
            </para>
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel.Properties">
            <summary>
            Gets a set of properties associated with the action.
            These properties will be copied to <see cref="P:Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.Properties"/>.
            </summary>
            <remarks>
            Entries will take precedence over entries with the same key in
            <see cref="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel.Properties"/> and <see cref="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel.Properties"/>.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel.Selectors">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.SelectorModel"/> instances.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel.DisplayName">
            <summary>
            Gets the action display name.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ApiBehaviorApplicationModelProvider.Order">
            <remarks>
            Order is set to execute after the <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.DefaultApplicationModelProvider"/> and allow any other user
            <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelProvider"/> that configure routing to execute.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ApiConventionApplicationModelConvention">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.IActionModelConvention"/> that discovers
            <list type="bullet">
            <item><description><see cref="T:Microsoft.AspNetCore.Mvc.ApiExplorer.ApiConventionResult"/> from applied <see cref="T:Microsoft.AspNetCore.Mvc.ApiConventionTypeAttribute"/> or <see cref="T:Microsoft.AspNetCore.Mvc.ApiConventionMethodAttribute"/>.</description></item>
            <item><description><see cref="T:Microsoft.AspNetCore.Mvc.ProducesErrorResponseTypeAttribute"/> that applies to the action.</description></item>
            </list>
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationModels.ApiConventionApplicationModelConvention.#ctor(Microsoft.AspNetCore.Mvc.ProducesErrorResponseTypeAttribute)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ApiConventionApplicationModelConvention"/>.
            </summary>
            <param name="defaultErrorResponseType">The error type to be used. Use <see cref="T:System.Void" />
            when no default error type is to be inferred.
            </param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ApiConventionApplicationModelConvention.DefaultErrorResponseType">
            <summary>
            Gets the default <see cref="T:Microsoft.AspNetCore.Mvc.ProducesErrorResponseTypeAttribute"/> that is associated with an action
            when no attribute is discovered.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationModels.ApiConventionApplicationModelConvention.Apply(Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationModels.ApiConventionApplicationModelConvention.ShouldApply(Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel)">
            <summary>
            Determines if this instance of <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.IActionModelConvention"/> applies to a specified <paramref name="action"/>.
            </summary>
            <param name="action">The <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel"/>.</param>
            <returns>
            <see langword="true"/> if the convention applies, otherwise <see langword="false"/>.
            Derived types may override this method to selectively apply this convention.
            </returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ApiExplorerModel">
            <summary>
            A model for ApiExplorer properties associated with a controller or action.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationModels.ApiExplorerModel.#ctor">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ApiExplorerModel"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationModels.ApiExplorerModel.#ctor(Microsoft.AspNetCore.Mvc.ApplicationModels.ApiExplorerModel)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ApiExplorerModel"/> with properties copied from <paramref name="other"/>.
            </summary>
            <param name="other">The <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ApiExplorerModel"/> to copy.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ApiExplorerModel.IsVisible">
            <summary>
            If <c>true</c>, <c>APIExplorer.ApiDescription</c> objects will be created for the associated
            controller or action.
            </summary>
            <remarks>
            Set this value to configure whether or not the associated controller or action will appear in ApiExplorer.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ApiExplorerModel.GroupName">
            <summary>
            The value for <c>APIExplorer.ApiDescription.GroupName</c> of
            <c>APIExplorer.ApiDescription</c> objects created for the associated controller or action.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ApiVisibilityConvention">
            <summary>
            A <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.IActionModelConvention"/> that sets Api Explorer visibility.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationModels.ApiVisibilityConvention.Apply(Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationModels.ApiVisibilityConvention.ShouldApply(Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel)">
            <summary>
            Determines if this instance of <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.IActionModelConvention"/> applies to a specified <paramref name="action"/>.
            </summary>
            <param name="action">The <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel"/>.</param>
            <returns>
            <see langword="true"/> if the convention applies, otherwise <see langword="false"/>.
            Derived types may override this method to selectively apply this convention.
            </returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel">
            <summary>
            A model for configuring controllers in an MVC application.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel.ApiExplorer">
             <summary>
             Gets or sets the <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ApiExplorerModel"/> for the application.
             </summary>
             <remarks>
             <see cref="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel.ApiExplorer"/> allows configuration of default settings
             for ApiExplorer that apply to all actions unless overridden by
             <see cref="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel.ApiExplorer"/> or <see cref="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel.ApiExplorer"/>.
            
             If using <see cref="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel.ApiExplorer"/> to set <see cref="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ApiExplorerModel.IsVisible"/> to
             <c>true</c>, this setting will only be honored for actions which use attribute routing.
             </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel.Controllers">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel"/> instances.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel.Filters">
            <summary>
            Gets the global <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"/> instances.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel.Properties">
            <summary>
            Gets a set of properties associated with all actions.
            These properties will be copied to <see cref="P:Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.Properties"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelConventions">
            <summary>
            Applies conventions to a <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelConventions.ApplyConventions(Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelConvention})">
            <summary>
            Applies conventions to a <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel"/>.
            </summary>
            <param name="applicationModel">The <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel"/>.</param>
            <param name="conventions">The set of conventions.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelFactory">
            <summary>
            A facade service for creating application models.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelProviderContext">
            <summary>
            A context object for <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelProvider"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelProviderContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.TypeInfo})">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelProviderContext"/>.
            </summary>
            <param name="controllerTypes">The discovered controller <see cref="T:System.Reflection.TypeInfo"/> instances.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelProviderContext.ControllerTypes">
            <summary>
            Gets the discovered controller <see cref="T:System.Reflection.TypeInfo"/> instances.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelProviderContext.Result">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel">
            <summary>
            A model for attribute routes.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Routing.AttributeRoute"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel.#ctor(Microsoft.AspNetCore.Mvc.Routing.IRouteTemplateProvider)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Routing.AttributeRoute"/> using the specified <paramref name="templateProvider"/>.
            </summary>
            <param name="templateProvider">The <see cref="T:Microsoft.AspNetCore.Mvc.Routing.IRouteTemplateProvider"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel.#ctor(Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel)">
            <summary>
            Copy constructor for <see cref="T:Microsoft.AspNetCore.Mvc.Routing.AttributeRoute"/>.
            </summary>
            <param name="other">The <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel"/> to copy.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel.Attribute">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Mvc.Routing.IRouteTemplateProvider"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel.Template">
            <summary>
            Gets or sets the attribute route template.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel.Order">
            <summary>
            Gets or sets the route order.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel.Name">
            <summary>
            Gets or sets the route name.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel.SuppressLinkGeneration">
            <summary>
            Gets or sets a value that determines if this model participates in link generation.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel.SuppressPathMatching">
            <summary>
            Gets or sets a value that determines if this model participates in path matching (inbound routing).
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel.IsAbsoluteTemplate">
            <summary>
            Gets or sets a value that determines if this route template for this model overrides the route template at the parent scope.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel.CombineAttributeRouteModel(Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel,Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel)">
            <summary>
            Combines two <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel"/> instances and returns
            a new <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel"/> instance with the result.
            </summary>
            <param name="left">The left <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel"/>.</param>
            <param name="right">The right <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel"/>.</param>
            <returns>A new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel"/> that represents the
            combination of the two <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel"/> instances or <c>null</c> if both
            parameters are <c>null</c>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel.CombineTemplates(System.String,System.String)">
            <summary>
            Combines the prefix and route template for an attribute route.
            </summary>
            <param name="prefix">The prefix.</param>
            <param name="template">The route template.</param>
            <returns>The combined pattern.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel.IsOverridePattern(System.String)">
            <summary>
            Determines if a template pattern can be used to override a prefix.
            </summary>
            <param name="template">The template.</param>
            <returns><c>true</c> if this is an overriding template, <c>false</c> otherwise.</returns>
            <remarks>
            Route templates starting with "~/" or "/" can be used to override the prefix.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel.ReplaceTokens(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Replaces the tokens in the template with the provided values.
            </summary>
            <param name="template">The template.</param>
            <param name="values">The token values to use.</param>
            <returns>A new string with the replaced values.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationModels.AttributeRouteModel.ReplaceTokens(System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.AspNetCore.Routing.IOutboundParameterTransformer)">
            <summary>
            Replaces the tokens in the template with the provided values and route token transformer.
            </summary>
            <param name="template">The template.</param>
            <param name="values">The token values to use.</param>
            <param name="routeTokenTransformer">The route token transformer.</param>
            <returns>A new string with the replaced values.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ClientErrorResultFilterConvention">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.IActionModelConvention"/> that adds a <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"/>
            to <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel"/> that transforms <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.IClientErrorActionResult"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationModels.ClientErrorResultFilterConvention.Apply(Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationModels.ClientErrorResultFilterConvention.ShouldApply(Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel)">
            <summary>
            Determines if this instance of <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.IActionModelConvention"/> applies to a specified <paramref name="action"/>.
            </summary>
            <param name="action">The <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel"/>.</param>
            <returns>
            <see langword="true"/> if the convention applies, otherwise <see langword="false"/>.
            Derived types may override this method to selectively apply this convention.
            </returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ConsumesConstraintForFormFileParameterConvention">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.IActionModelConvention"/> that adds a <see cref="T:Microsoft.AspNetCore.Mvc.ConsumesAttribute"/> with <c>multipart/form-data</c>
            to controllers containing form file (<see cref="F:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.FormFile"/>) parameters.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationModels.ConsumesConstraintForFormFileParameterConvention.Apply(Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationModels.ConsumesConstraintForFormFileParameterConvention.ShouldApply(Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel)">
            <summary>
            Determines if this instance of <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.IActionModelConvention"/> applies to a specified <paramref name="action"/>.
            </summary>
            <param name="action">The <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel"/>.</param>
            <returns>
            <see langword="true"/> if the convention applies, otherwise <see langword="false"/>.
            Derived types may override this method to selectively apply this convention.
            </returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerActionDescriptorBuilder">
            <summary>
            Creates instances of <see cref="T:Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor"/> from application model
            types.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerActionDescriptorProvider.OnProvidersExecuting(Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptorProviderContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerActionDescriptorProvider.OnProvidersExecuted(Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptorProviderContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel">
            <summary>
            A model for configuring controllers.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel.#ctor(System.Reflection.TypeInfo,System.Collections.Generic.IReadOnlyList{System.Object})">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel"/>.
            </summary>
            <param name="controllerType">The type of the controller.</param>
            <param name="attributes">The attributes.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel.#ctor(Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel"/>.
            </summary>
            <param name="other">The other controller model.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel.Actions">
            <summary>
            The actions on this controller.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel.ApiExplorer">
             <summary>
             Gets or sets the <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ApiExplorerModel"/> for this controller.
             </summary>
             <remarks>
             <see cref="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel.ApiExplorer"/> allows configuration of settings for ApiExplorer
             which apply to all actions in the controller unless overridden by <see cref="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel.ApiExplorer"/>.
            
             Settings applied by <see cref="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel.ApiExplorer"/> override settings from
             <see cref="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel.ApiExplorer"/>.
             </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel.Application">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel"/> of this controller.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel.Attributes">
            <summary>
            The attributes of this controller.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel.ControllerName">
            <summary>
            Gets or sets the name of this controller.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel.ControllerType">
            <summary>
            The type of this controller.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel.ControllerProperties">
            <summary>
            The properties of this controller.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel.Filters">
            <summary>
            The filter metadata of this controller.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel.RouteValues">
            <summary>
            Gets a collection of route values that must be present in the
            <see cref="P:Microsoft.AspNetCore.Routing.RouteData.Values"/> for the corresponding action to be selected.
            </summary>
            <remarks>
            Entries in <see cref="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel.RouteValues"/> can be overridden by entries in
            <see cref="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel.RouteValues"/>.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel.Properties">
            <summary>
            Gets a set of properties associated with the controller.
            These properties will be copied to <see cref="P:Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.Properties"/>.
            </summary>
            <remarks>
            Entries will take precedence over entries with the same key
            in <see cref="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel.Properties"/>.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel.Selectors">
            <summary>
            The selector models of this controller.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel.DisplayName">
            <summary>
            The DisplayName of this controller.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.DefaultApplicationModelProvider.Order">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationModels.DefaultApplicationModelProvider.OnProvidersExecuting(Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelProviderContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationModels.DefaultApplicationModelProvider.OnProvidersExecuted(Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelProviderContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationModels.DefaultApplicationModelProvider.CreateControllerModel(System.Reflection.TypeInfo)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel"/> for the given <see cref="T:System.Reflection.TypeInfo"/>.
            </summary>
            <param name="typeInfo">The <see cref="T:System.Reflection.TypeInfo"/>.</param>
            <returns>A <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel"/> for the given <see cref="T:System.Reflection.TypeInfo"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationModels.DefaultApplicationModelProvider.CreatePropertyModel(System.Reflection.PropertyInfo)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.PropertyModel"/> for the given <see cref="T:System.Reflection.PropertyInfo"/>.
            </summary>
            <param name="propertyInfo">The <see cref="T:System.Reflection.PropertyInfo"/>.</param>
            <returns>A <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.PropertyModel"/> for the given <see cref="T:System.Reflection.PropertyInfo"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationModels.DefaultApplicationModelProvider.CreateActionModel(System.Reflection.TypeInfo,System.Reflection.MethodInfo)">
            <summary>
            Creates the <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel"/> instance for the given action <see cref="T:System.Reflection.MethodInfo"/>.
            </summary>
            <param name="typeInfo">The controller <see cref="T:System.Reflection.TypeInfo"/>.</param>
            <param name="methodInfo">The action <see cref="T:System.Reflection.MethodInfo"/>.</param>
            <returns>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel"/> instance for the given action <see cref="T:System.Reflection.MethodInfo"/> or
            <c>null</c> if the <paramref name="methodInfo"/> does not represent an action.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationModels.DefaultApplicationModelProvider.IsAction(System.Reflection.TypeInfo,System.Reflection.MethodInfo)">
            <summary>
            Returns <c>true</c> if the <paramref name="methodInfo"/> is an action. Otherwise <c>false</c>.
            </summary>
            <param name="typeInfo">The <see cref="T:System.Reflection.TypeInfo"/>.</param>
            <param name="methodInfo">The <see cref="T:System.Reflection.MethodInfo"/>.</param>
            <returns><c>true</c> if the <paramref name="methodInfo"/> is an action. Otherwise <c>false</c>.</returns>
            <remarks>
            Override this method to provide custom logic to determine which methods are considered actions.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationModels.DefaultApplicationModelProvider.CreateParameterModel(System.Reflection.ParameterInfo)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ParameterModel"/> for the given <see cref="T:System.Reflection.ParameterInfo"/>.
            </summary>
            <param name="parameterInfo">The <see cref="T:System.Reflection.ParameterInfo"/>.</param>
            <returns>A <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ParameterModel"/> for the given <see cref="T:System.Reflection.ParameterInfo"/>.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ApplicationModels.IActionModelConvention">
             <summary>
             Allows customization of the <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel"/>.
             </summary>
             <remarks>
             To use this interface, create an <see cref="T:System.Attribute"/> class which implements the interface and
             place it on an action method.
            
             <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.IActionModelConvention"/> customizations run after
             <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.IControllerModelConvention"/> customizations and before
             <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.IParameterModelConvention"/> customizations.
             </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationModels.IActionModelConvention.Apply(Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel)">
            <summary>
            Called to apply the convention to the <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel"/>.
            </summary>
            <param name="action">The <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel"/>.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ApplicationModels.IApiExplorerModel">
            <summary>
            An interface that allows access to an ApiExplorerModel.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.IApiExplorerModel.ApiExplorer">
            <summary>
            The ApiExporerModel.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelConvention">
             <summary>
             Allows customization of the <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel"/>.
             </summary>
             <remarks>
             Implementations of this interface can be registered in <see cref="P:Microsoft.AspNetCore.Mvc.MvcOptions.Conventions"/>
             to customize metadata about the application.
            
             <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelConvention"/> run before other types of customizations to the
             reflected model.
             </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelConvention.Apply(Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel)">
            <summary>
            Called to apply the convention to the <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel"/>.
            </summary>
            <param name="application">The <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel"/>.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelProvider">
            <summary>
            Builds or modifies an <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel"/> for action discovery.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelProvider.Order">
            <summary>
            Gets the order value for determining the order of execution of providers. Providers execute in
            ascending numeric value of the <see cref="P:Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelProvider.Order"/> property.
            </summary>
            <remarks>
            <para>
            Providers are executed in an ordering determined by an ascending sort of the <see cref="P:Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelProvider.Order"/> property.
            A provider with a lower numeric value of <see cref="P:Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelProvider.Order"/> will have its
            <see cref="M:Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelProvider.OnProvidersExecuting(Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelProviderContext)"/> called before that of a provider with a higher numeric value of
            <see cref="P:Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelProvider.Order"/>. The <see cref="M:Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelProvider.OnProvidersExecuted(Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelProviderContext)"/> method is called in the reverse ordering after
            all calls to <see cref="M:Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelProvider.OnProvidersExecuting(Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelProviderContext)"/>. A provider with a lower numeric value of
            <see cref="P:Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelProvider.Order"/> will have its <see cref="M:Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelProvider.OnProvidersExecuted(Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelProviderContext)"/> method called after that of a provider
            with a higher numeric value of <see cref="P:Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelProvider.Order"/>.
            </para>
            <para>
            If two providers have the same numeric value of <see cref="P:Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelProvider.Order"/>, then their relative execution order
            is undefined.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelProvider.OnProvidersExecuting(Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelProviderContext)">
            <summary>
            Executed for the first pass of <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel"/> building. See <see cref="P:Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelProvider.Order"/>.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelProviderContext"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelProvider.OnProvidersExecuted(Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelProviderContext)">
            <summary>
            Executed for the second pass of <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel"/> building. See <see cref="P:Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelProvider.Order"/>.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelProviderContext"/>.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ApplicationModels.IBindingModel">
            <summary>
            An interface which is used to represent a something with a <see cref="P:Microsoft.AspNetCore.Mvc.ApplicationModels.IBindingModel.BindingInfo"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.IBindingModel.BindingInfo">
            <summary>
            The <see cref="P:Microsoft.AspNetCore.Mvc.ApplicationModels.IBindingModel.BindingInfo"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ICommonModel">
            <summary>
            ICommonModel interface.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ICommonModel.Attributes">
            <summary>
            The attributes.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ICommonModel.MemberInfo">
            <summary>
            The MemberInfo.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ICommonModel.Name">
            <summary>
            The name.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ApplicationModels.IControllerModelConvention">
             <summary>
             Allows customization of the <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel"/>.
             </summary>
             <remarks>
             To use this interface, create an <see cref="T:System.Attribute"/> class which implements the interface and
             place it on a controller class.
            
             <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.IControllerModelConvention"/> customizations run after
             <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelConvention"/> customizations and before
             <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.IActionModelConvention"/> customizations.
             </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationModels.IControllerModelConvention.Apply(Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel)">
            <summary>
            Called to apply the convention to the <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel"/>.
            </summary>
            <param name="controller">The <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel"/>.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ApplicationModels.IFilterModel">
            <summary>
            Model that has a list of <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.IFilterModel.Filters">
            <summary>
            List of <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ApplicationModels.InferParameterBindingInfoConvention">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.IActionModelConvention"/> that infers <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.BindingSource"/> for parameters.
            </summary>
            <remarks>
            The goal of this convention is to make intuitive and easy to document <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource"/> inferences. The rules are:
            <list type="number">
            <item>A previously specified <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.BindingSource" /> is never overwritten.</item>
            <item>A complex type parameter (<see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.IsComplexType"/>), registered in the DI container, is assigned <see cref="F:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Services"/>.</item>
            <item>A complex type parameter (<see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.IsComplexType"/>), not registered in the DI container, is assigned <see cref="F:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Body"/>.</item>
            <item>Parameter with a name that appears as a route value in ANY route template is assigned <see cref="F:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Path"/>.</item>
            <item>All other parameters are <see cref="F:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Query"/>.</item>
            </list>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationModels.InferParameterBindingInfoConvention.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.InferParameterBindingInfoConvention"/>.
            </summary>
            <param name="modelMetadataProvider">The model metadata provider.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationModels.InferParameterBindingInfoConvention.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider,Microsoft.Extensions.DependencyInjection.IServiceProviderIsService)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.InferParameterBindingInfoConvention"/>.
            </summary>
            <param name="modelMetadataProvider">The model metadata provider.</param>
            <param name="serviceProviderIsService">The service to determine if the a type is available from the <see cref="T:System.IServiceProvider"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationModels.InferParameterBindingInfoConvention.ShouldApply(Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel)">
            <summary>
            Called to determine whether the action should apply.
            </summary>
            <param name="action">The action in question.</param>
            <returns><see langword="true"/> if the action should apply.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationModels.InferParameterBindingInfoConvention.Apply(Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel)">
            <summary>
            Called to apply the convention to the <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel"/>.
            </summary>
            <param name="action">The <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel"/>.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ApplicationModels.InvalidModelStateFilterConvention">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.IActionModelConvention"/> that adds a <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"/>
            to <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel"/> that responds to invalid <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/>
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationModels.InvalidModelStateFilterConvention.Apply(Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationModels.InvalidModelStateFilterConvention.ShouldApply(Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel)">
            <summary>
            Called to determine whether the action should apply.
            </summary>
            <param name="action">The action in question.</param>
            <returns><see langword="true"/> if the action should apply.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ApplicationModels.IParameterModelBaseConvention">
            <summary>
            Allows customization of the properties and parameters on controllers and Razor Pages.
            </summary>
            <remarks>
            To use this interface, create an <see cref="T:System.Attribute"/> class which implements the interface and
            place it on an action method parameter.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationModels.IParameterModelBaseConvention.Apply(Microsoft.AspNetCore.Mvc.ApplicationModels.ParameterModelBase)">
            <summary>
            Called to apply the convention to the <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ParameterModelBase"/>.
            </summary>
            <param name="parameter">The <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ParameterModelBase"/>.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ApplicationModels.IParameterModelConvention">
             <summary>
             Allows customization of the <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ParameterModel"/>.
             </summary>
             <remarks>
             To use this interface, create an <see cref="T:System.Attribute"/> class which implements the interface and
             place it on an action method parameter.
            
             <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.IParameterModelConvention"/> customizations run after
             <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.IActionModelConvention"/> customizations.
             </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationModels.IParameterModelConvention.Apply(Microsoft.AspNetCore.Mvc.ApplicationModels.ParameterModel)">
            <summary>
            Called to apply the convention to the <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ParameterModel"/>.
            </summary>
            <param name="parameter">The  <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ParameterModel"/>.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ApplicationModels.IPropertyModel">
            <summary>
            An interface which is used to represent something with properties.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.IPropertyModel.Properties">
            <summary>
            The properties.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ParameterModel">
            <summary>
            A type that represents a paramater.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationModels.ParameterModel.#ctor(System.Reflection.ParameterInfo,System.Collections.Generic.IReadOnlyList{System.Object})">
            <summary>
            Initializes a new <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ParameterModel"/>.
            </summary>
            <param name="parameterInfo">The parameter info.</param>
            <param name="attributes">The attributes.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationModels.ParameterModel.#ctor(Microsoft.AspNetCore.Mvc.ApplicationModels.ParameterModel)">
            <summary>
            Initializes a new <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ParameterModel"/>.
            </summary>
            <param name="other">The parameter model to copy.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ParameterModel.Action">
            <summary>
            The <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ParameterModel.Properties">
            <summary>
            The properties.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ParameterModel.Attributes">
            <summary>
            The attributes.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ParameterModel.ParameterInfo">
            <summary>
            The <see cref="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ParameterModel.ParameterInfo"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ParameterModel.ParameterName">
            <summary>
            The parameter name.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ParameterModel.DisplayName">
            <summary>
            The display name.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ParameterModelBase">
            <summary>
            A model type for reading and manipulation properties and parameters.
            <para>
            Derived instances of this type represent properties and parameters for controllers, and Razor Pages.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationModels.ParameterModelBase.#ctor(System.Type,System.Collections.Generic.IReadOnlyList{System.Object})">
            <summary>
            Initializes a new instance of a <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ParameterModelBase"/>.
            </summary>
            <param name="parameterType">The type.</param>
            <param name="attributes">The attributes.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationModels.ParameterModelBase.#ctor(Microsoft.AspNetCore.Mvc.ApplicationModels.ParameterModelBase)">
            <summary>
            Copy constructor.
            </summary>
            <param name="other">The other instance to copy</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ParameterModelBase.Attributes">
            <summary>
            The attributes.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ParameterModelBase.Properties">
            <summary>
            The properties.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ParameterModelBase.ParameterType">
            <summary>
            The type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ParameterModelBase.Name">
            <summary>
            The name.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ParameterModelBase.BindingInfo">
            <summary>
            The <see cref="P:Microsoft.AspNetCore.Mvc.ApplicationModels.ParameterModelBase.BindingInfo"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ApplicationModels.PropertyModel">
            <summary>
            A type which is used to represent a property in a <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationModels.PropertyModel.#ctor(System.Reflection.PropertyInfo,System.Collections.Generic.IReadOnlyList{System.Object})">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.PropertyModel"/>.
            </summary>
            <param name="propertyInfo">The <see cref="P:Microsoft.AspNetCore.Mvc.ApplicationModels.PropertyModel.PropertyInfo"/> for the underlying property.</param>
            <param name="attributes">Any attributes which are annotated on the property.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationModels.PropertyModel.#ctor(Microsoft.AspNetCore.Mvc.ApplicationModels.PropertyModel)">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.PropertyModel"/> from a given <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.PropertyModel"/>.
            </summary>
            <param name="other">The <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.PropertyModel"/> which needs to be copied.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.PropertyModel.Controller">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ControllerModel"/> this <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.PropertyModel"/> is associated with.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.PropertyModel.Properties">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.PropertyModel.Attributes">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.PropertyModel.PropertyInfo">
            <summary>
            The <see cref="P:Microsoft.AspNetCore.Mvc.ApplicationModels.PropertyModel.PropertyInfo"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.PropertyModel.PropertyName">
            <summary>
            The name of the property.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ApplicationModels.RouteTokenTransformerConvention">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.IActionModelConvention"/> that sets attribute routing token replacement
            to use the specified <see cref="T:Microsoft.AspNetCore.Routing.IOutboundParameterTransformer"/> on <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel"/>.
            This convention does not effect Razor page routes.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationModels.RouteTokenTransformerConvention.#ctor(Microsoft.AspNetCore.Routing.IOutboundParameterTransformer)">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.RouteTokenTransformerConvention"/> with the specified <see cref="T:Microsoft.AspNetCore.Routing.IOutboundParameterTransformer"/>.
            </summary>
            <param name="parameterTransformer">The <see cref="T:Microsoft.AspNetCore.Routing.IOutboundParameterTransformer"/> to use with attribute routing token replacement.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationModels.RouteTokenTransformerConvention.Apply(Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationModels.RouteTokenTransformerConvention.ShouldApply(Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel)">
            <summary>
            Called to determine whether an action should apply.
            </summary>
            <param name="action">The <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ActionModel"/>.</param>
            <returns><see langword="true"/> if the the action should apply.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ApplicationModels.SelectorModel">
            <summary>
            A type that represents a selector.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationModels.SelectorModel.#ctor">
            <summary>
            Intializes a new <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.SelectorModel"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationModels.SelectorModel.#ctor(Microsoft.AspNetCore.Mvc.ApplicationModels.SelectorModel)">
            <summary>
            Intializes a new <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.SelectorModel"/>.
            </summary>
            <param name="other">The <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.SelectorModel"/> to copy from.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.SelectorModel.AttributeRouteModel">
            <summary>
            The <see cref="P:Microsoft.AspNetCore.Mvc.ApplicationModels.SelectorModel.AttributeRouteModel"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.SelectorModel.ActionConstraints">
            <summary>
            The list of <see cref="T:Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraintMetadata"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationModels.SelectorModel.EndpointMetadata">
            <summary>
            Gets the <see cref="P:Microsoft.AspNetCore.Mvc.ApplicationModels.SelectorModel.EndpointMetadata"/> associated with the <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.SelectorModel"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPart">
            <summary>
            A part of an MVC application.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPart.Name">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPart"/> name.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartAttribute">
            <summary>
            Specifies an assembly to be added as an <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPart" />.
            <para>
            In the ordinary case, MVC will generate <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartAttribute" />
            instances on the entry assembly for each dependency that references MVC.
            Each of these assemblies is treated as an <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPart" />.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartAttribute" />.
            </summary>
            <param name="assemblyName">The assembly name.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartAttribute.AssemblyName">
            <summary>
            Gets the assembly name.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartFactory">
            <summary>
            Specifies a contract for synthesizing one or more <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPart"/> instances
            from an <see cref="T:System.Reflection.Assembly"/>.
            <para>
            By default, Mvc registers each application assembly that it discovers as an <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.AssemblyPart"/>.
            Assemblies can optionally specify an <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartFactory"/> to configure parts for the assembly
            by using <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.ProvideApplicationPartFactoryAttribute"/>.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartFactory.GetApplicationParts(System.Reflection.Assembly)">
            <summary>
            Gets one or more <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPart"/> instances for the specified <paramref name="assembly"/>.
            </summary>
            <param name="assembly">The <see cref="T:System.Reflection.Assembly"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartFactory.GetApplicationPartFactory(System.Reflection.Assembly)">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartFactory"/> for the specified assembly.
            <para>
            An assembly may specify an <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartFactory"/> using <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.ProvideApplicationPartFactoryAttribute"/>.
            Otherwise, <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.DefaultApplicationPartFactory"/> is used.
            </para>
            </summary>
            <param name="assembly">The <see cref="T:System.Reflection.Assembly"/>.</param>
            <returns>An instance of <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartFactory"/>.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager">
            <summary>
            Manages the parts and features of an MVC application.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager.FeatureProviders">
            <summary>
            Gets the list of <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.IApplicationFeatureProvider"/>s.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager.ApplicationParts">
            <summary>
            Gets the list of <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPart"/> instances.
            <para>
            Instances in this collection are stored in precedence order. An <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPart"/> that appears
            earlier in the list has a higher precedence.
            An <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.IApplicationFeatureProvider"/> may choose to use this an interface as a way to resolve conflicts when
            multiple <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPart"/> instances resolve equivalent feature values.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager.PopulateFeature``1(``0)">
            <summary>
            Populates the given <paramref name="feature"/> using the list of
            <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.IApplicationFeatureProvider`1"/>s configured on the
            <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager"/>.
            </summary>
            <typeparam name="TFeature">The type of the feature.</typeparam>
            <param name="feature">The feature instance to populate.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ApplicationParts.AssemblyPart">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPart"/> backed by an <see cref="T:System.Reflection.Assembly"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationParts.AssemblyPart.#ctor(System.Reflection.Assembly)">
            <summary>
            Initializes a new <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.AssemblyPart"/> instance.
            </summary>
            <param name="assembly">The backing <see cref="T:System.Reflection.Assembly"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationParts.AssemblyPart.Assembly">
            <summary>
            Gets the <see cref="P:Microsoft.AspNetCore.Mvc.ApplicationParts.AssemblyPart.Assembly"/> of the <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPart"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationParts.AssemblyPart.Name">
            <summary>
            Gets the name of the <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPart"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationParts.AssemblyPart.Types">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ApplicationParts.DefaultApplicationPartFactory">
            <summary>
            Default <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartFactory"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationParts.DefaultApplicationPartFactory.Instance">
            <summary>
            Gets an instance of <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.DefaultApplicationPartFactory"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationParts.DefaultApplicationPartFactory.GetDefaultApplicationParts(System.Reflection.Assembly)">
            <summary>
            Gets the sequence of <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPart"/> instances that are created by this instance of <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.DefaultApplicationPartFactory"/>.
            <para>
            Applications may use this method to get the same behavior as this factory produces during MVC's default part discovery.
            </para>
            </summary>
            <param name="assembly">The <see cref="T:System.Reflection.Assembly"/>.</param>
            <returns>The sequence of <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPart"/> instances.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationParts.DefaultApplicationPartFactory.GetApplicationParts(System.Reflection.Assembly)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ApplicationParts.IApplicationFeatureProvider">
            <summary>
            Marker interface for <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.IApplicationFeatureProvider"/>
            implementations.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ApplicationParts.IApplicationFeatureProvider`1">
            <summary>
            A provider for a given <typeparamref name="TFeature"/> feature.
            </summary>
            <typeparam name="TFeature">The type of the feature.</typeparam>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationParts.IApplicationFeatureProvider`1.PopulateFeature(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPart},`0)">
            <summary>
            Updates the <paramref name="feature"/> instance.
            </summary>
            <param name="parts">The list of <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPart"/> instances in the application.
            </param>
            <param name="feature">The feature instance to populate.</param>
            <remarks>
            <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPart"/> instances in <paramref name="parts"/> appear in the same ordered sequence they
            are stored in <see cref="P:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager.ApplicationParts"/>. This ordering may be used by the feature
            provider to make precedence decisions.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ApplicationParts.IApplicationPartTypeProvider">
            <summary>
            Exposes a set of types from an <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPart"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationParts.IApplicationPartTypeProvider.Types">
            <summary>
            Gets the list of available types in the <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPart"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ApplicationParts.ICompilationReferencesProvider">
            <summary>
            Exposes one or more reference paths from an <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPart"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationParts.ICompilationReferencesProvider.GetReferencePaths">
            <summary>
            Gets reference paths used to perform runtime compilation.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ApplicationParts.NullApplicationPartFactory">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartFactory"/> that produces no parts.
            <para>
            This factory may be used to to preempt Mvc's default part discovery allowing for custom configuration at a later stage.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationParts.NullApplicationPartFactory.GetApplicationParts(System.Reflection.Assembly)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ApplicationParts.ProvideApplicationPartFactoryAttribute">
            <summary>
            Provides a <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartFactory"/> type.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationParts.ProvideApplicationPartFactoryAttribute.#ctor(System.Type)">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.ProvideApplicationPartFactoryAttribute"/> with the specified type.
            </summary>
            <param name="factoryType">The factory type.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationParts.ProvideApplicationPartFactoryAttribute.#ctor(System.String)">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.ProvideApplicationPartFactoryAttribute"/> with the specified type name.
            </summary>
            <param name="factoryTypeName">The assembly qualified type name.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationParts.ProvideApplicationPartFactoryAttribute.GetFactoryType">
            <summary>
            Gets the factory type.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ApplicationParts.RelatedAssemblyAttribute">
            <summary>
            Specifies a assembly to load as part of MVC's assembly discovery mechanism.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationParts.RelatedAssemblyAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.RelatedAssemblyAttribute"/>.
            </summary>
            <param name="assemblyFileName">The file name, without extension, of the related assembly.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ApplicationParts.RelatedAssemblyAttribute.AssemblyFileName">
            <summary>
            Gets the assembly file name without extension.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ApplicationParts.RelatedAssemblyAttribute.GetRelatedAssemblies(System.Reflection.Assembly,System.Boolean)">
            <summary>
            Gets <see cref="T:System.Reflection.Assembly"/> instances specified by <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.RelatedAssemblyAttribute"/>.
            </summary>
            <param name="assembly">The assembly containing <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.RelatedAssemblyAttribute"/> instances.</param>
            <param name="throwOnError">Determines if the method throws if a related assembly could not be located.</param>
            <returns>Related <see cref="T:System.Reflection.Assembly"/> instances.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.AreaAttribute">
            <summary>
            Specifies the area containing a controller or action.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.AreaAttribute.#ctor(System.String)">
            <summary>
            Initializes a new <see cref="T:Microsoft.AspNetCore.Mvc.AreaAttribute"/> instance.
            </summary>
            <param name="areaName">The area containing the controller or action.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Authorization.AllowAnonymousFilter">
            <summary>
            An implementation of <see cref="T:Microsoft.AspNetCore.Mvc.Authorization.IAllowAnonymousFilter"/>
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter">
            <summary>
            An implementation of <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IAsyncAuthorizationFilter"/> which applies a specific
            <see cref="T:Microsoft.AspNetCore.Authorization.AuthorizationPolicy"/>. MVC recognizes the <see cref="T:Microsoft.AspNetCore.Authorization.AuthorizeAttribute"/> and adds an instance of
            this filter to the associated action or controller.
            </summary>
            <remarks>
            An authorize filter is not meant to be used in combination with <see cref="P:Microsoft.AspNetCore.Authorization.AuthorizationOptions.FallbackPolicy"/>. 
            The fallback policy takes precedence over an authorize filter.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter.#ctor">
            <summary>
            Initializes a new <see cref="T:Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter"/> instance.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter.#ctor(Microsoft.AspNetCore.Authorization.AuthorizationPolicy)">
            <summary>
            Initialize a new <see cref="T:Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter"/> instance.
            </summary>
            <param name="policy">Authorization policy to be used.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter.#ctor(Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.IAuthorizeData})">
            <summary>
            Initialize a new <see cref="T:Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter"/> instance.
            </summary>
            <param name="policyProvider">The <see cref="T:Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider"/> to use to resolve policy names.</param>
            <param name="authorizeData">The <see cref="T:Microsoft.AspNetCore.Authorization.IAuthorizeData"/> to combine into an <see cref="T:Microsoft.AspNetCore.Authorization.IAuthorizeData"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter.#ctor(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.IAuthorizeData})">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter"/>.
            </summary>
            <param name="authorizeData">The <see cref="T:Microsoft.AspNetCore.Authorization.IAuthorizeData"/> to combine into an <see cref="T:Microsoft.AspNetCore.Authorization.IAuthorizeData"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter"/>.
            </summary>
            <param name="policy">The name of the policy to require for authorization.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter.PolicyProvider">
            <summary>
            The <see cref="T:Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider"/> to use to resolve policy names.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter.AuthorizeData">
            <summary>
            The <see cref="T:Microsoft.AspNetCore.Authorization.IAuthorizeData"/> to combine into an <see cref="T:Microsoft.AspNetCore.Authorization.IAuthorizeData"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter.Policy">
            <summary>
            Gets the authorization policy to be used.
            </summary>
            <remarks>
            If<c>null</c>, the policy will be constructed using
            <see cref="M:Microsoft.AspNetCore.Authorization.AuthorizationPolicy.CombineAsync(Microsoft.AspNetCore.Authorization.IAuthorizationPolicyProvider,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Authorization.IAuthorizeData})"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter.OnAuthorizationAsync(Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.BadRequestObjectResult">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ObjectResult"/> that when executed will produce a Bad Request (400) response.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.BadRequestObjectResult.#ctor(System.Object)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.BadRequestObjectResult"/> instance.
            </summary>
            <param name="error">Contains the errors to be returned to the client.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.BadRequestObjectResult.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.BadRequestObjectResult"/> instance.
            </summary>
            <param name="modelState"><see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/> containing the validation errors.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.BadRequestResult">
            <summary>
            A <see cref="T:Microsoft.AspNetCore.Mvc.StatusCodeResult"/> that when
            executed will produce a Bad Request (400) response.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.BadRequestResult.#ctor">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.BadRequestResult"/> instance.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.BindAttribute">
            <summary>
            This attribute can be used on action parameters and types, to indicate model level metadata.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.BindAttribute.#ctor(System.String[])">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.BindAttribute"/>.
            </summary>
            <param name="include">Names of parameters to include in binding.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.BindAttribute.Include">
            <summary>
            Gets the names of properties to include in model binding.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.BindAttribute.Prefix">
            <summary>
            Allows a user to specify a particular prefix to match during model binding.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.BindAttribute.Microsoft#AspNetCore#Mvc#ModelBinding#IModelNameProvider#Name">
            <summary>
            Represents the model name used during model binding.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.BindAttribute.PropertyFilter">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.BindPropertiesAttribute">
            <summary>
            An attribute that enables binding for all properties the decorated controller or Razor Page model defines.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.BindPropertiesAttribute.SupportsGet">
            <summary>
            When <c>true</c>, allows properties to be bound on GET requests. When <c>false</c>, properties
            do not get model bound or validated on GET requests.
            <para>
            Defaults to <c>false</c>.
            </para>
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.BindPropertyAttribute">
            <summary>
            An attribute that can specify a model name or type of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder"/> to use for binding the
            associated property.
            </summary>
            <remarks>
            Similar to <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinderAttribute"/>. Unlike that attribute, <see cref="T:Microsoft.AspNetCore.Mvc.BindPropertyAttribute"/>
            applies only to properties and adds an <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IRequestPredicateProvider"/> implementation that by default
            indicates the property should not be bound for HTTP GET requests (see also <see cref="P:Microsoft.AspNetCore.Mvc.BindPropertyAttribute.SupportsGet"/>).
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.BindPropertyAttribute.SupportsGet">
            <summary>
            Gets or sets an indication the associated property should be bound in HTTP GET requests. If
            <see langword="true"/>, the property should be bound in all requests. Otherwise, the property should not be
            bound in HTTP GET requests.
            </summary>
            <value>Defaults to <see langword="false"/>.</value>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.BindPropertyAttribute.BinderType">
            <inheritdoc />
            <remarks>
            Subclass this attribute and set <see cref="P:Microsoft.AspNetCore.Mvc.BindPropertyAttribute.BindingSource"/> if <see cref="F:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Custom"/> is not
            correct for the specified (non-<see langword="null"/>) <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder"/> implementation.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.BindPropertyAttribute.BindingSource">
            <inheritdoc />
            <value>
            If <see cref="P:Microsoft.AspNetCore.Mvc.BindPropertyAttribute.BinderType"/> is <see langword="null"/>, defaults to <see langword="null"/>. Otherwise,
            defaults to <see cref="F:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Custom"/>. May be overridden in a subclass.
            </value>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.BindPropertyAttribute.Name">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.CacheProfile">
            <summary>
            Defines a set of settings which can be used for response caching.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.CacheProfile.Duration">
            <summary>
            Gets or sets the duration in seconds for which the response is cached.
            If this property is set to a non null value,
            the "max-age" in "Cache-control" header is set in the
            <see cref="P:Microsoft.AspNetCore.Http.HttpContext.Response" />.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.CacheProfile.Location">
            <summary>
            Gets or sets the location where the data from a particular URL must be cached.
            If this property is set to a non null value,
            the "Cache-control" header is set in the <see cref="P:Microsoft.AspNetCore.Http.HttpContext.Response" />.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.CacheProfile.NoStore">
            <summary>
            Gets or sets the value which determines whether the data should be stored or not.
            When set to <see langword="true"/>, it sets "Cache-control" header in
            <see cref="P:Microsoft.AspNetCore.Http.HttpContext.Response" /> to "no-store".
            Ignores the "Location" parameter for values other than "None".
            Ignores the "Duration" parameter.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.CacheProfile.VaryByHeader">
            <summary>
            Gets or sets the value for the Vary header in <see cref="P:Microsoft.AspNetCore.Http.HttpContext.Response" />.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.CacheProfile.VaryByQueryKeys">
            <summary>
            Gets or sets the query keys to vary by.
            </summary>
            <remarks>
            <see cref="P:Microsoft.AspNetCore.Mvc.CacheProfile.VaryByQueryKeys"/> requires the response cache middleware.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ChallengeResult">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ActionResult"/> that on execution invokes <see cref="M:HttpContext.ChallengeAsync"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ChallengeResult.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ChallengeResult"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ChallengeResult.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ChallengeResult"/> with the
            specified authentication scheme.
            </summary>
            <param name="authenticationScheme">The authentication scheme to challenge.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ChallengeResult.#ctor(System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ChallengeResult"/> with the
            specified authentication schemes.
            </summary>
            <param name="authenticationSchemes">The authentication schemes to challenge.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ChallengeResult.#ctor(Microsoft.AspNetCore.Authentication.AuthenticationProperties)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ChallengeResult"/> with the
            specified <paramref name="properties"/>.
            </summary>
            <param name="properties"><see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationProperties"/> used to perform the authentication
            challenge.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ChallengeResult.#ctor(System.String,Microsoft.AspNetCore.Authentication.AuthenticationProperties)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ChallengeResult"/> with the
            specified authentication scheme and <paramref name="properties"/>.
            </summary>
            <param name="authenticationScheme">The authentication schemes to challenge.</param>
            <param name="properties"><see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationProperties"/> used to perform the authentication
            challenge.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ChallengeResult.#ctor(System.Collections.Generic.IList{System.String},Microsoft.AspNetCore.Authentication.AuthenticationProperties)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ChallengeResult"/> with the
            specified authentication schemes and <paramref name="properties"/>.
            </summary>
            <param name="authenticationSchemes">The authentication scheme to challenge.</param>
            <param name="properties"><see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationProperties"/> used to perform the authentication
            challenge.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ChallengeResult.AuthenticationSchemes">
            <summary>
            Gets or sets the authentication schemes that are challenged.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ChallengeResult.Properties">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationProperties"/> used to perform the authentication challenge.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ChallengeResult.ExecuteResultAsync(Microsoft.AspNetCore.Mvc.ActionContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ClientErrorData">
            <summary>
            Information for producing client errors. This type is used to configure client errors
            produced by consumers of <see cref="P:Microsoft.AspNetCore.Mvc.ApiBehaviorOptions.ClientErrorMapping"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ClientErrorData.Link">
            <summary>
            Gets or sets a link (URI) that describes the client error.
            </summary>
            <remarks>
            By default, this maps to <see cref="P:Microsoft.AspNetCore.Mvc.ProblemDetails.Type"/>.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ClientErrorData.Title">
            <summary>
            Gets or sets the summary of the client error.
            </summary>
            <remarks>
            By default, this maps to <see cref="P:Microsoft.AspNetCore.Mvc.ProblemDetails.Title"/> and should not change
            between multiple occurrences of the same error.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.CompatibilityVersion">
             <summary>
             Specifies the version compatibility of runtime behaviors configured by <see cref="T:Microsoft.AspNetCore.Mvc.MvcOptions"/>.
             </summary>
             <remarks>
             <para>
             The best way to set a compatibility version is by using
             <see cref="M:Microsoft.Extensions.DependencyInjection.MvcCoreMvcBuilderExtensions.SetCompatibilityVersion(Microsoft.Extensions.DependencyInjection.IMvcBuilder,Microsoft.AspNetCore.Mvc.CompatibilityVersion)"/> or
             <see cref="M:Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions.SetCompatibilityVersion(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder,Microsoft.AspNetCore.Mvc.CompatibilityVersion)"/> in your application's
             <c>ConfigureServices</c> method.
             <example>
             Setting the compatibility version using <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/>:
             <code>
             public class Startup
             {
                 ...
            
                 public void ConfigureServices(IServiceCollection services)
                 {
                     services.AddMvc().SetCompatibilityVersion(CompatibilityVersion.Version_3_0);
                 }
            
                 ...
             }
             </code>
             </example>
             </para>
             <para>
             Setting compatibility version to a specific version will change the default values of various
             settings to match a particular minor release of ASP.NET Core MVC.
             </para>
             </remarks>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.CompatibilityVersion.Version_2_0">
            <summary>
            Sets the default value of settings on <see cref="T:Microsoft.AspNetCore.Mvc.MvcOptions"/> to match the behavior of
            ASP.NET Core MVC 2.0.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.CompatibilityVersion.Version_2_1">
            <summary>
            Sets the default value of settings on <see cref="T:Microsoft.AspNetCore.Mvc.MvcOptions"/> to match the behavior of
            ASP.NET Core MVC 2.1.
            </summary>
            <remarks>
            ASP.NET Core MVC 2.1 introduced a compatibility switch for
            <c>MvcJsonOptions.AllowInputFormatterExceptionMessages</c>. This is now a regular property.
            </remarks>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.CompatibilityVersion.Version_2_2">
            <summary>
            Sets the default value of settings on <see cref="T:Microsoft.AspNetCore.Mvc.MvcOptions"/> to match the behavior of
            ASP.NET Core MVC 2.2.
            </summary>
            <remarks>
            ASP.NET Core MVC 2.2 introduced compatibility switches for the following:
            <list type="bullet">
                <item><description><c>ApiBehaviorOptions.SuppressMapClientErrors</c></description></item>
                <item><description><see cref="P:Microsoft.AspNetCore.Mvc.MvcOptions.EnableEndpointRouting" /></description></item>
                <item><description><see cref="P:Microsoft.AspNetCore.Mvc.MvcOptions.MaxValidationDepth" /></description></item>
            </list>
            All of the above are now regular properties.
            </remarks>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.CompatibilityVersion.Version_3_0">
            <summary>
            Sets the default value of settings on <see cref="T:Microsoft.AspNetCore.Mvc.MvcOptions"/> and other <c>Options</c> types to match
            the behavior of ASP.NET Core MVC 3.0.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.CompatibilityVersion.Latest">
            <summary>
            Sets the default value of settings on <see cref="T:Microsoft.AspNetCore.Mvc.MvcOptions"/> to match the latest release. Use this
            value with care, upgrading minor versions will cause breaking changes when using <see cref="F:Microsoft.AspNetCore.Mvc.CompatibilityVersion.Latest"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ConflictObjectResult">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ObjectResult"/> that when executed will produce a Conflict (409) response.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ConflictObjectResult.#ctor(System.Object)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ConflictObjectResult"/> instance.
            </summary>
            <param name="error">Contains the errors to be returned to the client.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ConflictObjectResult.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ConflictObjectResult"/> instance.
            </summary>
            <param name="modelState"><see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/> containing the validation errors.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ConflictResult">
            <summary>
            A <see cref="T:Microsoft.AspNetCore.Mvc.StatusCodeResult"/> that when executed will produce a Conflict (409) response.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ConflictResult.#ctor">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ConflictResult"/> instance.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ConsumesAttribute">
            <summary>
            A filter that specifies the supported request content types. <see cref="P:Microsoft.AspNetCore.Mvc.ConsumesAttribute.ContentTypes"/> is used to select an
            action when there would otherwise be multiple matches.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.ConsumesAttribute.ConsumesActionConstraintOrder">
            <summary>
            The order for consumes attribute.
            </summary>
            <value>Defaults to 200</value>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ConsumesAttribute.#ctor(System.String,System.String[])">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ConsumesAttribute"/>.
            <param name="contentType">The request content type.</param>
            <param name="otherContentTypes">The additional list of allowed request content types.</param>
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ConsumesAttribute.#ctor(System.Type,System.String,System.String[])">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ConsumesAttribute"/>.
            <param name="requestType">The type being read from the request.</param>
            <param name="contentType">The request content type.</param>
            <param name="otherContentTypes">The additional list of allowed request content types.</param>
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ConsumesAttribute.Microsoft#AspNetCore#Mvc#ActionConstraints#IActionConstraint#Order">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ConsumesAttribute.ContentTypes">
            <summary>
            Gets or sets the supported request content types. Used to select an action when there would otherwise be
            multiple matches.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ConsumesAttribute.IsOptional">
            <summary>
            Gets or sets a value that determines if the request body is optional.
            This value is only used to specify if the request body is required in API explorer.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ConsumesAttribute.OnResourceExecuting(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ConsumesAttribute.OnResourceExecuted(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ConsumesAttribute.Accept(Microsoft.AspNetCore.Mvc.ActionConstraints.ActionConstraintContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ConsumesAttribute.SetContentTypes(Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ContentResult">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ActionResult"/> that when executed will produce a response with content.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ContentResult.Content">
            <summary>
            Gets or set the content representing the body of the response.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ContentResult.ContentType">
            <summary>
            Gets or sets the Content-Type header for the response,
            which may be handled using <see cref="T:Microsoft.Net.Http.Headers.MediaTypeHeaderValue" />.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ContentResult.StatusCode">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Http.StatusCodes">HTTP status code</see>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ContentResult.ExecuteResultAsync(Microsoft.AspNetCore.Mvc.ActionContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ControllerAttribute">
            <summary>
            Indicates that the type and any derived types that this attribute is applied to
            are considered a controller by the default controller discovery mechanism, unless
            <see cref="T:Microsoft.AspNetCore.Mvc.NonControllerAttribute"/> is applied to any type in the hierarchy.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ControllerBase">
            <summary>
            A base class for an MVC controller without view support.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ControllerBase.HttpContext">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/> for the executing action.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ControllerBase.Request">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Http.HttpRequest"/> for the executing action.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ControllerBase.Response">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Http.HttpResponse"/> for the executing action.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ControllerBase.RouteData">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Routing.RouteData"/> for the executing action.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ControllerBase.ModelState">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/> that contains the state of the model and of model-binding validation.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ControllerBase.ControllerContext">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Mvc.ControllerContext"/>.
            </summary>
            <remarks>
            <see cref="T:Microsoft.AspNetCore.Mvc.Controllers.IControllerActivator"/> activates this property while activating controllers.
            If user code directly instantiates a controller, the getter returns an empty
            <see cref="T:Microsoft.AspNetCore.Mvc.ControllerContext"/>.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ControllerBase.MetadataProvider">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ControllerBase.ModelBinderFactory">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ControllerBase.Url">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Mvc.IUrlHelper"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ControllerBase.ObjectValidator">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ControllerBase.ProblemDetailsFactory">
            <summary>
            Gets or sets the <see cref="P:Microsoft.AspNetCore.Mvc.ControllerBase.ProblemDetailsFactory"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ControllerBase.User">
            <summary>
            Gets the <see cref="T:System.Security.Claims.ClaimsPrincipal"/> for user associated with the executing action.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ControllerBase.Empty">
            <summary>
            Gets an instance of <see cref="T:Microsoft.AspNetCore.Mvc.EmptyResult"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.StatusCodeResult"/> object by specifying a <paramref name="statusCode"/>.
            </summary>
            <param name="statusCode">The status code to set on the response.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.StatusCodeResult"/> object for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.StatusCode(System.Int32,System.Object)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.ObjectResult"/> object by specifying a <paramref name="statusCode"/> and <paramref name="value"/>
            </summary>
            <param name="statusCode">The status code to set on the response.</param>
            <param name="value">The value to set on the <see cref="T:Microsoft.AspNetCore.Mvc.ObjectResult"/>.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.ObjectResult"/> object for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.ContentResult"/> object by specifying a <paramref name="content"/> string.
            </summary>
            <param name="content">The content to write to the response.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.ContentResult"/> object for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String,System.String)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.ContentResult"/> object by specifying a
            <paramref name="content"/> string and a content type.
            </summary>
            <param name="content">The content to write to the response.</param>
            <param name="contentType">The content type (MIME type).</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.ContentResult"/> object for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String,System.String,System.Text.Encoding)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.ContentResult"/> object by specifying a
            <paramref name="content"/> string, a <paramref name="contentType"/>, and <paramref name="contentEncoding"/>.
            </summary>
            <param name="content">The content to write to the response.</param>
            <param name="contentType">The content type (MIME type).</param>
            <param name="contentEncoding">The content encoding.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.ContentResult"/> object for the response.</returns>
            <remarks>
            If encoding is provided by both the 'charset' and the <paramref name="contentEncoding"/> parameters, then
            the <paramref name="contentEncoding"/> parameter is chosen as the final encoding.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.Content(System.String,Microsoft.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.ContentResult"/> object by specifying a
            <paramref name="content"/> string and a <paramref name="contentType"/>.
            </summary>
            <param name="content">The content to write to the response.</param>
            <param name="contentType">The content type (MIME type).</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.ContentResult"/> object for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.NoContent">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.NoContentResult"/> object that produces an empty
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status204NoContent"/> response.
            </summary>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.NoContentResult"/> object for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.Ok">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.OkResult"/> object that produces an empty <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status200OK"/> response.
            </summary>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.OkResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.Ok(System.Object)">
            <summary>
            Creates an <see cref="T:Microsoft.AspNetCore.Mvc.OkObjectResult"/> object that produces an <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status200OK"/> response.
            </summary>
            <param name="value">The content value to format in the entity body.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.OkObjectResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.Redirect(System.String)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.RedirectResult"/> object that redirects (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status302Found"/>)
            to the specified <paramref name="url"/>.
            </summary>
            <param name="url">The URL to redirect to.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.RedirectResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanent(System.String)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.RedirectResult"/> object with <see cref="P:Microsoft.AspNetCore.Mvc.RedirectResult.Permanent"/> set to true
            (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status301MovedPermanently"/>) using the specified <paramref name="url"/>.
            </summary>
            <param name="url">The URL to redirect to.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.RedirectResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPreserveMethod(System.String)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.RedirectResult"/> object with <see cref="P:Microsoft.AspNetCore.Mvc.RedirectResult.Permanent"/> set to false
            and <see cref="P:Microsoft.AspNetCore.Mvc.RedirectResult.PreserveMethod"/> set to true (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status307TemporaryRedirect"/>)
            using the specified <paramref name="url"/>.
            </summary>
            <param name="url">The URL to redirect to.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.RedirectResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectPermanentPreserveMethod(System.String)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.RedirectResult"/> object with <see cref="P:Microsoft.AspNetCore.Mvc.RedirectResult.Permanent"/> set to true
            and <see cref="P:Microsoft.AspNetCore.Mvc.RedirectResult.PreserveMethod"/> set to true (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status308PermanentRedirect"/>)
            using the specified <paramref name="url"/>.
            </summary>
            <param name="url">The URL to redirect to.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.RedirectResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirect(System.String)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.LocalRedirectResult"/> object that redirects
            (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status302Found"/>) to the specified local <paramref name="localUrl"/>.
            </summary>
            <param name="localUrl">The local URL to redirect to.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.LocalRedirectResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanent(System.String)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.LocalRedirectResult"/> object with <see cref="P:Microsoft.AspNetCore.Mvc.LocalRedirectResult.Permanent"/> set to
            true (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status301MovedPermanently"/>) using the specified <paramref name="localUrl"/>.
            </summary>
            <param name="localUrl">The local URL to redirect to.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.LocalRedirectResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPreserveMethod(System.String)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.LocalRedirectResult"/> object with <see cref="P:Microsoft.AspNetCore.Mvc.LocalRedirectResult.Permanent"/> set to
            false and <see cref="P:Microsoft.AspNetCore.Mvc.LocalRedirectResult.PreserveMethod"/> set to true
            (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status307TemporaryRedirect"/>) using the specified <paramref name="localUrl"/>.
            </summary>
            <param name="localUrl">The local URL to redirect to.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.LocalRedirectResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.LocalRedirectPermanentPreserveMethod(System.String)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.LocalRedirectResult"/> object with <see cref="P:Microsoft.AspNetCore.Mvc.LocalRedirectResult.Permanent"/> set to
            true and <see cref="P:Microsoft.AspNetCore.Mvc.LocalRedirectResult.PreserveMethod"/> set to true
            (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status308PermanentRedirect"/>) using the specified <paramref name="localUrl"/>.
            </summary>
            <param name="localUrl">The local URL to redirect to.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.LocalRedirectResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction">
             <summary>
             Redirects (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status302Found"/>) to an action with the same name as current one.
             The 'controller' and 'action' names are retrieved from the ambient values of the current request.
             </summary>
             <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToActionResult"/> for the response.</returns>
             <example>
             A POST request to an action named "Product" updates a product and redirects to an action, also named
             "Product", showing details of the updated product.
             <code>
             [HttpGet]
             public IActionResult Product(int id)
             {
                 var product = RetrieveProduct(id);
                 return View(product);
             }
            
             [HttpPost]
             public IActionResult Product(int id, Product product)
             {
                 UpdateProduct(product);
                 return RedirectToAction();
             }
             </code>
             </example>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String)">
            <summary>
            Redirects (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status302Found"/>) to the specified action using the <paramref name="actionName"/>.
            </summary>
            <param name="actionName">The name of the action.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToActionResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.Object)">
            <summary>
            Redirects (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status302Found"/>) to the specified action using the
            <paramref name="actionName"/> and <paramref name="routeValues"/>.
            </summary>
            <param name="actionName">The name of the action.</param>
            <param name="routeValues">The parameters for a route.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToActionResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.String)">
            <summary>
            Redirects (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status302Found"/>) to the specified action using the
            <paramref name="actionName"/> and the <paramref name="controllerName"/>.
            </summary>
            <param name="actionName">The name of the action.</param>
            <param name="controllerName">The name of the controller.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToActionResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.String,System.Object)">
            <summary>
            Redirects (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status302Found"/>) to the specified action using the specified
            <paramref name="actionName"/>, <paramref name="controllerName"/>, and <paramref name="routeValues"/>.
            </summary>
            <param name="actionName">The name of the action.</param>
            <param name="controllerName">The name of the controller.</param>
            <param name="routeValues">The parameters for a route.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToActionResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.String,System.String)">
            <summary>
            Redirects (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status302Found"/>) to the specified action using the specified
            <paramref name="actionName"/>, <paramref name="controllerName"/>, and <paramref name="fragment"/>.
            </summary>
            <param name="actionName">The name of the action.</param>
            <param name="controllerName">The name of the controller.</param>
            <param name="fragment">The fragment to add to the URL.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToActionResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToAction(System.String,System.String,System.Object,System.String)">
            <summary>
            Redirects (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status302Found"/>) to the specified action using the specified <paramref name="actionName"/>,
            <paramref name="controllerName"/>, <paramref name="routeValues"/>, and <paramref name="fragment"/>.
            </summary>
            <param name="actionName">The name of the action.</param>
            <param name="controllerName">The name of the controller.</param>
            <param name="routeValues">The parameters for a route.</param>
            <param name="fragment">The fragment to add to the URL.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToActionResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPreserveMethod(System.String,System.String,System.Object,System.String)">
            <summary>
            Redirects (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status307TemporaryRedirect"/>) to the specified action with
            <see cref="P:Microsoft.AspNetCore.Mvc.RedirectToActionResult.Permanent"/> set to false and <see cref="P:Microsoft.AspNetCore.Mvc.RedirectToActionResult.PreserveMethod"/>
            set to true, using the specified <paramref name="actionName"/>, <paramref name="controllerName"/>,
            <paramref name="routeValues"/>, and <paramref name="fragment"/>.
            </summary>
            <param name="actionName">The name of the action.</param>
            <param name="controllerName">The name of the controller.</param>
            <param name="routeValues">The route data to use for generating the URL.</param>
            <param name="fragment">The fragment to add to the URL.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToActionResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String)">
            <summary>
            Redirects (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status301MovedPermanently"/>) to the specified action with
            <see cref="P:Microsoft.AspNetCore.Mvc.RedirectToActionResult.Permanent"/> set to true using the specified <paramref name="actionName"/>.
            </summary>
            <param name="actionName">The name of the action.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToActionResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.Object)">
            <summary>
            Redirects (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status301MovedPermanently"/>) to the specified action with
            <see cref="P:Microsoft.AspNetCore.Mvc.RedirectToActionResult.Permanent"/> set to true using the specified <paramref name="actionName"/>
            and <paramref name="routeValues"/>.
            </summary>
            <param name="actionName">The name of the action.</param>
            <param name="routeValues">The parameters for a route.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToActionResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.String)">
            <summary>
            Redirects (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status301MovedPermanently"/>) to the specified action with
            <see cref="P:Microsoft.AspNetCore.Mvc.RedirectToActionResult.Permanent"/> set to true using the specified <paramref name="actionName"/>
            and <paramref name="controllerName"/>.
            </summary>
            <param name="actionName">The name of the action.</param>
            <param name="controllerName">The name of the controller.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToActionResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.String,System.String)">
            <summary>
            Redirects (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status301MovedPermanently"/>) to the specified action with
            <see cref="P:Microsoft.AspNetCore.Mvc.RedirectToActionResult.Permanent"/> set to true using the specified <paramref name="actionName"/>,
            <paramref name="controllerName"/>, and <paramref name="fragment"/>.
            </summary>
            <param name="actionName">The name of the action.</param>
            <param name="controllerName">The name of the controller.</param>
            <param name="fragment">The fragment to add to the URL.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToActionResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.String,System.Object)">
            <summary>
            Redirects (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status301MovedPermanently"/>) to the specified action with
            <see cref="P:Microsoft.AspNetCore.Mvc.RedirectToActionResult.Permanent"/> set to true using the specified <paramref name="actionName"/>,
            <paramref name="controllerName"/>, and <paramref name="routeValues"/>.
            </summary>
            <param name="actionName">The name of the action.</param>
            <param name="controllerName">The name of the controller.</param>
            <param name="routeValues">The parameters for a route.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToActionResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanent(System.String,System.String,System.Object,System.String)">
            <summary>
            Redirects (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status301MovedPermanently"/>) to the specified action with
            <see cref="P:Microsoft.AspNetCore.Mvc.RedirectToActionResult.Permanent"/> set to true using the specified <paramref name="actionName"/>,
            <paramref name="controllerName"/>, <paramref name="routeValues"/>, and <paramref name="fragment"/>.
            </summary>
            <param name="actionName">The name of the action.</param>
            <param name="controllerName">The name of the controller.</param>
            <param name="routeValues">The parameters for a route.</param>
            <param name="fragment">The fragment to add to the URL.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToActionResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToActionPermanentPreserveMethod(System.String,System.String,System.Object,System.String)">
            <summary>
            Redirects (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status308PermanentRedirect"/>) to the specified action with
            <see cref="P:Microsoft.AspNetCore.Mvc.RedirectToActionResult.Permanent"/> set to true and <see cref="P:Microsoft.AspNetCore.Mvc.RedirectToActionResult.PreserveMethod"/>
            set to true, using the specified <paramref name="actionName"/>, <paramref name="controllerName"/>,
            <paramref name="routeValues"/>, and <paramref name="fragment"/>.
            </summary>
            <param name="actionName">The name of the action.</param>
            <param name="controllerName">The name of the controller.</param>
            <param name="routeValues">The route data to use for generating the URL.</param>
            <param name="fragment">The fragment to add to the URL.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToActionResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String)">
            <summary>
            Redirects (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status302Found"/>) to the specified route using the specified <paramref name="routeName"/>.
            </summary>
            <param name="routeName">The name of the route.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToRouteResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.Object)">
            <summary>
            Redirects (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status302Found"/>) to the specified route using the specified <paramref name="routeValues"/>.
            </summary>
            <param name="routeValues">The parameters for a route.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToRouteResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String,System.Object)">
            <summary>
            Redirects (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status302Found"/>) to the specified route using the specified
            <paramref name="routeName"/> and <paramref name="routeValues"/>.
            </summary>
            <param name="routeName">The name of the route.</param>
            <param name="routeValues">The parameters for a route.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToRouteResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String,System.String)">
            <summary>
            Redirects (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status302Found"/>) to the specified route using the specified
            <paramref name="routeName"/> and <paramref name="fragment"/>.
            </summary>
            <param name="routeName">The name of the route.</param>
            <param name="fragment">The fragment to add to the URL.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToRouteResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoute(System.String,System.Object,System.String)">
            <summary>
            Redirects (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status302Found"/>) to the specified route using the specified
            <paramref name="routeName"/>, <paramref name="routeValues"/>, and <paramref name="fragment"/>.
            </summary>
            <param name="routeName">The name of the route.</param>
            <param name="routeValues">The parameters for a route.</param>
            <param name="fragment">The fragment to add to the URL.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToRouteResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePreserveMethod(System.String,System.Object,System.String)">
            <summary>
            Redirects (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status307TemporaryRedirect"/>) to the specified route with
            <see cref="P:Microsoft.AspNetCore.Mvc.RedirectToRouteResult.Permanent"/> set to false and <see cref="P:Microsoft.AspNetCore.Mvc.RedirectToRouteResult.PreserveMethod"/>
            set to true, using the specified <paramref name="routeName"/>, <paramref name="routeValues"/>, and <paramref name="fragment"/>.
            </summary>
            <param name="routeName">The name of the route.</param>
            <param name="routeValues">The route data to use for generating the URL.</param>
            <param name="fragment">The fragment to add to the URL.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToRouteResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String)">
            <summary>
            Redirects (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status301MovedPermanently"/>) to the specified route with
            <see cref="P:Microsoft.AspNetCore.Mvc.RedirectToRouteResult.Permanent"/> set to true using the specified <paramref name="routeName"/>.
            </summary>
            <param name="routeName">The name of the route.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToRouteResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.Object)">
            <summary>
            Redirects (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status301MovedPermanently"/>) to the specified route with
            <see cref="P:Microsoft.AspNetCore.Mvc.RedirectToRouteResult.Permanent"/> set to true using the specified <paramref name="routeValues"/>.
            </summary>
            <param name="routeValues">The parameters for a route.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToRouteResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String,System.Object)">
            <summary>
            Redirects (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status301MovedPermanently"/>) to the specified route with
            <see cref="P:Microsoft.AspNetCore.Mvc.RedirectToRouteResult.Permanent"/> set to true using the specified <paramref name="routeName"/>
            and <paramref name="routeValues"/>.
            </summary>
            <param name="routeName">The name of the route.</param>
            <param name="routeValues">The parameters for a route.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToRouteResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String,System.String)">
            <summary>
            Redirects (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status301MovedPermanently"/>) to the specified route with
            <see cref="P:Microsoft.AspNetCore.Mvc.RedirectToRouteResult.Permanent"/> set to true using the specified <paramref name="routeName"/>
            and <paramref name="fragment"/>.
            </summary>
            <param name="routeName">The name of the route.</param>
            <param name="fragment">The fragment to add to the URL.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToRouteResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanent(System.String,System.Object,System.String)">
            <summary>
            Redirects (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status301MovedPermanently"/>) to the specified route with
            <see cref="P:Microsoft.AspNetCore.Mvc.RedirectToRouteResult.Permanent"/> set to true using the specified <paramref name="routeName"/>,
            <paramref name="routeValues"/>, and <paramref name="fragment"/>.
            </summary>
            <param name="routeName">The name of the route.</param>
            <param name="routeValues">The parameters for a route.</param>
            <param name="fragment">The fragment to add to the URL.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToRouteResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToRoutePermanentPreserveMethod(System.String,System.Object,System.String)">
            <summary>
            Redirects (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status308PermanentRedirect"/>) to the specified route with
            <see cref="P:Microsoft.AspNetCore.Mvc.RedirectToRouteResult.Permanent"/> set to true and <see cref="P:Microsoft.AspNetCore.Mvc.RedirectToRouteResult.PreserveMethod"/>
            set to true, using the specified <paramref name="routeName"/>, <paramref name="routeValues"/>, and <paramref name="fragment"/>.
            </summary>
            <param name="routeName">The name of the route.</param>
            <param name="routeValues">The route data to use for generating the URL.</param>
            <param name="fragment">The fragment to add to the URL.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToRouteResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String)">
            <summary>
            Redirects (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status302Found"/>) to the specified <paramref name="pageName"/>.
            </summary>
            <param name="pageName">The name of the page.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToPageResult"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.Object)">
            <summary>
            Redirects (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status302Found"/>) to the specified <paramref name="pageName"/>
            using the specified <paramref name="routeValues"/>.
            </summary>
            <param name="pageName">The name of the page.</param>
            <param name="routeValues">The parameters for a route.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToPageResult"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.String)">
            <summary>
            Redirects (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status302Found"/>) to the specified <paramref name="pageName"/>
            using the specified <paramref name="pageHandler"/>.
            </summary>
            <param name="pageName">The name of the page.</param>
            <param name="pageHandler">The page handler to redirect to.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToPageResult"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.String,System.Object)">
            <summary>
            Redirects (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status302Found"/>) to the specified <paramref name="pageName"/>.
            </summary>
            <param name="pageName">The name of the page.</param>
            <param name="pageHandler">The page handler to redirect to.</param>
            <param name="routeValues">The parameters for a route.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToPageResult"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.String,System.String)">
            <summary>
            Redirects (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status302Found"/>) to the specified <paramref name="pageName"/>
            using the specified <paramref name="fragment"/>.
            </summary>
            <param name="pageName">The name of the page.</param>
            <param name="pageHandler">The page handler to redirect to.</param>
            <param name="fragment">The fragment to add to the URL.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToPageResult"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPage(System.String,System.String,System.Object,System.String)">
            <summary>
            Redirects (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status302Found"/>) to the specified <paramref name="pageName"/>
            using the specified <paramref name="routeValues"/> and <paramref name="fragment"/>.
            </summary>
            <param name="pageName">The name of the page.</param>
            <param name="pageHandler">The page handler to redirect to.</param>
            <param name="routeValues">The parameters for a route.</param>
            <param name="fragment">The fragment to add to the URL.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToPageResult"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String)">
            <summary>
            Redirects (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status301MovedPermanently"/>) to the specified <paramref name="pageName"/>.
            </summary>
            <param name="pageName">The name of the page.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToPageResult"/> with <see cref="P:Microsoft.AspNetCore.Mvc.RedirectToPageResult.Permanent"/> set.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String,System.Object)">
            <summary>
            Redirects (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status301MovedPermanently"/>) to the specified <paramref name="pageName"/>
            using the specified <paramref name="routeValues"/>.
            </summary>
            <param name="pageName">The name of the page.</param>
            <param name="routeValues">The parameters for a route.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToPageResult"/> with <see cref="P:Microsoft.AspNetCore.Mvc.RedirectToPageResult.Permanent"/> set.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String,System.String)">
            <summary>
            Redirects (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status301MovedPermanently"/>) to the specified <paramref name="pageName"/>
            using the specified <paramref name="pageHandler"/>.
            </summary>
            <param name="pageName">The name of the page.</param>
            <param name="pageHandler">The page handler to redirect to.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToPageResult"/> with <see cref="P:Microsoft.AspNetCore.Mvc.RedirectToPageResult.Permanent"/> set.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String,System.String,System.String)">
            <summary>
            Redirects (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status301MovedPermanently"/>) to the specified <paramref name="pageName"/>
            using the specified <paramref name="fragment"/>.
            </summary>
            <param name="pageName">The name of the page.</param>
            <param name="pageHandler">The page handler to redirect to.</param>
            <param name="fragment">The fragment to add to the URL.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToPageResult"/> with <see cref="P:Microsoft.AspNetCore.Mvc.RedirectToPageResult.Permanent"/> set.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanent(System.String,System.String,System.Object,System.String)">
            <summary>
            Redirects (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status301MovedPermanently"/>) to the specified <paramref name="pageName"/>
            using the specified <paramref name="routeValues"/> and <paramref name="fragment"/>.
            </summary>
            <param name="pageName">The name of the page.</param>
            <param name="pageHandler">The page handler to redirect to.</param>
            <param name="routeValues">The parameters for a route.</param>
            <param name="fragment">The fragment to add to the URL.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToPageResult"/> with <see cref="P:Microsoft.AspNetCore.Mvc.RedirectToPageResult.Permanent"/> set.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePreserveMethod(System.String,System.String,System.Object,System.String)">
            <summary>
            Redirects (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status307TemporaryRedirect"/>) to the specified page with
            <see cref="P:Microsoft.AspNetCore.Mvc.RedirectToRouteResult.Permanent"/> set to false and <see cref="P:Microsoft.AspNetCore.Mvc.RedirectToRouteResult.PreserveMethod"/>
            set to true, using the specified <paramref name="pageName"/>, <paramref name="routeValues"/>, and <paramref name="fragment"/>.
            </summary>
            <param name="pageName">The name of the page.</param>
            <param name="pageHandler">The page handler to redirect to.</param>
            <param name="routeValues">The route data to use for generating the URL.</param>
            <param name="fragment">The fragment to add to the URL.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToRouteResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.RedirectToPagePermanentPreserveMethod(System.String,System.String,System.Object,System.String)">
            <summary>
            Redirects (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status308PermanentRedirect"/>) to the specified route with
            <see cref="P:Microsoft.AspNetCore.Mvc.RedirectToRouteResult.Permanent"/> set to true and <see cref="P:Microsoft.AspNetCore.Mvc.RedirectToRouteResult.PreserveMethod"/>
            set to true, using the specified <paramref name="pageName"/>, <paramref name="routeValues"/>, and <paramref name="fragment"/>.
            </summary>
            <param name="pageName">The name of the page.</param>
            <param name="pageHandler">The page handler to redirect to.</param>
            <param name="routeValues">The route data to use for generating the URL.</param>
            <param name="fragment">The fragment to add to the URL.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToRouteResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String)">
            <summary>
            Returns a file with the specified <paramref name="fileContents" /> as content (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status200OK"/>),
            and the specified <paramref name="contentType" /> as the Content-Type.
            This supports range requests (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status206PartialContent"/> or
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status416RangeNotSatisfiable"/> if the range is not satisfiable).
            </summary>
            <param name="fileContents">The file contents.</param>
            <param name="contentType">The Content-Type of the file.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.FileContentResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.Boolean)">
            <summary>
            Returns a file with the specified <paramref name="fileContents" /> as content (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status200OK"/>),
            and the specified <paramref name="contentType" /> as the Content-Type.
            This supports range requests (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status206PartialContent"/> or
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status416RangeNotSatisfiable"/> if the range is not satisfiable).
            </summary>
            <param name="fileContents">The file contents.</param>
            <param name="contentType">The Content-Type of the file.</param>
            <param name="enableRangeProcessing">Set to <c>true</c> to enable range requests processing.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.FileContentResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.String)">
            <summary>
            Returns a file with the specified <paramref name="fileContents" /> as content (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status200OK"/>), the
            specified <paramref name="contentType" /> as the Content-Type and the specified <paramref name="fileDownloadName" /> as the suggested file name.
            This supports range requests (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status206PartialContent"/> or
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status416RangeNotSatisfiable"/> if the range is not satisfiable).
            </summary>
            <param name="fileContents">The file contents.</param>
            <param name="contentType">The Content-Type of the file.</param>
            <param name="fileDownloadName">The suggested file name.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.FileContentResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.String,System.Boolean)">
            <summary>
            Returns a file with the specified <paramref name="fileContents" /> as content (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status200OK"/>), the
            specified <paramref name="contentType" /> as the Content-Type and the specified <paramref name="fileDownloadName" /> as the suggested file name.
            This supports range requests (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status206PartialContent"/> or
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status416RangeNotSatisfiable"/> if the range is not satisfiable).
            </summary>
            <param name="fileContents">The file contents.</param>
            <param name="contentType">The Content-Type of the file.</param>
            <param name="fileDownloadName">The suggested file name.</param>
            <param name="enableRangeProcessing">Set to <c>true</c> to enable range requests processing.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.FileContentResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)">
            <summary>
            Returns a file with the specified <paramref name="fileContents" /> as content (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status200OK"/>),
            and the specified <paramref name="contentType" /> as the Content-Type.
            This supports range requests (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status206PartialContent"/> or
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status416RangeNotSatisfiable"/> if the range is not satisfiable).
            </summary>
            <param name="fileContents">The file contents.</param>
            <param name="contentType">The Content-Type of the file.</param>
            <param name="lastModified">The <see cref="T:System.DateTimeOffset"/> of when the file was last modified.</param>
            <param name="entityTag">The <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue"/> associated with the file.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.FileContentResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)">
            <summary>
            Returns a file with the specified <paramref name="fileContents" /> as content (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status200OK"/>),
            and the specified <paramref name="contentType" /> as the Content-Type.
            This supports range requests (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status206PartialContent"/> or
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status416RangeNotSatisfiable"/> if the range is not satisfiable).
            </summary>
            <param name="fileContents">The file contents.</param>
            <param name="contentType">The Content-Type of the file.</param>
            <param name="lastModified">The <see cref="T:System.DateTimeOffset"/> of when the file was last modified.</param>
            <param name="entityTag">The <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue"/> associated with the file.</param>
            <param name="enableRangeProcessing">Set to <c>true</c> to enable range requests processing.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.FileContentResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)">
            <summary>
            Returns a file with the specified <paramref name="fileContents" /> as content (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status200OK"/>), the
            specified <paramref name="contentType" /> as the Content-Type, and the specified <paramref name="fileDownloadName" /> as the suggested file name.
            This supports range requests (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status206PartialContent"/> or
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status416RangeNotSatisfiable"/> if the range is not satisfiable).
            </summary>
            <param name="fileContents">The file contents.</param>
            <param name="contentType">The Content-Type of the file.</param>
            <param name="fileDownloadName">The suggested file name.</param>
            <param name="lastModified">The <see cref="T:System.DateTimeOffset"/> of when the file was last modified.</param>
            <param name="entityTag">The <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue"/> associated with the file.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.FileContentResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.Byte[],System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)">
            <summary>
            Returns a file with the specified <paramref name="fileContents" /> as content (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status200OK"/>), the
            specified <paramref name="contentType" /> as the Content-Type, and the specified <paramref name="fileDownloadName" /> as the suggested file name.
            This supports range requests (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status206PartialContent"/> or
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status416RangeNotSatisfiable"/> if the range is not satisfiable).
            </summary>
            <param name="fileContents">The file contents.</param>
            <param name="contentType">The Content-Type of the file.</param>
            <param name="fileDownloadName">The suggested file name.</param>
            <param name="lastModified">The <see cref="T:System.DateTimeOffset"/> of when the file was last modified.</param>
            <param name="entityTag">The <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue"/> associated with the file.</param>
            <param name="enableRangeProcessing">Set to <c>true</c> to enable range requests processing.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.FileContentResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String)">
            <summary>
            Returns a file in the specified <paramref name="fileStream" /> (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status200OK"/>), with the
            specified <paramref name="contentType" /> as the Content-Type.
            This supports range requests (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status206PartialContent"/> or
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status416RangeNotSatisfiable"/> if the range is not satisfiable).
            </summary>
            <param name="fileStream">The <see cref="T:System.IO.Stream"/> with the contents of the file.</param>
            <param name="contentType">The Content-Type of the file.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.FileStreamResult"/> for the response.</returns>
            <remarks>
            The <paramref name="fileStream" /> parameter is disposed after the response is sent.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.Boolean)">
            <summary>
            Returns a file in the specified <paramref name="fileStream" /> (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status200OK"/>), with the
            specified <paramref name="contentType" /> as the Content-Type.
            This supports range requests (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status206PartialContent"/> or
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status416RangeNotSatisfiable"/> if the range is not satisfiable).
            </summary>
            <param name="fileStream">The <see cref="T:System.IO.Stream"/> with the contents of the file.</param>
            <param name="contentType">The Content-Type of the file.</param>
            <param name="enableRangeProcessing">Set to <c>true</c> to enable range requests processing.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.FileStreamResult"/> for the response.</returns>
            <remarks>
            The <paramref name="fileStream" /> parameter is disposed after the response is sent.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.String)">
            <summary>
            Returns a file in the specified <paramref name="fileStream" /> (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status200OK"/>) with the
            specified <paramref name="contentType" /> as the Content-Type and the
            specified <paramref name="fileDownloadName" /> as the suggested file name.
            This supports range requests (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status206PartialContent"/> or
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status416RangeNotSatisfiable"/> if the range is not satisfiable).
            </summary>
            <param name="fileStream">The <see cref="T:System.IO.Stream"/> with the contents of the file.</param>
            <param name="contentType">The Content-Type of the file.</param>
            <param name="fileDownloadName">The suggested file name.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.FileStreamResult"/> for the response.</returns>
            <remarks>
            The <paramref name="fileStream" /> parameter is disposed after the response is sent.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.String,System.Boolean)">
            <summary>
            Returns a file in the specified <paramref name="fileStream" /> (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status200OK"/>) with the
            specified <paramref name="contentType" /> as the Content-Type and the
            specified <paramref name="fileDownloadName" /> as the suggested file name.
            This supports range requests (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status206PartialContent"/> or
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status416RangeNotSatisfiable"/> if the range is not satisfiable).
            </summary>
            <param name="fileStream">The <see cref="T:System.IO.Stream"/> with the contents of the file.</param>
            <param name="contentType">The Content-Type of the file.</param>
            <param name="fileDownloadName">The suggested file name.</param>
            <param name="enableRangeProcessing">Set to <c>true</c> to enable range requests processing.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.FileStreamResult"/> for the response.</returns>
            <remarks>
            The <paramref name="fileStream" /> parameter is disposed after the response is sent.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)">
            <summary>
            Returns a file in the specified <paramref name="fileStream" /> (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status200OK"/>),
            and the specified <paramref name="contentType" /> as the Content-Type.
            This supports range requests (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status206PartialContent"/> or
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status416RangeNotSatisfiable"/> if the range is not satisfiable).
            </summary>
            <param name="fileStream">The <see cref="T:System.IO.Stream"/> with the contents of the file.</param>
            <param name="contentType">The Content-Type of the file.</param>
            <param name="lastModified">The <see cref="T:System.DateTimeOffset"/> of when the file was last modified.</param>
            <param name="entityTag">The <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue"/> associated with the file.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.FileStreamResult"/> for the response.</returns>
            <remarks>
            The <paramref name="fileStream" /> parameter is disposed after the response is sent.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)">
            <summary>
            Returns a file in the specified <paramref name="fileStream" /> (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status200OK"/>),
            and the specified <paramref name="contentType" /> as the Content-Type.
            This supports range requests (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status206PartialContent"/> or
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status416RangeNotSatisfiable"/> if the range is not satisfiable).
            </summary>
            <param name="fileStream">The <see cref="T:System.IO.Stream"/> with the contents of the file.</param>
            <param name="contentType">The Content-Type of the file.</param>
            <param name="lastModified">The <see cref="T:System.DateTimeOffset"/> of when the file was last modified.</param>
            <param name="entityTag">The <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue"/> associated with the file.</param>
            <param name="enableRangeProcessing">Set to <c>true</c> to enable range requests processing.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.FileStreamResult"/> for the response.</returns>
            <remarks>
            The <paramref name="fileStream" /> parameter is disposed after the response is sent.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)">
            <summary>
            Returns a file in the specified <paramref name="fileStream" /> (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status200OK"/>), the
            specified <paramref name="contentType" /> as the Content-Type, and the specified <paramref name="fileDownloadName" /> as the suggested file name.
            This supports range requests (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status206PartialContent"/> or
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status416RangeNotSatisfiable"/> if the range is not satisfiable).
            </summary>
            <param name="fileStream">The <see cref="T:System.IO.Stream"/> with the contents of the file.</param>
            <param name="contentType">The Content-Type of the file.</param>
            <param name="fileDownloadName">The suggested file name.</param>
            <param name="lastModified">The <see cref="T:System.DateTimeOffset"/> of when the file was last modified.</param>
            <param name="entityTag">The <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue"/> associated with the file.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.FileStreamResult"/> for the response.</returns>
            <remarks>
            The <paramref name="fileStream" /> parameter is disposed after the response is sent.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.IO.Stream,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)">
            <summary>
            Returns a file in the specified <paramref name="fileStream" /> (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status200OK"/>), the
            specified <paramref name="contentType" /> as the Content-Type, and the specified <paramref name="fileDownloadName" /> as the suggested file name.
            This supports range requests (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status206PartialContent"/> or
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status416RangeNotSatisfiable"/> if the range is not satisfiable).
            </summary>
            <param name="fileStream">The <see cref="T:System.IO.Stream"/> with the contents of the file.</param>
            <param name="contentType">The Content-Type of the file.</param>
            <param name="fileDownloadName">The suggested file name.</param>
            <param name="lastModified">The <see cref="T:System.DateTimeOffset"/> of when the file was last modified.</param>
            <param name="entityTag">The <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue"/> associated with the file.</param>
            <param name="enableRangeProcessing">Set to <c>true</c> to enable range requests processing.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.FileStreamResult"/> for the response.</returns>
            <remarks>
            The <paramref name="fileStream" /> parameter is disposed after the response is sent.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String)">
            <summary>
            Returns the file specified by <paramref name="virtualPath" /> (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status200OK"/>) with the
            specified <paramref name="contentType" /> as the Content-Type.
            This supports range requests (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status206PartialContent"/> or
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status416RangeNotSatisfiable"/> if the range is not satisfiable).
            </summary>
            <param name="virtualPath">The virtual path of the file to be returned.</param>
            <param name="contentType">The Content-Type of the file.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.VirtualFileResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.Boolean)">
            <summary>
            Returns the file specified by <paramref name="virtualPath" /> (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status200OK"/>) with the
            specified <paramref name="contentType" /> as the Content-Type.
            This supports range requests (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status206PartialContent"/> or
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status416RangeNotSatisfiable"/> if the range is not satisfiable).
            </summary>
            <param name="virtualPath">The virtual path of the file to be returned.</param>
            <param name="contentType">The Content-Type of the file.</param>
            <param name="enableRangeProcessing">Set to <c>true</c> to enable range requests processing.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.VirtualFileResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.String)">
            <summary>
            Returns the file specified by <paramref name="virtualPath" /> (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status200OK"/>) with the
            specified <paramref name="contentType" /> as the Content-Type and the
            specified <paramref name="fileDownloadName" /> as the suggested file name.
            This supports range requests (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status206PartialContent"/> or
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status416RangeNotSatisfiable"/> if the range is not satisfiable).
            </summary>
            <param name="virtualPath">The virtual path of the file to be returned.</param>
            <param name="contentType">The Content-Type of the file.</param>
            <param name="fileDownloadName">The suggested file name.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.VirtualFileResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Returns the file specified by <paramref name="virtualPath" /> (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status200OK"/>) with the
            specified <paramref name="contentType" /> as the Content-Type and the
            specified <paramref name="fileDownloadName" /> as the suggested file name.
            This supports range requests (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status206PartialContent"/> or
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status416RangeNotSatisfiable"/> if the range is not satisfiable).
            </summary>
            <param name="virtualPath">The virtual path of the file to be returned.</param>
            <param name="contentType">The Content-Type of the file.</param>
            <param name="fileDownloadName">The suggested file name.</param>
            <param name="enableRangeProcessing">Set to <c>true</c> to enable range requests processing.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.VirtualFileResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)">
            <summary>
            Returns the file specified by <paramref name="virtualPath" /> (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status200OK"/>), and the
            specified <paramref name="contentType" /> as the Content-Type.
            This supports range requests (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status206PartialContent"/> or
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status416RangeNotSatisfiable"/> if the range is not satisfiable).
            </summary>
            <param name="virtualPath">The virtual path of the file to be returned.</param>
            <param name="contentType">The Content-Type of the file.</param>
            <param name="lastModified">The <see cref="T:System.DateTimeOffset"/> of when the file was last modified.</param>
            <param name="entityTag">The <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue"/> associated with the file.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.VirtualFileResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)">
            <summary>
            Returns the file specified by <paramref name="virtualPath" /> (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status200OK"/>), and the
            specified <paramref name="contentType" /> as the Content-Type.
            This supports range requests (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status206PartialContent"/> or
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status416RangeNotSatisfiable"/> if the range is not satisfiable).
            </summary>
            <param name="virtualPath">The virtual path of the file to be returned.</param>
            <param name="contentType">The Content-Type of the file.</param>
            <param name="lastModified">The <see cref="T:System.DateTimeOffset"/> of when the file was last modified.</param>
            <param name="entityTag">The <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue"/> associated with the file.</param>
            <param name="enableRangeProcessing">Set to <c>true</c> to enable range requests processing.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.VirtualFileResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)">
            <summary>
            Returns the file specified by <paramref name="virtualPath" /> (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status200OK"/>), the
            specified <paramref name="contentType" /> as the Content-Type, and the specified <paramref name="fileDownloadName" /> as the suggested file name.
            This supports range requests (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status206PartialContent"/> or
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status416RangeNotSatisfiable"/> if the range is not satisfiable).
            </summary>
            <param name="virtualPath">The virtual path of the file to be returned.</param>
            <param name="contentType">The Content-Type of the file.</param>
            <param name="fileDownloadName">The suggested file name.</param>
            <param name="lastModified">The <see cref="T:System.DateTimeOffset"/> of when the file was last modified.</param>
            <param name="entityTag">The <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue"/> associated with the file.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.VirtualFileResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.File(System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)">
            <summary>
            Returns the file specified by <paramref name="virtualPath" /> (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status200OK"/>), the
            specified <paramref name="contentType" /> as the Content-Type, and the specified <paramref name="fileDownloadName" /> as the suggested file name.
            This supports range requests (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status206PartialContent"/> or
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status416RangeNotSatisfiable"/> if the range is not satisfiable).
            </summary>
            <param name="virtualPath">The virtual path of the file to be returned.</param>
            <param name="contentType">The Content-Type of the file.</param>
            <param name="fileDownloadName">The suggested file name.</param>
            <param name="lastModified">The <see cref="T:System.DateTimeOffset"/> of when the file was last modified.</param>
            <param name="entityTag">The <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue"/> associated with the file.</param>
            <param name="enableRangeProcessing">Set to <c>true</c> to enable range requests processing.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.VirtualFileResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String)">
            <summary>
            Returns the file specified by <paramref name="physicalPath" /> (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status200OK"/>) with the
            specified <paramref name="contentType" /> as the Content-Type.
            This supports range requests (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status206PartialContent"/> or
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status416RangeNotSatisfiable"/> if the range is not satisfiable).
            </summary>
            <param name="physicalPath">The path to the file. The path must be an absolute path.</param>
            <param name="contentType">The Content-Type of the file.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.PhysicalFileResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.Boolean)">
            <summary>
            Returns the file specified by <paramref name="physicalPath" /> (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status200OK"/>) with the
            specified <paramref name="contentType" /> as the Content-Type.
            This supports range requests (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status206PartialContent"/> or
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status416RangeNotSatisfiable"/> if the range is not satisfiable).
            </summary>
            <param name="physicalPath">The path to the file. The path must be an absolute path.</param>
            <param name="contentType">The Content-Type of the file.</param>
            <param name="enableRangeProcessing">Set to <c>true</c> to enable range requests processing.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.PhysicalFileResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.String)">
            <summary>
            Returns the file specified by <paramref name="physicalPath" /> (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status200OK"/>) with the
            specified <paramref name="contentType" /> as the Content-Type and the
            specified <paramref name="fileDownloadName" /> as the suggested file name.
            This supports range requests (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status206PartialContent"/> or
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status416RangeNotSatisfiable"/> if the range is not satisfiable).
            </summary>
            <param name="physicalPath">The path to the file. The path must be an absolute path.</param>
            <param name="contentType">The Content-Type of the file.</param>
            <param name="fileDownloadName">The suggested file name.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.PhysicalFileResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Returns the file specified by <paramref name="physicalPath" /> (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status200OK"/>) with the
            specified <paramref name="contentType" /> as the Content-Type and the
            specified <paramref name="fileDownloadName" /> as the suggested file name.
            This supports range requests (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status206PartialContent"/> or
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status416RangeNotSatisfiable"/> if the range is not satisfiable).
            </summary>
            <param name="physicalPath">The path to the file. The path must be an absolute path.</param>
            <param name="contentType">The Content-Type of the file.</param>
            <param name="fileDownloadName">The suggested file name.</param>
            <param name="enableRangeProcessing">Set to <c>true</c> to enable range requests processing.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.PhysicalFileResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)">
            <summary>
            Returns the file specified by <paramref name="physicalPath" /> (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status200OK"/>), and
            the specified <paramref name="contentType" /> as the Content-Type.
            This supports range requests (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status206PartialContent"/> or
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status416RangeNotSatisfiable"/> if the range is not satisfiable).
            </summary>
            <param name="physicalPath">The path to the file. The path must be an absolute path.</param>
            <param name="contentType">The Content-Type of the file.</param>
            <param name="lastModified">The <see cref="T:System.DateTimeOffset"/> of when the file was last modified.</param>
            <param name="entityTag">The <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue"/> associated with the file.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.PhysicalFileResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)">
            <summary>
            Returns the file specified by <paramref name="physicalPath" /> (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status200OK"/>), and
            the specified <paramref name="contentType" /> as the Content-Type.
            This supports range requests (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status206PartialContent"/> or
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status416RangeNotSatisfiable"/> if the range is not satisfiable).
            </summary>
            <param name="physicalPath">The path to the file. The path must be an absolute path.</param>
            <param name="contentType">The Content-Type of the file.</param>
            <param name="lastModified">The <see cref="T:System.DateTimeOffset"/> of when the file was last modified.</param>
            <param name="entityTag">The <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue"/> associated with the file.</param>
            <param name="enableRangeProcessing">Set to <c>true</c> to enable range requests processing.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.PhysicalFileResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)">
            <summary>
            Returns the file specified by <paramref name="physicalPath" /> (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status200OK"/>), the
            specified <paramref name="contentType" /> as the Content-Type, and the specified <paramref name="fileDownloadName" /> as the suggested file name.
            This supports range requests (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status206PartialContent"/> or
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status416RangeNotSatisfiable"/> if the range is not satisfiable).
            </summary>
            <param name="physicalPath">The path to the file. The path must be an absolute path.</param>
            <param name="contentType">The Content-Type of the file.</param>
            <param name="fileDownloadName">The suggested file name.</param>
            <param name="lastModified">The <see cref="T:System.DateTimeOffset"/> of when the file was last modified.</param>
            <param name="entityTag">The <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue"/> associated with the file.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.PhysicalFileResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.PhysicalFile(System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)">
            <summary>
            Returns the file specified by <paramref name="physicalPath" /> (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status200OK"/>), the
            specified <paramref name="contentType" /> as the Content-Type, and the specified <paramref name="fileDownloadName" /> as the suggested file name.
            This supports range requests (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status206PartialContent"/> or
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status416RangeNotSatisfiable"/> if the range is not satisfiable).
            </summary>
            <param name="physicalPath">The path to the file. The path must be an absolute path.</param>
            <param name="contentType">The Content-Type of the file.</param>
            <param name="fileDownloadName">The suggested file name.</param>
            <param name="lastModified">The <see cref="T:System.DateTimeOffset"/> of when the file was last modified.</param>
            <param name="entityTag">The <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue"/> associated with the file.</param>
            <param name="enableRangeProcessing">Set to <c>true</c> to enable range requests processing.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.PhysicalFileResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized">
            <summary>
            Creates an <see cref="T:Microsoft.AspNetCore.Mvc.UnauthorizedResult"/> that produces an <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status401Unauthorized"/> response.
            </summary>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.UnauthorizedResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.Unauthorized(System.Object)">
            <summary>
            Creates an <see cref="T:Microsoft.AspNetCore.Mvc.UnauthorizedObjectResult"/> that produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status401Unauthorized"/> response.
            </summary>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.UnauthorizedObjectResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.NotFound">
            <summary>
            Creates an <see cref="T:Microsoft.AspNetCore.Mvc.NotFoundResult"/> that produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status404NotFound"/> response.
            </summary>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.NotFoundResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.NotFound(System.Object)">
            <summary>
            Creates an <see cref="T:Microsoft.AspNetCore.Mvc.NotFoundObjectResult"/> that produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status404NotFound"/> response.
            </summary>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.NotFoundObjectResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest">
            <summary>
            Creates an <see cref="T:Microsoft.AspNetCore.Mvc.BadRequestResult"/> that produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status400BadRequest"/> response.
            </summary>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.BadRequestResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(System.Object)">
            <summary>
            Creates an <see cref="T:Microsoft.AspNetCore.Mvc.BadRequestObjectResult"/> that produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status400BadRequest"/> response.
            </summary>
            <param name="error">An error object to be returned to the client.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.BadRequestObjectResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.BadRequest(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)">
            <summary>
            Creates an <see cref="T:Microsoft.AspNetCore.Mvc.BadRequestObjectResult"/> that produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status400BadRequest"/> response.
            </summary>
            <param name="modelState">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary" /> containing errors to be returned to the client.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.BadRequestObjectResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity">
            <summary>
            Creates an <see cref="T:Microsoft.AspNetCore.Mvc.UnprocessableEntityResult"/> that produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status422UnprocessableEntity"/> response.
            </summary>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.UnprocessableEntityResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity(System.Object)">
            <summary>
            Creates an <see cref="T:Microsoft.AspNetCore.Mvc.UnprocessableEntityObjectResult"/> that produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status422UnprocessableEntity"/> response.
            </summary>
            <param name="error">An error object to be returned to the client.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.UnprocessableEntityObjectResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.UnprocessableEntity(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)">
            <summary>
            Creates an <see cref="T:Microsoft.AspNetCore.Mvc.UnprocessableEntityObjectResult"/> that produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status422UnprocessableEntity"/> response.
            </summary>
            <param name="modelState">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary" /> containing errors to be returned to the client.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.UnprocessableEntityObjectResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.Conflict">
            <summary>
            Creates an <see cref="T:Microsoft.AspNetCore.Mvc.ConflictResult"/> that produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status409Conflict"/> response.
            </summary>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.ConflictResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.Conflict(System.Object)">
            <summary>
            Creates an <see cref="T:Microsoft.AspNetCore.Mvc.ConflictObjectResult"/> that produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status409Conflict"/> response.
            </summary>
            <param name="error">Contains errors to be returned to the client.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.ConflictObjectResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.Conflict(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)">
            <summary>
            Creates an <see cref="T:Microsoft.AspNetCore.Mvc.ConflictObjectResult"/> that produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status409Conflict"/> response.
            </summary>
            <param name="modelState">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary" /> containing errors to be returned to the client.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.ConflictObjectResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.Problem(System.String,System.String,System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Creates an <see cref="T:Microsoft.AspNetCore.Mvc.ObjectResult"/> that produces a <see cref="T:Microsoft.AspNetCore.Mvc.ProblemDetails"/> response.
            </summary>
            <param name="statusCode">The value for <see cref="P:Microsoft.AspNetCore.Mvc.ProblemDetails.Status" />.</param>
            <param name="detail">The value for <see cref="P:Microsoft.AspNetCore.Mvc.ProblemDetails.Detail" />.</param>
            <param name="instance">The value for <see cref="P:Microsoft.AspNetCore.Mvc.ProblemDetails.Instance" />.</param>
            <param name="title">The value for <see cref="P:Microsoft.AspNetCore.Mvc.ProblemDetails.Title" />.</param>
            <param name="type">The value for <see cref="P:Microsoft.AspNetCore.Mvc.ProblemDetails.Type" />.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.ObjectResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(Microsoft.AspNetCore.Mvc.ValidationProblemDetails)">
            <summary>
            Creates an <see cref="T:Microsoft.AspNetCore.Mvc.BadRequestObjectResult"/> that produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status400BadRequest"/> response.
            </summary>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.BadRequestObjectResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)">
            <summary>
            Creates an <see cref="T:Microsoft.AspNetCore.Mvc.ActionResult"/> that produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status400BadRequest"/> response
            with validation errors from <paramref name="modelStateDictionary"/>.
            </summary>
            <param name="modelStateDictionary">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/>.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.BadRequestObjectResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem">
            <summary>
            Creates an <see cref="T:Microsoft.AspNetCore.Mvc.ActionResult"/> that produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status400BadRequest"/> response
            with validation errors from <see cref="P:Microsoft.AspNetCore.Mvc.ControllerBase.ModelState"/>.
            </summary>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.ActionResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.ValidationProblem(System.String,System.String,System.Nullable{System.Int32},System.String,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)">
            <summary>
            Creates an <see cref="T:Microsoft.AspNetCore.Mvc.ActionResult"/> that produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status400BadRequest"/> response
            with a <see cref="T:Microsoft.AspNetCore.Mvc.ValidationProblemDetails"/> value.
            </summary>
            <param name="detail">The value for <see cref="P:Microsoft.AspNetCore.Mvc.ProblemDetails.Detail" />.</param>
            <param name="instance">The value for <see cref="P:Microsoft.AspNetCore.Mvc.ProblemDetails.Instance" />.</param>
            <param name="statusCode">The status code.</param>
            <param name="title">The value for <see cref="P:Microsoft.AspNetCore.Mvc.ProblemDetails.Title" />.</param>
            <param name="type">The value for <see cref="P:Microsoft.AspNetCore.Mvc.ProblemDetails.Type" />.</param>
            <param name="modelStateDictionary">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/>.
            When <see langword="null"/> uses <see cref="P:Microsoft.AspNetCore.Mvc.ControllerBase.ModelState"/>.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.ActionResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.Created">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.CreatedResult"/> object that produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status201Created"/> response.
            </summary>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.CreatedResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.String,System.Object)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.CreatedResult"/> object that produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status201Created"/> response.
            </summary>
            <param name="uri">The URI at which the content has been created.</param>
            <param name="value">The content value to format in the entity body.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.CreatedResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.Created(System.Uri,System.Object)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.CreatedResult"/> object that produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status201Created"/> response.
            </summary>
            <param name="uri">The URI at which the content has been created.</param>
            <param name="value">The content value to format in the entity body.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.CreatedResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String,System.Object)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.CreatedAtActionResult"/> object that produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status201Created"/> response.
            </summary>
            <param name="actionName">The name of the action to use for generating the URL.</param>
            <param name="value">The content value to format in the entity body.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.CreatedAtActionResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String,System.Object,System.Object)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.CreatedAtActionResult"/> object that produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status201Created"/> response.
            </summary>
            <param name="actionName">The name of the action to use for generating the URL.</param>
            <param name="routeValues">The route data to use for generating the URL.</param>
            <param name="value">The content value to format in the entity body.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.CreatedAtActionResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtAction(System.String,System.String,System.Object,System.Object)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.CreatedAtActionResult"/> object that produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status201Created"/> response.
            </summary>
            <param name="actionName">The name of the action to use for generating the URL.</param>
            <param name="controllerName">The name of the controller to use for generating the URL.</param>
            <param name="routeValues">The route data to use for generating the URL.</param>
            <param name="value">The content value to format in the entity body.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.CreatedAtActionResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String,System.Object)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.CreatedAtRouteResult"/> object that produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status201Created"/> response.
            </summary>
            <param name="routeName">The name of the route to use for generating the URL.</param>
            <param name="value">The content value to format in the entity body.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.CreatedAtRouteResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.Object,System.Object)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.CreatedAtRouteResult"/> object that produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status201Created"/> response.
            </summary>
            <param name="routeValues">The route data to use for generating the URL.</param>
            <param name="value">The content value to format in the entity body.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.CreatedAtRouteResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.CreatedAtRoute(System.String,System.Object,System.Object)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.CreatedAtRouteResult"/> object that produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status201Created"/> response.
            </summary>
            <param name="routeName">The name of the route to use for generating the URL.</param>
            <param name="routeValues">The route data to use for generating the URL.</param>
            <param name="value">The content value to format in the entity body.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.CreatedAtRouteResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.Accepted">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedResult"/> object that produces an <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status202Accepted"/> response.
            </summary>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Object)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedResult"/> object that produces an <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status202Accepted"/> response.
            </summary>
            <param name="value">The optional content value to format in the entity body; may be null.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedResult"/> object that produces an <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status202Accepted"/> response.
            </summary>
            <param name="uri">The optional URI with the location at which the status of requested content can be monitored.
            May be null.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedResult"/> object that produces an <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status202Accepted"/> response.
            </summary>
            <param name="uri">The optional URI with the location at which the status of requested content can be monitored.
            May be null.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.String,System.Object)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedResult"/> object that produces an <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status202Accepted"/> response.
            </summary>
            <param name="uri">The URI with the location at which the status of requested content can be monitored.</param>
            <param name="value">The optional content value to format in the entity body; may be null.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.Accepted(System.Uri,System.Object)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedResult"/> object that produces an <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status202Accepted"/> response.
            </summary>
            <param name="uri">The URI with the location at which the status of requested content can be monitored.</param>
            <param name="value">The optional content value to format in the entity body; may be null.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedAtActionResult"/> object that produces an <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status202Accepted"/> response.
            </summary>
            <param name="actionName">The name of the action to use for generating the URL.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedAtActionResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.String)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedAtActionResult"/> object that produces an <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status202Accepted"/> response.
            </summary>
            <param name="actionName">The name of the action to use for generating the URL.</param>
            <param name="controllerName">The name of the controller to use for generating the URL.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedAtActionResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.Object)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedAtActionResult"/> object that produces an <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status202Accepted"/> response.
            </summary>
            <param name="actionName">The name of the action to use for generating the URL.</param>
            <param name="value">The optional content value to format in the entity body; may be null.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedAtActionResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.String,System.Object)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedAtActionResult"/> object that produces an <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status202Accepted"/> response.
            </summary>
            <param name="actionName">The name of the action to use for generating the URL.</param>
            <param name="controllerName">The name of the controller to use for generating the URL.</param>
            <param name="routeValues">The route data to use for generating the URL.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedAtActionResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.Object,System.Object)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedAtActionResult"/> object that produces an <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status202Accepted"/> response.
            </summary>
            <param name="actionName">The name of the action to use for generating the URL.</param>
            <param name="routeValues">The route data to use for generating the URL.</param>
            <param name="value">The optional content value to format in the entity body; may be null.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedAtActionResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtAction(System.String,System.String,System.Object,System.Object)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedAtActionResult"/> object that produces an <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status202Accepted"/> response.
            </summary>
            <param name="actionName">The name of the action to use for generating the URL.</param>
            <param name="controllerName">The name of the controller to use for generating the URL.</param>
            <param name="routeValues">The route data to use for generating the URL.</param>
            <param name="value">The optional content value to format in the entity body; may be null.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedAtActionResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedAtRouteResult"/> object that produces an <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status202Accepted"/> response.
            </summary>
            <param name="routeValues">The route data to use for generating the URL.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedAtRouteResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedAtRouteResult"/> object that produces an <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status202Accepted"/> response.
            </summary>
            <param name="routeName">The name of the route to use for generating the URL.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedAtRouteResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String,System.Object)">
             <summary>
             Creates a <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedAtRouteResult"/> object that produces an <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status202Accepted"/> response.
             </summary>
             <param name="routeName">The name of the route to use for generating the URL.</param>
            <param name="routeValues">The route data to use for generating the URL.</param>
             <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedAtRouteResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.Object,System.Object)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedAtRouteResult"/> object that produces an <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status202Accepted"/> response.
            </summary>
            <param name="routeValues">The route data to use for generating the URL.</param>
            <param name="value">The optional content value to format in the entity body; may be null.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedAtRouteResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.AcceptedAtRoute(System.String,System.Object,System.Object)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedAtRouteResult"/> object that produces an <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status202Accepted"/> response.
            </summary>
            <param name="routeName">The name of the route to use for generating the URL.</param>
            <param name="routeValues">The route data to use for generating the URL.</param>
            <param name="value">The optional content value to format in the entity body; may be null.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.AcceptedAtRouteResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.Challenge">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.ChallengeResult"/>.
            </summary>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.ChallengeResult"/> for the response.</returns>
            <remarks>
            The behavior of this method depends on the <see cref="T:Microsoft.AspNetCore.Authentication.IAuthenticationService"/> in use.
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status401Unauthorized"/> and <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status403Forbidden"/>
            are among likely status results.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(System.String[])">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.ChallengeResult"/> with the specified authentication schemes.
            </summary>
            <param name="authenticationSchemes">The authentication schemes to challenge.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.ChallengeResult"/> for the response.</returns>
            <remarks>
            The behavior of this method depends on the <see cref="T:Microsoft.AspNetCore.Authentication.IAuthenticationService"/> in use.
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status401Unauthorized"/> and <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status403Forbidden"/>
            are among likely status results.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.ChallengeResult"/> with the specified <paramref name="properties" />.
            </summary>
            <param name="properties"><see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationProperties"/> used to perform the authentication
            challenge.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.ChallengeResult"/> for the response.</returns>
            <remarks>
            The behavior of this method depends on the <see cref="T:Microsoft.AspNetCore.Authentication.IAuthenticationService"/> in use.
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status401Unauthorized"/> and <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status403Forbidden"/>
            are among likely status results.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String[])">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.ChallengeResult"/> with the specified authentication schemes and
            <paramref name="properties" />.
            </summary>
            <param name="properties"><see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationProperties"/> used to perform the authentication
            challenge.</param>
            <param name="authenticationSchemes">The authentication schemes to challenge.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.ChallengeResult"/> for the response.</returns>
            <remarks>
            The behavior of this method depends on the <see cref="T:Microsoft.AspNetCore.Authentication.IAuthenticationService"/> in use.
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status401Unauthorized"/> and <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status403Forbidden"/>
            are among likely status results.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.Forbid">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.ForbidResult"/> (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status403Forbidden"/> by default).
            </summary>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.ForbidResult"/> for the response.</returns>
            <remarks>
            Some authentication schemes, such as cookies, will convert <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status403Forbidden"/> to
            a redirect to show a login page.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(System.String[])">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.ForbidResult"/> (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status403Forbidden"/> by default) with the
            specified authentication schemes.
            </summary>
            <param name="authenticationSchemes">The authentication schemes to challenge.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.ForbidResult"/> for the response.</returns>
            <remarks>
            Some authentication schemes, such as cookies, will convert <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status403Forbidden"/> to
            a redirect to show a login page.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.ForbidResult"/> (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status403Forbidden"/> by default) with the
            specified <paramref name="properties" />.
            </summary>
            <param name="properties"><see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationProperties"/> used to perform the authentication
            challenge.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.ForbidResult"/> for the response.</returns>
            <remarks>
            Some authentication schemes, such as cookies, will convert <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status403Forbidden"/> to
            a redirect to show a login page.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String[])">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.ForbidResult"/> (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status403Forbidden"/> by default) with the
            specified authentication schemes and <paramref name="properties" />.
            </summary>
            <param name="properties"><see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationProperties"/> used to perform the authentication
            challenge.</param>
            <param name="authenticationSchemes">The authentication schemes to challenge.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.ForbidResult"/> for the response.</returns>
            <remarks>
            Some authentication schemes, such as cookies, will convert <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status403Forbidden"/> to
            a redirect to show a login page.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.SignInResult"/>.
            </summary>
            <param name="principal">The <see cref="T:System.Security.Claims.ClaimsPrincipal"/> containing the user claims.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.SignInResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal,System.String)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.SignInResult"/> with the specified authentication scheme.
            </summary>
            <param name="principal">The <see cref="T:System.Security.Claims.ClaimsPrincipal"/> containing the user claims.</param>
            <param name="authenticationScheme">The authentication scheme to use for the sign-in operation.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.SignInResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal,Microsoft.AspNetCore.Authentication.AuthenticationProperties)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.SignInResult"/> with <paramref name="properties"/>.
            </summary>
            <param name="principal">The <see cref="T:System.Security.Claims.ClaimsPrincipal"/> containing the user claims.</param>
            <param name="properties"><see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationProperties"/> used to perform the sign-in operation.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.SignInResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.SignIn(System.Security.Claims.ClaimsPrincipal,Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.SignInResult"/> with the specified authentication scheme and
            <paramref name="properties" />.
            </summary>
            <param name="principal">The <see cref="T:System.Security.Claims.ClaimsPrincipal"/> containing the user claims.</param>
            <param name="properties"><see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationProperties"/> used to perform the sign-in operation.</param>
            <param name="authenticationScheme">The authentication scheme to use for the sign-in operation.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.SignInResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.SignOut">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.SignOutResult"/>.
            </summary>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.SignOutResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.SignOutResult"/> with <paramref name="properties"/>.
            </summary>
            <param name="properties"><see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationProperties"/> used to perform the sign-out operation.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.SignOutResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(System.String[])">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.SignOutResult"/> with the specified authentication schemes.
            </summary>
            <param name="authenticationSchemes">The authentication schemes to use for the sign-out operation.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.SignOutResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String[])">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.SignOutResult"/> with the specified authentication schemes and
            <paramref name="properties" />.
            </summary>
            <param name="properties"><see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationProperties"/> used to perform the sign-out operation.</param>
            <param name="authenticationSchemes">The authentication scheme to use for the sign-out operation.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.SignOutResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0)">
            <summary>
            Updates the specified <paramref name="model"/> instance using values from the controller's current
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider"/>.
            </summary>
            <typeparam name="TModel">The type of the model object.</typeparam>
            <param name="model">The model instance to update.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that on completion returns <c>true</c> if the update is successful.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String)">
            <summary>
            Updates the specified <paramref name="model"/> instance using values from the controller's current
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider"/> and a <paramref name="prefix"/>.
            </summary>
            <typeparam name="TModel">The type of the model object.</typeparam>
            <param name="model">The model instance to update.</param>
            <param name="prefix">The prefix to use when looking up values in the current <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider"/>.
            </param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that on completion returns <c>true</c> if the update is successful.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider)">
            <summary>
            Updates the specified <paramref name="model"/> instance using the <paramref name="valueProvider"/> and a
            <paramref name="prefix"/>.
            </summary>
            <typeparam name="TModel">The type of the model object.</typeparam>
            <param name="model">The model instance to update.</param>
            <param name="prefix">The prefix to use when looking up values in the <paramref name="valueProvider"/>.
            </param>
            <param name="valueProvider">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider"/> used for looking up values.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that on completion returns <c>true</c> if the update is successful.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>
            Updates the specified <paramref name="model"/> instance using values from the controller's current
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider"/> and a <paramref name="prefix"/>.
            </summary>
            <typeparam name="TModel">The type of the model object.</typeparam>
            <param name="model">The model instance to update.</param>
            <param name="prefix">The prefix to use when looking up values in the current <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider"/>.
            </param>
            <param name="includeExpressions"> <see cref="T:System.Linq.Expressions.Expression"/>(s) which represent top-level properties
            which need to be included for the current model.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that on completion returns <c>true</c> if the update is successful.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})">
            <summary>
            Updates the specified <paramref name="model"/> instance using values from the controller's current
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider"/> and a <paramref name="prefix"/>.
            </summary>
            <typeparam name="TModel">The type of the model object.</typeparam>
            <param name="model">The model instance to update.</param>
            <param name="prefix">The prefix to use when looking up values in the current <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider"/>.
            </param>
            <param name="propertyFilter">A predicate which can be used to filter properties at runtime.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that on completion returns <c>true</c> if the update is successful.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>
            Updates the specified <paramref name="model"/> instance using the <paramref name="valueProvider"/> and a
            <paramref name="prefix"/>.
            </summary>
            <typeparam name="TModel">The type of the model object.</typeparam>
            <param name="model">The model instance to update.</param>
            <param name="prefix">The prefix to use when looking up values in the <paramref name="valueProvider"/>.
            </param>
            <param name="valueProvider">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider"/> used for looking up values.</param>
            <param name="includeExpressions"> <see cref="T:System.Linq.Expressions.Expression"/>(s) which represent top-level properties
            which need to be included for the current model.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that on completion returns <c>true</c> if the update is successful.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})">
            <summary>
            Updates the specified <paramref name="model"/> instance using the <paramref name="valueProvider"/> and a
            <paramref name="prefix"/>.
            </summary>
            <typeparam name="TModel">The type of the model object.</typeparam>
            <param name="model">The model instance to update.</param>
            <param name="prefix">The prefix to use when looking up values in the <paramref name="valueProvider"/>.
            </param>
            <param name="valueProvider">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider"/> used for looking up values.</param>
            <param name="propertyFilter">A predicate which can be used to filter properties at runtime.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that on completion returns <c>true</c> if the update is successful.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object,System.Type,System.String)">
            <summary>
            Updates the specified <paramref name="model"/> instance using values from the controller's current
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider"/> and a <paramref name="prefix"/>.
            </summary>
            <param name="model">The model instance to update.</param>
            <param name="modelType">The type of model instance to update.</param>
            <param name="prefix">The prefix to use when looking up values in the current <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider"/>.
            </param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that on completion returns <c>true</c> if the update is successful.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.TryUpdateModelAsync(System.Object,System.Type,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})">
            <summary>
            Updates the specified <paramref name="model"/> instance using the <paramref name="valueProvider"/> and a
            <paramref name="prefix"/>.
            </summary>
            <param name="model">The model instance to update.</param>
            <param name="modelType">The type of model instance to update.</param>
            <param name="prefix">The prefix to use when looking up values in the <paramref name="valueProvider"/>.
            </param>
            <param name="valueProvider">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider"/> used for looking up values.</param>
            <param name="propertyFilter">A predicate which can be used to filter properties at runtime.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that on completion returns <c>true</c> if the update is successful.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object)">
            <summary>
            Validates the specified <paramref name="model"/> instance.
            </summary>
            <param name="model">The model to validate.</param>
            <returns><c>true</c> if the <see cref="P:Microsoft.AspNetCore.Mvc.ControllerBase.ModelState"/> is valid; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerBase.TryValidateModel(System.Object,System.String)">
            <summary>
            Validates the specified <paramref name="model"/> instance.
            </summary>
            <param name="model">The model to validate.</param>
            <param name="prefix">The key to use when looking up information in <see cref="P:Microsoft.AspNetCore.Mvc.ControllerBase.ModelState"/>.
            </param>
            <returns><c>true</c> if the <see cref="P:Microsoft.AspNetCore.Mvc.ControllerBase.ModelState"/> is valid;<c>false</c> otherwise.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ControllerContext">
            <summary>
            The context associated with the current request for a controller.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerContext.#ctor">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ControllerContext"/>.
            </summary>
            <remarks>
            The default constructor is provided for unit test purposes only.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerContext.#ctor(Microsoft.AspNetCore.Mvc.ActionContext)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ControllerContext"/>.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.ActionContext"/> associated with the current request.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ControllerContext.#ctor(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Routing.RouteData,Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ControllerContext"/>.
            </summary>
            <param name="httpContext">The <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/> for the current request.</param>
            <param name="routeData">The <see cref="T:Microsoft.AspNetCore.Routing.RouteData"/> for the current request.</param>
            <param name="actionDescriptor">The <see cref="T:Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor"/> for the selected action.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ControllerContext.ActionDescriptor">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor"/> associated with the current request.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ControllerContext.ValueProviderFactories">
            <summary>
            Gets or sets the list of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory"/> instances for the current request.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ControllerContextAttribute">
            <summary>
            Specifies that a controller property should be set with the current
            <see cref="T:Microsoft.AspNetCore.Mvc.ControllerContext"/> when creating the controller. The property must have a public
            set method.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor">
            <summary>
            A descriptor for an action of a controller.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor.ControllerName">
            <summary>
            The name of the controller.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor.ActionName">
            <summary>
            The name of the action.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor.MethodInfo">
            <summary>
            The <see cref="P:Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor.MethodInfo"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor.ControllerTypeInfo">
            <summary>
            The <see cref="T:System.Reflection.TypeInfo"/> of the controller..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor.DisplayName">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Controllers.ControllerActivatorProvider">
            <summary>
            Provides methods to create an MVC controller.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Controllers.ControllerActivatorProvider.#ctor(Microsoft.AspNetCore.Mvc.Controllers.IControllerActivator)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Controllers.ControllerActivatorProvider"/>.
            </summary>
            <param name="controllerActivator">A <see cref="T:Microsoft.AspNetCore.Mvc.Controllers.IControllerActivator"/> which is delegated to when not the default implementation.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Controllers.ControllerActivatorProvider.CreateActivator(Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Controllers.ControllerActivatorProvider.CreateReleaser(Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Controllers.ControllerActivatorProvider.CreateAsyncReleaser(Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Controllers.ControllerBoundPropertyDescriptor">
            <summary>
            A descriptor for model bound properties of a controller.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Controllers.ControllerBoundPropertyDescriptor.PropertyInfo">
            <summary>
            Gets or sets the <see cref="T:System.Reflection.PropertyInfo"/> for this property.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Controllers.ControllerFeature">
            <summary>
            The list of controllers types in an MVC application. The <see cref="T:Microsoft.AspNetCore.Mvc.Controllers.ControllerFeature"/> can be populated
            using the <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager"/> that is available during startup at <see cref="P:Microsoft.Extensions.DependencyInjection.IMvcBuilder.PartManager"/>
            and <see cref="P:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder.PartManager"/> or at a later stage by requiring the <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager"/>
            as a dependency in a component.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Controllers.ControllerFeature.Controllers">
            <summary>
            Gets the list of controller types in an MVC application.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Controllers.ControllerFeatureProvider">
            <summary>
            Discovers controllers from a list of <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPart"/> instances.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Controllers.ControllerFeatureProvider.PopulateFeature(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPart},Microsoft.AspNetCore.Mvc.Controllers.ControllerFeature)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Controllers.ControllerFeatureProvider.IsController(System.Reflection.TypeInfo)">
            <summary>
            Determines if a given <paramref name="typeInfo"/> is a controller.
            </summary>
            <param name="typeInfo">The <see cref="T:System.Reflection.TypeInfo"/> candidate.</param>
            <returns><see langword="true" /> if the type is a controller; otherwise <see langword="false" />.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Controllers.ControllerParameterDescriptor">
            <summary>
            A descriptor for method parameters of an action method.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Controllers.ControllerParameterDescriptor.ParameterInfo">
            <summary>
            Gets or sets the <see cref="T:System.Reflection.ParameterInfo"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Controllers.DefaultControllerActivator">
            <summary>
            <see cref="T:Microsoft.AspNetCore.Mvc.Controllers.IControllerActivator"/> that uses type activation to create controllers.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Controllers.DefaultControllerActivator.#ctor(Microsoft.AspNetCore.Mvc.Infrastructure.ITypeActivatorCache)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.Controllers.DefaultControllerActivator"/>.
            </summary>
            <param name="typeActivatorCache">The <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.ITypeActivatorCache"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Controllers.DefaultControllerActivator.Create(Microsoft.AspNetCore.Mvc.ControllerContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Controllers.DefaultControllerActivator.Release(Microsoft.AspNetCore.Mvc.ControllerContext,System.Object)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Controllers.DefaultControllerFactory">
            <summary>
            Default implementation for <see cref="T:Microsoft.AspNetCore.Mvc.Controllers.IControllerFactory"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Controllers.DefaultControllerFactory.#ctor(Microsoft.AspNetCore.Mvc.Controllers.IControllerActivator,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Controllers.IControllerPropertyActivator})">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Controllers.DefaultControllerFactory"/>.
            </summary>
            <param name="controllerActivator">
            <see cref="T:Microsoft.AspNetCore.Mvc.Controllers.IControllerActivator"/> used to create controller instances.
            </param>
            <param name="propertyActivators">
            A set of <see cref="T:Microsoft.AspNetCore.Mvc.Controllers.IControllerPropertyActivator"/> instances used to initialize controller
            properties.
            </param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Controllers.DefaultControllerFactory.CreateController(Microsoft.AspNetCore.Mvc.ControllerContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Controllers.DefaultControllerFactory.ReleaseController(Microsoft.AspNetCore.Mvc.ControllerContext,System.Object)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Controllers.IControllerActivator">
            <summary>
            Provides methods to create a controller.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Controllers.IControllerActivator.Create(Microsoft.AspNetCore.Mvc.ControllerContext)">
            <summary>
            Creates a controller.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.ControllerContext"/> for the executing action.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Controllers.IControllerActivator.Release(Microsoft.AspNetCore.Mvc.ControllerContext,System.Object)">
            <summary>
            Releases a controller.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.ControllerContext"/> for the executing action.</param>
            <param name="controller">The controller to release.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Controllers.IControllerActivator.ReleaseAsync(Microsoft.AspNetCore.Mvc.ControllerContext,System.Object)">
            <summary>
            Releases a controller asynchronously.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.ControllerContext"/> for the executing action.</param>
            <param name="controller">The controller to release.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Controllers.IControllerActivatorProvider">
            <summary>
            Provides methods to create a MVC controller.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Controllers.IControllerActivatorProvider.CreateActivator(Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor)">
            <summary>
            Creates a <see cref="T:System.Func`2"/> that creates a controller.
            </summary>
            <param name="descriptor">The <see cref="T:Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor"/>.</param>
            <returns>The delegate used to activate the controller.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Controllers.IControllerActivatorProvider.CreateReleaser(Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor)">
            <summary>
            Creates an <see cref="T:System.Action"/> that releases a controller.
            </summary>
            <param name="descriptor">The <see cref="T:Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor"/>.</param>
            <returns>The delegate used to dispose the activated controller.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Controllers.IControllerActivatorProvider.CreateAsyncReleaser(Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor)">
            <summary>
            Creates an <see cref="T:System.Action"/> that releases a controller.
            </summary>
            <param name="descriptor">The <see cref="T:Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor"/>.</param>
            <returns>The delegate used to dispose the activated controller.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Controllers.IControllerFactory">
            <summary>
            Provides methods for creation and disposal of controllers.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Controllers.IControllerFactory.CreateController(Microsoft.AspNetCore.Mvc.ControllerContext)">
            <summary>
            Creates a new controller for the specified <paramref name="context"/>.
            </summary>
            <param name="context"><see cref="T:Microsoft.AspNetCore.Mvc.ControllerContext"/> for the action to execute.</param>
            <returns>The controller.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Controllers.IControllerFactory.ReleaseController(Microsoft.AspNetCore.Mvc.ControllerContext,System.Object)">
            <summary>
            Releases a controller instance.
            </summary>
            <param name="context"><see cref="T:Microsoft.AspNetCore.Mvc.ControllerContext"/> for the executing action.</param>
            <param name="controller">The controller.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Controllers.IControllerFactory.ReleaseControllerAsync(Microsoft.AspNetCore.Mvc.ControllerContext,System.Object)">
            <summary>
            Releases a controller instance asynchronously.
            </summary>
            <param name="context"><see cref="T:Microsoft.AspNetCore.Mvc.ControllerContext"/> for the executing action.</param>
            <param name="controller">The controller.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Controllers.IControllerFactoryProvider">
            <summary>
            Provides methods to create and release a controller.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Controllers.IControllerFactoryProvider.CreateControllerFactory(Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor)">
            <summary>
            Creates a factory for producing controllers for the specified <paramref name="descriptor"/>.
            </summary>
            <param name="descriptor">The <see cref="T:Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor"/>.</param>
            <returns>The controller factory.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Controllers.IControllerFactoryProvider.CreateControllerReleaser(Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor)">
            <summary>
            Releases a controller.
            </summary>
            <param name="descriptor">The <see cref="T:Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor"/>.</param>
            <returns>The delegate used to release the created controller.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Controllers.IControllerFactoryProvider.CreateAsyncControllerReleaser(Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor)">
            <summary>
            Releases a controller asynchronously.
            </summary>
            <param name="descriptor">The <see cref="T:Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor"/>.</param>
            <returns>The delegate used to release the created controller asynchronously.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Controllers.ServiceBasedControllerActivator">
            <summary>
            A <see cref="T:Microsoft.AspNetCore.Mvc.Controllers.IControllerActivator"/> that retrieves controllers as services from the request's
            <see cref="T:System.IServiceProvider"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Controllers.ServiceBasedControllerActivator.Create(Microsoft.AspNetCore.Mvc.ControllerContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Controllers.ServiceBasedControllerActivator.Release(Microsoft.AspNetCore.Mvc.ControllerContext,System.Object)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.CreatedAtActionResult">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ActionResult"/> that returns a Created (201) response with a Location header.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.CreatedAtActionResult.#ctor(System.String,System.String,System.Object,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.CreatedAtActionResult"/> with the values
            provided.
            </summary>
            <param name="actionName">The name of the action to use for generating the URL.</param>
            <param name="controllerName">The name of the controller to use for generating the URL.</param>
            <param name="routeValues">The route data to use for generating the URL.</param>
            <param name="value">The value to format in the entity body.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.CreatedAtActionResult.UrlHelper">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Mvc.IUrlHelper" /> used to generate URLs.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.CreatedAtActionResult.ActionName">
            <summary>
            Gets or sets the name of the action to use for generating the URL.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.CreatedAtActionResult.ControllerName">
            <summary>
            Gets or sets the name of the controller to use for generating the URL.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.CreatedAtActionResult.RouteValues">
            <summary>
            Gets or sets the route data to use for generating the URL.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.CreatedAtActionResult.OnFormatting(Microsoft.AspNetCore.Mvc.ActionContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.CreatedAtRouteResult">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ActionResult"/> that returns a Created (201) response with a Location header.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.CreatedAtRouteResult.#ctor(System.Object,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.CreatedAtRouteResult"/> class with the values
            provided.
            </summary>
            <param name="routeValues">The route data to use for generating the URL.</param>
            <param name="value">The value to format in the entity body.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.CreatedAtRouteResult.#ctor(System.String,System.Object,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.CreatedAtRouteResult"/> class with the values
            provided.
            </summary>
            <param name="routeName">The name of the route to use for generating the URL.</param>
            <param name="routeValues">The route data to use for generating the URL.</param>
            <param name="value">The value to format in the entity body.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.CreatedAtRouteResult.UrlHelper">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Mvc.IUrlHelper" /> used to generate URLs.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.CreatedAtRouteResult.RouteName">
            <summary>
            Gets or sets the name of the route to use for generating the URL.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.CreatedAtRouteResult.RouteValues">
            <summary>
            Gets or sets the route data to use for generating the URL.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.CreatedAtRouteResult.OnFormatting(Microsoft.AspNetCore.Mvc.ActionContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.CreatedResult">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ActionResult"/> that returns a Created (201) response with a Location header.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.CreatedResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.CreatedResult"/> class 
            </summary>  
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.CreatedResult.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.CreatedResult"/> class with the values
            provided.
            </summary>
            <param name="location">The location at which the content has been created.</param>
            <param name="value">The value to format in the entity body.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.CreatedResult.#ctor(System.Uri,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.CreatedResult"/> class with the values
            provided.
            </summary>
            <param name="location">The location at which the content has been created.</param>
            <param name="value">The value to format in the entity body.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.CreatedResult.Location">
            <summary>
            Gets or sets the location at which the content has been created.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.CreatedResult.OnFormatting(Microsoft.AspNetCore.Mvc.ActionContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.DefaultApiConventions">
            <summary>
            Default api conventions.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.DefaultApiConventions.Get(System.Object)">
            <summary>
            Get convention.
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.DefaultApiConventions.Find(System.Object)">
            <summary>
            Find convention.
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.DefaultApiConventions.Post(System.Object)">
            <summary>
            Post convention.
            </summary>
            <param name="model"></param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.DefaultApiConventions.Create(System.Object)">
            <summary>
            Create convention.
            </summary>
            <param name="model"></param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.DefaultApiConventions.Put(System.Object,System.Object)">
            <summary>
            Put convention.
            </summary>
            <param name="id"></param>
            <param name="model"></param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.DefaultApiConventions.Edit(System.Object,System.Object)">
            <summary>
            Edit convention.
            </summary>
            <param name="id"></param>
            <param name="model"></param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.DefaultApiConventions.Update(System.Object,System.Object)">
            <summary>
            Update convention.
            </summary>
            <param name="id"></param>
            <param name="model"></param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.DefaultApiConventions.Delete(System.Object)">
            <summary>
            Delete convention.
            </summary>
            <param name="id"></param>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Diagnostics.EventData">
            <summary>
            A base class that for an event.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Diagnostics.EventData.EventNamespace">
            <summary>
            The namespace of the event.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.EventData.Count">
            <summary>
            The event count.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.EventData.Item(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Diagnostics.EventData.Enumerator">
            <summary>
            A struct that represents an Enumerator
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.EventData.Enumerator.Current">
            <summary>
            Current keyvalue pair.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Diagnostics.EventData.Enumerator.MoveNext">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Diagnostics.EventData.Enumerator.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeActionEventData">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.EventData"/> that occurs before an action.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeActionEventData.EventName">
            <summary>
            The name of the event.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeActionEventData.#ctor(Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor,Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Routing.RouteData)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeActionEventData"/>.
            </summary>
            <param name="actionDescriptor">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeActionEventData.ActionDescriptor"/>.</param>
            <param name="httpContext">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeActionEventData.HttpContext"/>.</param>
            <param name="routeData">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeActionEventData.RouteData"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeActionEventData.ActionDescriptor">
            <summary>
            The action.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeActionEventData.HttpContext">
            <summary>
            The context.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeActionEventData.RouteData">
            <summary>
            The route data.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeActionEventData.Count">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeActionEventData.Item(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Diagnostics.AfterActionEventData">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.EventData"/> that occurs after an action.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Diagnostics.AfterActionEventData.EventName">
            <summary>
            The name of the event.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Diagnostics.AfterActionEventData.#ctor(Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor,Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Routing.RouteData)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.AfterActionEventData"/>.
            </summary>
            <param name="actionDescriptor">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterActionEventData.ActionDescriptor"/>.</param>
            <param name="httpContext">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterActionEventData.HttpContext"/>.</param>
            <param name="routeData">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterActionEventData.RouteData"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterActionEventData.ActionDescriptor">
            <summary>
            The action.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterActionEventData.HttpContext">
            <summary>
            The context.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterActionEventData.RouteData">
            <summary>
            The route data.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterActionEventData.Count">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterActionEventData.Item(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeAuthorizationFilterOnAuthorizationEventData">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.EventData"/> that occurs before <see cref="M:Microsoft.AspNetCore.Mvc.Filters.IAuthorizationFilter.OnAuthorization(Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeAuthorizationFilterOnAuthorizationEventData.EventName">
            <summary>
            The name of the event.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeAuthorizationFilterOnAuthorizationEventData.#ctor(Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor,Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext,Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeAuthorizationFilterOnAuthorizationEventData"/>.
            </summary>
            <param name="actionDescriptor">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeAuthorizationFilterOnAuthorizationEventData.ActionDescriptor"/>.</param>
            <param name="authorizationContext">The <see cref="T:Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext"/>.</param>
            <param name="filter">The <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeAuthorizationFilterOnAuthorizationEventData.ActionDescriptor">
            <summary>
            The action.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeAuthorizationFilterOnAuthorizationEventData.AuthorizationContext">
            <summary>
            The authorization context.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeAuthorizationFilterOnAuthorizationEventData.Filter">
            <summary>
            The authorization filter.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeAuthorizationFilterOnAuthorizationEventData.Count">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeAuthorizationFilterOnAuthorizationEventData.Item(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Diagnostics.AfterAuthorizationFilterOnAuthorizationEventData">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.EventData"/> that occurs after <see cref="M:Microsoft.AspNetCore.Mvc.Filters.IAuthorizationFilter.OnAuthorization(Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Diagnostics.AfterAuthorizationFilterOnAuthorizationEventData.EventName">
            <summary>
            The name of the event.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Diagnostics.AfterAuthorizationFilterOnAuthorizationEventData.#ctor(Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor,Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext,Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.AfterAuthorizationFilterOnAuthorizationEventData"/>.
            </summary>
            <param name="actionDescriptor">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterAuthorizationFilterOnAuthorizationEventData.ActionDescriptor"/>.</param>
            <param name="authorizationContext">The <see cref="T:Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext"/>.</param>
            <param name="filter">The <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterAuthorizationFilterOnAuthorizationEventData.ActionDescriptor">
            <summary>
            The action.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterAuthorizationFilterOnAuthorizationEventData.AuthorizationContext">
            <summary>
            The authorization context.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterAuthorizationFilterOnAuthorizationEventData.Filter">
            <summary>
            The authorization filter.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterAuthorizationFilterOnAuthorizationEventData.Count">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterAuthorizationFilterOnAuthorizationEventData.Item(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResourceFilterOnResourceExecutionEventData">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.EventData"/> that occurs before <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IResourceFilter"/> execution.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResourceFilterOnResourceExecutionEventData.EventName">
            <summary>
            The name of the event.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResourceFilterOnResourceExecutionEventData.#ctor(Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor,Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext,Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResourceFilterOnResourceExecutionEventData"/>.
            </summary>
            <param name="actionDescriptor">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResourceFilterOnResourceExecutionEventData.ActionDescriptor"/>.</param>
            <param name="resourceExecutingContext">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResourceFilterOnResourceExecutionEventData.ResourceExecutingContext"/>.</param>
            <param name="filter">The <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResourceFilterOnResourceExecutionEventData.ActionDescriptor">
            <summary>
            The action.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResourceFilterOnResourceExecutionEventData.ResourceExecutingContext">
            <summary>
            The context.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResourceFilterOnResourceExecutionEventData.Filter">
            <summary>
            The resource filter that will run.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResourceFilterOnResourceExecutionEventData.Count">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResourceFilterOnResourceExecutionEventData.Item(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResourceFilterOnResourceExecutionEventData">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.EventData"/> that occurs after <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IResourceFilter"/> execution.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResourceFilterOnResourceExecutionEventData.EventName">
            <summary>
            The name of the event.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResourceFilterOnResourceExecutionEventData.#ctor(Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor,Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext,Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResourceFilterOnResourceExecutionEventData"/>.
            </summary>
            <param name="actionDescriptor">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResourceFilterOnResourceExecutionEventData.ActionDescriptor"/>.</param>
            <param name="resourceExecutedContext">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResourceFilterOnResourceExecutionEventData.ResourceExecutedContext"/>.</param>
            <param name="filter">The <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResourceFilterOnResourceExecutionEventData.ActionDescriptor">
            <summary>
            The action.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResourceFilterOnResourceExecutionEventData.ResourceExecutedContext">
            <summary>
            The context.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResourceFilterOnResourceExecutionEventData.Filter">
            <summary>
            The resource filter that will be run.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResourceFilterOnResourceExecutionEventData.Count">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResourceFilterOnResourceExecutionEventData.Item(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResourceFilterOnResourceExecutingEventData">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.EventData"/> that occurs before <see cref="M:Microsoft.AspNetCore.Mvc.Filters.IResourceFilter.OnResourceExecuting(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResourceFilterOnResourceExecutingEventData.EventName">
            <summary>
            The name of the event.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResourceFilterOnResourceExecutingEventData.#ctor(Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor,Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext,Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResourceFilterOnResourceExecutingEventData"/>.
            </summary>
            <param name="actionDescriptor">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResourceFilterOnResourceExecutingEventData.ActionDescriptor"/>.</param>
            <param name="resourceExecutingContext">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResourceFilterOnResourceExecutingEventData.ResourceExecutingContext"/>.</param>
            <param name="filter">The <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResourceFilterOnResourceExecutingEventData.ActionDescriptor">
            <summary>
            The action.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResourceFilterOnResourceExecutingEventData.ResourceExecutingContext">
            <summary>
            The context.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResourceFilterOnResourceExecutingEventData.Filter">
            <summary>
            The resource filter that will run.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResourceFilterOnResourceExecutingEventData.Count">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResourceFilterOnResourceExecutingEventData.Item(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResourceFilterOnResourceExecutingEventData">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.EventData"/> that occurs after <see cref="M:Microsoft.AspNetCore.Mvc.Filters.IResourceFilter.OnResourceExecuting(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResourceFilterOnResourceExecutingEventData.EventName">
            <summary>
            The name of the event.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResourceFilterOnResourceExecutingEventData.#ctor(Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor,Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext,Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResourceFilterOnResourceExecutingEventData"/>.
            </summary>
            <param name="actionDescriptor">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResourceFilterOnResourceExecutingEventData.ActionDescriptor"/>.</param>
            <param name="resourceExecutingContext">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResourceFilterOnResourceExecutingEventData.ResourceExecutingContext"/>.</param>
            <param name="filter">The <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResourceFilterOnResourceExecutingEventData.ActionDescriptor">
            <summary>
            The action.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResourceFilterOnResourceExecutingEventData.ResourceExecutingContext">
            <summary>
            The context.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResourceFilterOnResourceExecutingEventData.Filter">
            <summary>
            The resource filter that ran.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResourceFilterOnResourceExecutingEventData.Count">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResourceFilterOnResourceExecutingEventData.Item(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResourceFilterOnResourceExecutedEventData">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.EventData"/> that occurs before <see cref="M:Microsoft.AspNetCore.Mvc.Filters.IResourceFilter.OnResourceExecuted(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResourceFilterOnResourceExecutedEventData.EventName">
            <summary>
            The name of the event.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResourceFilterOnResourceExecutedEventData.#ctor(Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor,Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext,Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResourceFilterOnResourceExecutedEventData"/>.
            </summary>
            <param name="actionDescriptor">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResourceFilterOnResourceExecutedEventData.ActionDescriptor"/>.</param>
            <param name="resourceExecutedContext">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResourceFilterOnResourceExecutedEventData.ResourceExecutedContext"/>.</param>
            <param name="filter">The <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResourceFilterOnResourceExecutedEventData.ActionDescriptor">
            <summary>
            The action.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResourceFilterOnResourceExecutedEventData.ResourceExecutedContext">
            <summary>
            The context.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResourceFilterOnResourceExecutedEventData.Filter">
            <summary>
            The resource filter that will run.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResourceFilterOnResourceExecutedEventData.Count">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResourceFilterOnResourceExecutedEventData.Item(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResourceFilterOnResourceExecutedEventData">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.EventData"/> that occurs after <see cref="M:Microsoft.AspNetCore.Mvc.Filters.IResourceFilter.OnResourceExecuted(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResourceFilterOnResourceExecutedEventData.EventName">
            <summary>
            The name of the event.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResourceFilterOnResourceExecutedEventData.#ctor(Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor,Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext,Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResourceFilterOnResourceExecutedEventData"/>.
            </summary>
            <param name="actionDescriptor">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResourceFilterOnResourceExecutedEventData.ActionDescriptor"/>.</param>
            <param name="resourceExecutedContext">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResourceFilterOnResourceExecutedEventData.ResourceExecutedContext"/>.</param>
            <param name="filter">The <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResourceFilterOnResourceExecutedEventData.ActionDescriptor">
            <summary>
            The action.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResourceFilterOnResourceExecutedEventData.ResourceExecutedContext">
            <summary>
            The resource context.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResourceFilterOnResourceExecutedEventData.Filter">
            <summary>
            The filter.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResourceFilterOnResourceExecutedEventData.Count">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResourceFilterOnResourceExecutedEventData.Item(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeExceptionFilterOnException">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.EventData"/> that occurs before <see cref="M:Microsoft.AspNetCore.Mvc.Filters.IExceptionFilter.OnException(Microsoft.AspNetCore.Mvc.Filters.ExceptionContext)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeExceptionFilterOnException.EventName">
            <summary>
            The name of the event.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeExceptionFilterOnException.#ctor(Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor,Microsoft.AspNetCore.Mvc.Filters.ExceptionContext,Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeExceptionFilterOnException"/>.
            </summary>
            <param name="actionDescriptor">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeExceptionFilterOnException.ActionDescriptor"/>.</param>
            <param name="exceptionContext">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeExceptionFilterOnException.ExceptionContext"/>.</param>
            <param name="filter">The <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeExceptionFilterOnException.ActionDescriptor">
            <summary>
            The action.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeExceptionFilterOnException.ExceptionContext">
            <summary>
            The context.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeExceptionFilterOnException.Filter">
            <summary>
            The exception filter that will run.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeExceptionFilterOnException.Count">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeExceptionFilterOnException.Item(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Diagnostics.AfterExceptionFilterOnExceptionEventData">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.EventData"/> that occurs after <see cref="M:Microsoft.AspNetCore.Mvc.Filters.IExceptionFilter.OnException(Microsoft.AspNetCore.Mvc.Filters.ExceptionContext)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Diagnostics.AfterExceptionFilterOnExceptionEventData.EventName">
            <summary>
            The name of the event.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Diagnostics.AfterExceptionFilterOnExceptionEventData.#ctor(Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor,Microsoft.AspNetCore.Mvc.Filters.ExceptionContext,Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.AfterExceptionFilterOnExceptionEventData"/>.
            </summary>
            <param name="actionDescriptor">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterExceptionFilterOnExceptionEventData.ActionDescriptor"/>.</param>
            <param name="exceptionContext">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterExceptionFilterOnExceptionEventData.ExceptionContext"/>.</param>
            <param name="filter">The <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterExceptionFilterOnExceptionEventData.ActionDescriptor">
            <summary>
            The action.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterExceptionFilterOnExceptionEventData.ExceptionContext">
            <summary>
            The exception context.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterExceptionFilterOnExceptionEventData.Filter">
            <summary>
            The exception filter that ran.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterExceptionFilterOnExceptionEventData.Count">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterExceptionFilterOnExceptionEventData.Item(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeActionFilterOnActionExecutionEventData">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.EventData"/> that occurs before <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IActionFilter"/> execution.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeActionFilterOnActionExecutionEventData.EventName">
            <summary>
            The name of the event.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeActionFilterOnActionExecutionEventData.#ctor(Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor,Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext,Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeActionFilterOnActionExecutionEventData"/>.
            </summary>
            <param name="actionDescriptor">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeActionFilterOnActionExecutionEventData.ActionDescriptor"/>.</param>
            <param name="actionExecutingContext">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeActionFilterOnActionExecutionEventData.ActionExecutingContext"/>.</param>
            <param name="filter">The <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeActionFilterOnActionExecutionEventData.ActionDescriptor">
            <summary>
            The action that will run..
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeActionFilterOnActionExecutionEventData.ActionExecutingContext">
            <summary>
            The action context.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeActionFilterOnActionExecutionEventData.Filter">
            <summary>
            The action filter that will run.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeActionFilterOnActionExecutionEventData.Count">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeActionFilterOnActionExecutionEventData.Item(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Diagnostics.AfterActionFilterOnActionExecutionEventData">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.EventData"/> that occurs after <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IActionFilter"/> execution.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Diagnostics.AfterActionFilterOnActionExecutionEventData.EventName">
            <summary>
            The name of the event.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Diagnostics.AfterActionFilterOnActionExecutionEventData.#ctor(Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor,Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext,Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.AfterActionFilterOnActionExecutionEventData"/>.
            </summary>
            <param name="actionDescriptor">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterActionFilterOnActionExecutionEventData.ActionDescriptor"/>.</param>
            <param name="actionExecutedContext">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterActionFilterOnActionExecutionEventData.ActionExecutedContext"/>.</param>
            <param name="filter">The <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterActionFilterOnActionExecutionEventData.ActionDescriptor">
            <summary>
            The action that ran.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterActionFilterOnActionExecutionEventData.ActionExecutedContext">
            <summary>
            The action executed context.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterActionFilterOnActionExecutionEventData.Filter">
            <summary>
            The action filter that ran.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterActionFilterOnActionExecutionEventData.Count">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterActionFilterOnActionExecutionEventData.Item(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeActionFilterOnActionExecutingEventData">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.EventData"/> that occurs before <see cref="M:Microsoft.AspNetCore.Mvc.Filters.IActionFilter.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeActionFilterOnActionExecutingEventData.EventName">
            <summary>
            The name of the event.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeActionFilterOnActionExecutingEventData.#ctor(Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor,Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext,Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeActionFilterOnActionExecutingEventData"/>.
            </summary>
            <param name="actionDescriptor">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeActionFilterOnActionExecutingEventData.ActionDescriptor"/>.</param>
            <param name="actionExecutingContext">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeActionFilterOnActionExecutingEventData.ActionExecutingContext"/>.</param>
            <param name="filter">The <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeActionFilterOnActionExecutingEventData.ActionDescriptor">
            <summary>
            The action.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeActionFilterOnActionExecutingEventData.ActionExecutingContext">
            <summary>
            The action context.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeActionFilterOnActionExecutingEventData.Filter">
            <summary>
            The action filter that will run.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeActionFilterOnActionExecutingEventData.Count">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeActionFilterOnActionExecutingEventData.Item(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Diagnostics.AfterActionFilterOnActionExecutingEventData">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.EventData"/> that occurs after <see cref="M:Microsoft.AspNetCore.Mvc.Filters.IActionFilter.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Diagnostics.AfterActionFilterOnActionExecutingEventData.EventName">
            <summary>
            The name of the event.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Diagnostics.AfterActionFilterOnActionExecutingEventData.#ctor(Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor,Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext,Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.AfterActionFilterOnActionExecutingEventData"/>.
            </summary>
            <param name="actionDescriptor">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterActionFilterOnActionExecutingEventData.ActionDescriptor"/>.</param>
            <param name="actionExecutingContext">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterActionFilterOnActionExecutingEventData.ActionExecutingContext"/>.</param>
            <param name="filter">The <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterActionFilterOnActionExecutingEventData.ActionDescriptor">
            <summary>
            The action.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterActionFilterOnActionExecutingEventData.ActionExecutingContext">
            <summary>
            The context.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterActionFilterOnActionExecutingEventData.Filter">
            <summary>
            The action filter.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterActionFilterOnActionExecutingEventData.Count">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterActionFilterOnActionExecutingEventData.Item(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeActionFilterOnActionExecutedEventData">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.EventData"/> that occurs before <see cref="M:Microsoft.AspNetCore.Mvc.Filters.IActionFilter.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeActionFilterOnActionExecutedEventData.EventName">
            <summary>
            The name of the event.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeActionFilterOnActionExecutedEventData.#ctor(Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor,Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext,Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeActionFilterOnActionExecutedEventData"/>.
            </summary>
            <param name="actionDescriptor">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeActionFilterOnActionExecutedEventData.ActionDescriptor"/>.</param>
            <param name="actionExecutedContext">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeActionFilterOnActionExecutedEventData.ActionExecutedContext"/>.</param>
            <param name="filter">The <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeActionFilterOnActionExecutedEventData.ActionDescriptor">
            <summary>
            The action.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeActionFilterOnActionExecutedEventData.ActionExecutedContext">
            <summary>
            The context.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeActionFilterOnActionExecutedEventData.Filter">
            <summary>
            The action filter.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeActionFilterOnActionExecutedEventData.Count">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeActionFilterOnActionExecutedEventData.Item(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Diagnostics.AfterActionFilterOnActionExecutedEventData">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.EventData"/> that occurs after <see cref="M:Microsoft.AspNetCore.Mvc.Filters.IActionFilter.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Diagnostics.AfterActionFilterOnActionExecutedEventData.EventName">
            <summary>
            The name of the event.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Diagnostics.AfterActionFilterOnActionExecutedEventData.#ctor(Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor,Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext,Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.AfterActionFilterOnActionExecutedEventData"/>.
            </summary>
            <param name="actionDescriptor">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterActionFilterOnActionExecutedEventData.ActionDescriptor"/>.</param>
            <param name="actionExecutedContext">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterActionFilterOnActionExecutedEventData.ActionExecutedContext"/>.</param>
            <param name="filter">The <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterActionFilterOnActionExecutedEventData.ActionDescriptor">
            <summary>
            The action.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterActionFilterOnActionExecutedEventData.ActionExecutedContext">
            <summary>
            The context.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterActionFilterOnActionExecutedEventData.Filter">
            <summary>
            The action filter.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterActionFilterOnActionExecutedEventData.Count">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterActionFilterOnActionExecutedEventData.Item(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeControllerActionMethodEventData">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.EventData"/> that occurs before an controller action method.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeControllerActionMethodEventData.EventName">
            <summary>
            The name of the event.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeControllerActionMethodEventData.#ctor(Microsoft.AspNetCore.Mvc.ActionContext,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Object)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeControllerActionMethodEventData"/>.
            </summary>
            <param name="actionContext">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeControllerActionMethodEventData.ActionContext"/>.</param>
            <param name="actionArguments">The arguments to the action.</param>
            <param name="controller">The controller.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeControllerActionMethodEventData.ActionContext">
            <summary>
            The action context.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeControllerActionMethodEventData.ActionArguments">
            <summary>
            The action arguments.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeControllerActionMethodEventData.Controller">
            <summary>
            The controller.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeControllerActionMethodEventData.Count">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeControllerActionMethodEventData.Item(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Diagnostics.AfterControllerActionMethodEventData">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.EventData"/> that occurs after an controller action method.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Diagnostics.AfterControllerActionMethodEventData.EventName">
            <summary>
            The name of the event.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Diagnostics.AfterControllerActionMethodEventData.#ctor(Microsoft.AspNetCore.Mvc.ActionContext,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Object,Microsoft.AspNetCore.Mvc.IActionResult)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.AfterControllerActionMethodEventData"/>.
            </summary>
            <param name="actionContext">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterControllerActionMethodEventData.ActionContext"/>.</param>
            <param name="arguments">The arguments to the action.</param>
            <param name="controller">The controller.</param>
            <param name="result">The <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterControllerActionMethodEventData.ActionContext">
            <summary>
            The context.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterControllerActionMethodEventData.Arguments">
            <summary>
            The arguments.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterControllerActionMethodEventData.Controller">
            <summary>
            The controller.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterControllerActionMethodEventData.Result">
            <summary>
            The result.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterControllerActionMethodEventData.Count">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterControllerActionMethodEventData.Item(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResultFilterOnResultExecutionEventData">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.EventData"/> that occurs before a ResultFilter's OnResultExecution
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResultFilterOnResultExecutionEventData.EventName">
            <summary>
            The name of the event.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResultFilterOnResultExecutionEventData.#ctor(Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor,Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext,Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResultFilterOnResultExecutionEventData"/>.
            </summary>
            <param name="actionDescriptor">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResultFilterOnResultExecutionEventData.ActionDescriptor"/>.</param>
            <param name="resultExecutingContext">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResultFilterOnResultExecutionEventData.ResultExecutingContext"/>.</param>
            <param name="filter">The <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResultFilterOnResultExecutionEventData.ActionDescriptor">
            <summary>
            The action.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResultFilterOnResultExecutionEventData.ResultExecutingContext">
            <summary>
            The context.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResultFilterOnResultExecutionEventData.Filter">
            <summary>
            The result filter.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResultFilterOnResultExecutionEventData.Count">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResultFilterOnResultExecutionEventData.Item(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResultFilterOnResultExecutionEventData">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.EventData"/> that occurs after a ResultFilter's OnResultExecution
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResultFilterOnResultExecutionEventData.EventName">
            <summary>
            The name of the event.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResultFilterOnResultExecutionEventData.#ctor(Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor,Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext,Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResultFilterOnResultExecutionEventData"/>.
            </summary>
            <param name="actionDescriptor">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResultFilterOnResultExecutionEventData.ActionDescriptor"/>.</param>
            <param name="resultExecutedContext">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResultFilterOnResultExecutionEventData.ResultExecutedContext"/>.</param>
            <param name="filter">The <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResultFilterOnResultExecutionEventData.ActionDescriptor">
            <summary>
            The action.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResultFilterOnResultExecutionEventData.ResultExecutedContext">
            <summary>
            The context.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResultFilterOnResultExecutionEventData.Filter">
            <summary>
            The result filter.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResultFilterOnResultExecutionEventData.Count">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResultFilterOnResultExecutionEventData.Item(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResultFilterOnResultExecutingEventData">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.EventData"/> that occurs before <see cref="M:Microsoft.AspNetCore.Mvc.Filters.IResultFilter.OnResultExecuting(Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResultFilterOnResultExecutingEventData.EventName">
            <summary>
            The name of the event.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResultFilterOnResultExecutingEventData.#ctor(Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor,Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext,Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResultFilterOnResultExecutingEventData"/>.
            </summary>
            <param name="actionDescriptor">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResultFilterOnResultExecutingEventData.ActionDescriptor"/>.</param>
            <param name="resultExecutingContext">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResultFilterOnResultExecutingEventData.ResultExecutingContext"/>.</param>
            <param name="filter">The <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResultFilterOnResultExecutingEventData.ActionDescriptor">
            <summary>
            The action.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResultFilterOnResultExecutingEventData.ResultExecutingContext">
            <summary>
            The context.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResultFilterOnResultExecutingEventData.Filter">
            <summary>
            The result filter.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResultFilterOnResultExecutingEventData.Count">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResultFilterOnResultExecutingEventData.Item(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResultFilterOnResultExecutingEventData">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.EventData"/> that occurs after <see cref="M:Microsoft.AspNetCore.Mvc.Filters.IResultFilter.OnResultExecuting(Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResultFilterOnResultExecutingEventData.EventName">
            <summary>
            The name of the event.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResultFilterOnResultExecutingEventData.#ctor(Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor,Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext,Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResultFilterOnResultExecutedEventData"/>.
            </summary>
            <param name="actionDescriptor">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResultFilterOnResultExecutingEventData.ActionDescriptor"/>.</param>
            <param name="resultExecutingContext">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResultFilterOnResultExecutingEventData.ResultExecutingContext"/>.</param>
            <param name="filter">The <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResultFilterOnResultExecutingEventData.ActionDescriptor">
            <summary>
            The action.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResultFilterOnResultExecutingEventData.ResultExecutingContext">
            <summary>
            The context.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResultFilterOnResultExecutingEventData.Filter">
            <summary>
            The filter.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResultFilterOnResultExecutingEventData.Count">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResultFilterOnResultExecutingEventData.Item(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResultFilterOnResultExecutedEventData">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.EventData"/> that occurs before <see cref="M:Microsoft.AspNetCore.Mvc.Filters.IResultFilter.OnResultExecuted(Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResultFilterOnResultExecutedEventData.EventName">
            <summary>
            The name of the event.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResultFilterOnResultExecutedEventData.#ctor(Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor,Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext,Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResultFilterOnResultExecutedEventData"/>.
            </summary>
            <param name="actionDescriptor">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResultFilterOnResultExecutedEventData.ActionDescriptor"/>.</param>
            <param name="resultExecutedContext">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResultFilterOnResultExecutedEventData.ResultExecutedContext"/>.</param>
            <param name="filter">The <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResultFilterOnResultExecutedEventData.ActionDescriptor">
            <summary>
            The action.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResultFilterOnResultExecutedEventData.ResultExecutedContext">
            <summary>
            The context.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResultFilterOnResultExecutedEventData.Filter">
            <summary>
            The result filter.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResultFilterOnResultExecutedEventData.Count">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeResultFilterOnResultExecutedEventData.Item(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResultFilterOnResultExecutedEventData">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.EventData"/> that occurs after <see cref="M:Microsoft.AspNetCore.Mvc.Filters.IResultFilter.OnResultExecuted(Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext)"/>.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResultFilterOnResultExecutedEventData.EventName">
            <summary>
            The name of the event.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResultFilterOnResultExecutedEventData.#ctor(Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor,Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext,Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResultFilterOnResultExecutedEventData"/>.
            </summary>
            <param name="actionDescriptor">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResultFilterOnResultExecutedEventData.ActionDescriptor"/>.</param>
            <param name="resultExecutedContext">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResultFilterOnResultExecutedEventData.ResultExecutedContext"/>.</param>
            <param name="filter">The <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResultFilterOnResultExecutedEventData.ActionDescriptor">
            <summary>
            The action.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResultFilterOnResultExecutedEventData.ResultExecutedContext">
            <summary>
            The result executed context.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResultFilterOnResultExecutedEventData.Filter">
            <summary>
            The filter that ran.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResultFilterOnResultExecutedEventData.Count">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterResultFilterOnResultExecutedEventData.Item(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeActionResultEventData">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.EventData"/> that occurs before an action result is invoked.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeActionResultEventData.EventName">
            <summary>
            The name of the event.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeActionResultEventData.#ctor(Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.IActionResult)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeActionResultEventData"/>.
            </summary>
            <param name="actionContext">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeActionResultEventData.ActionContext"/>.</param>
            <param name="result">The <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeActionResultEventData.ActionContext">
            <summary>
            The action context.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeActionResultEventData.Result">
            <summary>
            The action result.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeActionResultEventData.Count">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeActionResultEventData.Item(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Diagnostics.AfterActionResultEventData">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.EventData"/> that occurs after an action result is invoked.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Diagnostics.AfterActionResultEventData.EventName">
            <summary>
            The name of the event.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Diagnostics.AfterActionResultEventData.#ctor(Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.IActionResult)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.AfterActionResultEventData"/>.
            </summary>
            <param name="actionContext">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterActionResultEventData.ActionContext"/>.</param>
            <param name="result">The <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterActionResultEventData.ActionContext">
            <summary>
            The action context.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterActionResultEventData.Result">
            <summary>
            The result.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterActionResultEventData.Count">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterActionResultEventData.Item(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.DisableRequestSizeLimitAttribute">
            <summary>
            Disables the request body size limit.
            </summary>
            <remarks>
            Disabling the request body size limit can be a security concern in regards to uncontrolled
            resource consumption, particularly if the request body is being buffered.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.DisableRequestSizeLimitAttribute.Order">
            <summary>
            Gets the order value for determining the order of execution of filters. Filters execute in
            ascending numeric value of the <see cref="P:Microsoft.AspNetCore.Mvc.DisableRequestSizeLimitAttribute.Order"/> property.
            </summary>
            <remarks>
            <para>
            Filters are executed in an ordering determined by an ascending sort of the <see cref="P:Microsoft.AspNetCore.Mvc.DisableRequestSizeLimitAttribute.Order"/> property.
            </para>
            <para>
            The default Order for this attribute is 900 because it must run before ValidateAntiForgeryTokenAttribute and
            after any filter which does authentication or login in order to allow them to behave as expected (ie Unauthenticated or Redirect instead of 400).
            </para>
            <para>
            Look at <see cref="P:Microsoft.AspNetCore.Mvc.Filters.IOrderedFilter.Order"/> for more detailed info.
            </para>
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.DisableRequestSizeLimitAttribute.IsReusable">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.DisableRequestSizeLimitAttribute.CreateInstance(System.IServiceProvider)">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.DisableRequestSizeLimitAttribute.Microsoft#AspNetCore#Http#Metadata#IRequestSizeLimitMetadata#MaxRequestBodySize">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.EmptyResult">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.Mvc.ActionResult"/> that when executed will
            do nothing.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.EmptyResult.ExecuteResult(Microsoft.AspNetCore.Mvc.ActionContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.FileContentResult">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.Mvc.ActionResult"/> that when executed will
            write a binary file to the response.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.FileContentResult.#ctor(System.Byte[],System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.FileContentResult"/> instance with
            the provided <paramref name="fileContents"/> and the
            provided <paramref name="contentType"/>.
            </summary>
            <param name="fileContents">The bytes that represent the file contents.</param>
            <param name="contentType">The Content-Type header of the response.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.FileContentResult.#ctor(System.Byte[],Microsoft.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.FileContentResult"/> instance with
            the provided <paramref name="fileContents"/> and the
            provided <paramref name="contentType"/>.
            </summary>
            <param name="fileContents">The bytes that represent the file contents.</param>
            <param name="contentType">The Content-Type header of the response.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.FileContentResult.FileContents">
            <summary>
            Gets or sets the file contents.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.FileContentResult.ExecuteResultAsync(Microsoft.AspNetCore.Mvc.ActionContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.FileResult">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.Mvc.ActionResult"/> that when executed will
            write a file as the response.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.FileResult.#ctor(System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.FileResult"/> instance with
            the provided <paramref name="contentType"/>.
            </summary>
            <param name="contentType">The Content-Type header of the response.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.FileResult.ContentType">
            <summary>
            Gets the Content-Type header for the response.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.FileResult.FileDownloadName">
            <summary>
            Gets the file name that will be used in the Content-Disposition header of the response.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.FileResult.LastModified">
            <summary>
            Gets or sets the last modified information associated with the <see cref="T:Microsoft.AspNetCore.Mvc.FileResult"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.FileResult.EntityTag">
            <summary>
            Gets or sets the etag associated with the <see cref="T:Microsoft.AspNetCore.Mvc.FileResult"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.FileResult.EnableRangeProcessing">
            <summary>
            Gets or sets the value that enables range processing for the <see cref="T:Microsoft.AspNetCore.Mvc.FileResult"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.FileStreamResult">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.Mvc.ActionResult"/> that when executed will
            write a file from a stream to the response.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.FileStreamResult.#ctor(System.IO.Stream,System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.FileStreamResult"/> instance with
            the provided <paramref name="fileStream"/> and the
            provided <paramref name="contentType"/>.
            </summary>
            <param name="fileStream">The stream with the file.</param>
            <param name="contentType">The Content-Type header of the response.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.FileStreamResult.#ctor(System.IO.Stream,Microsoft.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.FileStreamResult"/> instance with
            the provided <paramref name="fileStream"/> and the
            provided <paramref name="contentType"/>.
            </summary>
            <param name="fileStream">The stream with the file.</param>
            <param name="contentType">The Content-Type header of the response.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.FileStreamResult.FileStream">
            <summary>
            Gets or sets the stream with the file that will be sent back as the response.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.FileStreamResult.ExecuteResultAsync(Microsoft.AspNetCore.Mvc.ActionContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Filters.ActionFilterAttribute">
            <summary>
            An abstract filter that asynchronously surrounds execution of the action and the action result. Subclasses
            should override <see cref="M:Microsoft.AspNetCore.Mvc.Filters.ActionFilterAttribute.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)"/>, <see cref="M:Microsoft.AspNetCore.Mvc.Filters.ActionFilterAttribute.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)"/> or
            <see cref="M:Microsoft.AspNetCore.Mvc.Filters.ActionFilterAttribute.OnActionExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext,Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate)"/> but not <see cref="M:Microsoft.AspNetCore.Mvc.Filters.ActionFilterAttribute.OnActionExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext,Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate)"/> and either of the other two.
            Similarly subclasses should override <see cref="M:Microsoft.AspNetCore.Mvc.Filters.ActionFilterAttribute.OnResultExecuting(Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext)"/>, <see cref="M:Microsoft.AspNetCore.Mvc.Filters.ActionFilterAttribute.OnResultExecuted(Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext)"/> or
            <see cref="M:Microsoft.AspNetCore.Mvc.Filters.ActionFilterAttribute.OnResultExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext,Microsoft.AspNetCore.Mvc.Filters.ResultExecutionDelegate)"/> but not <see cref="M:Microsoft.AspNetCore.Mvc.Filters.ActionFilterAttribute.OnResultExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext,Microsoft.AspNetCore.Mvc.Filters.ResultExecutionDelegate)"/> and either of the other two.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Filters.ActionFilterAttribute.Order">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Filters.ActionFilterAttribute.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Filters.ActionFilterAttribute.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Filters.ActionFilterAttribute.OnActionExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext,Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Filters.ActionFilterAttribute.OnResultExecuting(Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Filters.ActionFilterAttribute.OnResultExecuted(Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Filters.ActionFilterAttribute.OnResultExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext,Microsoft.AspNetCore.Mvc.Filters.ResultExecutionDelegate)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Filters.ControllerActionFilter">
            <summary>
            A filter implementation which delegates to the controller for action filter interfaces.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Filters.ControllerActionFilter.Order">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Filters.ControllerActionFilter.OnActionExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext,Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Filters.ControllerResultFilter">
            <summary>
            A filter implementation which delegates to the controller for result filter interfaces.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Filters.ControllerResultFilter.Order">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Filters.ControllerResultFilter.OnResultExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext,Microsoft.AspNetCore.Mvc.Filters.ResultExecutionDelegate)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Filters.DefaultFilterProvider.OnProvidersExecuting(Microsoft.AspNetCore.Mvc.Filters.FilterProviderContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Filters.DefaultFilterProvider.OnProvidersExecuted(Microsoft.AspNetCore.Mvc.Filters.FilterProviderContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Filters.DisableRequestSizeLimitFilter">
            <summary>
            A filter that sets <see cref="P:Microsoft.AspNetCore.Http.Features.IHttpMaxRequestBodySizeFeature.MaxRequestBodySize"/>
            to <c>null</c>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Filters.DisableRequestSizeLimitFilter.#ctor(Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Filters.DisableRequestSizeLimitFilter"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Filters.DisableRequestSizeLimitFilter.OnAuthorization(Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext)">
            <summary>
            Sets the <see cref="P:Microsoft.AspNetCore.Http.Features.IHttpMaxRequestBodySizeFeature.MaxRequestBodySize"/>
            to <c>null</c>.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext"/>.</param>
            <remarks>If <see cref="T:Microsoft.AspNetCore.Http.Features.IHttpMaxRequestBodySizeFeature"/> is not enabled or is read-only,
            the <see cref="T:Microsoft.AspNetCore.Mvc.DisableRequestSizeLimitAttribute"/> is not applied.</remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Filters.ExceptionFilterAttribute">
            <summary>
            An abstract filter that runs asynchronously after an action has thrown an <see cref="T:System.Exception"/>. Subclasses
            must override <see cref="M:Microsoft.AspNetCore.Mvc.Filters.ExceptionFilterAttribute.OnException(Microsoft.AspNetCore.Mvc.Filters.ExceptionContext)"/> or <see cref="M:Microsoft.AspNetCore.Mvc.Filters.ExceptionFilterAttribute.OnExceptionAsync(Microsoft.AspNetCore.Mvc.Filters.ExceptionContext)"/> but not both.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Filters.ExceptionFilterAttribute.Order">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Filters.ExceptionFilterAttribute.OnExceptionAsync(Microsoft.AspNetCore.Mvc.Filters.ExceptionContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Filters.ExceptionFilterAttribute.OnException(Microsoft.AspNetCore.Mvc.Filters.ExceptionContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Filters.FilterCollection">
            <summary>
            A collection of <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Filters.FilterCollection.Add``1">
            <summary>
            Adds a type representing a <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"/>.
            </summary>
            <typeparam name="TFilterType">Type representing a <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"/>.</typeparam>
            <returns>A <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"/> representing the added type.</returns>
            <remarks>
            Filter instances will be created using
            <see cref="T:Microsoft.Extensions.DependencyInjection.ActivatorUtilities"/>.
            Use <see cref="M:Microsoft.AspNetCore.Mvc.Filters.FilterCollection.AddService(System.Type)"/> to register a service as a filter.
            The added filter will be assigned an order of 0.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Filters.FilterCollection.Add(System.Type)">
            <summary>
            Adds a type representing a <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"/>.
            </summary>
            <param name="filterType">Type representing a <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"/>.</param>
            <returns>A <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"/> representing the added type.</returns>
            <remarks>
            Filter instances will be created using
            <see cref="T:Microsoft.Extensions.DependencyInjection.ActivatorUtilities"/>.
            Use <see cref="M:Microsoft.AspNetCore.Mvc.Filters.FilterCollection.AddService(System.Type)"/> to register a service as a filter.
            The added filter will be assigned an order of 0.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Filters.FilterCollection.Add``1(System.Int32)">
            <summary>
            Adds a type representing a <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"/>.
            </summary>
            <typeparam name="TFilterType">Type representing a <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"/>.</typeparam>
            <param name="order">The order of the added filter.</param>
            <returns>A <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"/> representing the added type.</returns>
            <remarks>
            Filter instances will be created using
            <see cref="T:Microsoft.Extensions.DependencyInjection.ActivatorUtilities"/>.
            Use <see cref="M:Microsoft.AspNetCore.Mvc.Filters.FilterCollection.AddService(System.Type)"/> to register a service as a filter.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Filters.FilterCollection.Add(System.Type,System.Int32)">
            <summary>
            Adds a type representing a <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"/>.
            </summary>
            <param name="filterType">Type representing a <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"/>.</param>
            <param name="order">The order of the added filter.</param>
            <returns>A <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"/> representing the added type.</returns>
            <remarks>
            Filter instances will be created using
            <see cref="T:Microsoft.Extensions.DependencyInjection.ActivatorUtilities"/>.
            Use <see cref="M:Microsoft.AspNetCore.Mvc.Filters.FilterCollection.AddService(System.Type)"/> to register a service as a filter.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Filters.FilterCollection.AddService``1">
            <summary>
            Adds a type representing a <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"/>.
            </summary>
            <typeparam name="TFilterType">Type representing a <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"/>.</typeparam>
            <returns>A <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"/> representing the added service type.</returns>
            <remarks>
            Filter instances will be created through dependency injection. Use
            <see cref="M:Microsoft.AspNetCore.Mvc.Filters.FilterCollection.Add(System.Type)"/> to register a service that will be created via
            type activation.
            The added filter will be assigned an order of 0.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Filters.FilterCollection.AddService(System.Type)">
            <summary>
            Adds a type representing a <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"/>.
            </summary>
            <param name="filterType">Type representing a <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"/>.</param>
            <returns>A <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"/> representing the added service type.</returns>
            <remarks>
            Filter instances will be created through dependency injection. Use
            <see cref="M:Microsoft.AspNetCore.Mvc.Filters.FilterCollection.Add(System.Type)"/> to register a service that will be created via
            type activation.
            The added filter will be assigned an order of 0.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Filters.FilterCollection.AddService``1(System.Int32)">
            <summary>
            Adds a type representing a <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"/>.
            </summary>
            <typeparam name="TFilterType">Type representing a <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"/>.</typeparam>
            <param name="order">The order of the added filter.</param>
            <returns>A <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"/> representing the added service type.</returns>
            <remarks>
            Filter instances will be created through dependency injection. Use
            <see cref="M:Microsoft.AspNetCore.Mvc.Filters.FilterCollection.Add(System.Type)"/> to register a service that will be created via
            type activation.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Filters.FilterCollection.AddService(System.Type,System.Int32)">
            <summary>
            Adds a type representing a <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"/>.
            </summary>
            <param name="filterType">Type representing a <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"/>.</param>
            <param name="order">The order of the added filter.</param>
            <returns>A <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"/> representing the added service type.</returns>
            <remarks>
            Filter instances will be created through dependency injection. Use
            <see cref="M:Microsoft.AspNetCore.Mvc.Filters.FilterCollection.Add(System.Type)"/> to register a service that will be created via
            type activation.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Filters.FilterCursor">
             <summary>
             A one-way cursor for filters.
             </summary>
             <remarks>
             This will iterate the filter collection once per-stage, and skip any filters that don't have
             the one of interfaces that applies to the current stage.
            
             Filters are always executed in the following order, but short circuiting plays a role.
            
             Indentation reflects nesting.
            
             1. Exception Filters
                 2. Authorization Filters
                 3. Action Filters
                    Action
            
             4. Result Filters
                Result
            
             </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Filters.FilterScope">
            <summary>
            <para>
            Contains constant values for known filter scopes.
            </para>
            <para>
            Scope defines the ordering of filters that have the same order. Scope is by-default
            defined by how a filter is registered.
            </para>
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Filters.FilterScope.First">
            <summary>
            First filter scope.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Filters.FilterScope.Global">
            <summary>
            Global filter scope.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Filters.FilterScope.Controller">
            <summary>
            Controller filter scope.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Filters.FilterScope.Action">
            <summary>
            Action filter scope.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Filters.FilterScope.Last">
            <summary>
            Last filter scope.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Filters.IMiddlewareFilterFeature">
            <summary>
            A feature in <see cref="P:Microsoft.AspNetCore.Http.HttpContext.Features"/> which is used to capture the
            currently executing context of a resource filter. This feature is used in the final middleware
            of a middleware filter's pipeline to keep the request flow through the rest of the MVC layers.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Filters.IOutputCacheFilter">
            <summary>
            A filter which sets the appropriate headers related to Output caching.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Filters.IResponseCacheFilter">
            <summary>
            A filter which sets the appropriate headers related to Response caching.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Filters.MiddlewareFilter">
            <summary>
            A filter which executes a user configured middleware pipeline.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Filters.MiddlewareFilterBuilder">
            <summary>
            Builds a middleware pipeline after receiving the pipeline from a pipeline provider
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Filters.MiddlewareFilterConfigurationProvider">
            <summary>
            Calls into user provided 'Configure' methods for configuring a middleware pipeline. The semantics of finding
            the 'Configure' methods is similar to the application Startup class.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Filters.OutputCacheFilter">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IActionFilter"/> which sets the appropriate headers related to output caching.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Filters.OutputCacheFilter.#ctor(Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Filters.OutputCacheFilter"/>
            </summary>
            <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/>.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Filters.RequestFormLimitsFilter">
            <summary>
            A filter that configures <see cref="P:Microsoft.AspNetCore.Mvc.Filters.RequestFormLimitsFilter.FormOptions"/> for the current request.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Filters.RequestSizeLimitFilter">
            <summary>
            A filter that sets the <see cref="P:Microsoft.AspNetCore.Http.Features.IHttpMaxRequestBodySizeFeature.MaxRequestBodySize"/>
            to the specified <see cref="P:Microsoft.AspNetCore.Mvc.Filters.RequestSizeLimitFilter.Bytes"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Filters.RequestSizeLimitFilter.#ctor(Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Filters.RequestSizeLimitFilter"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Filters.RequestSizeLimitFilter.OnAuthorization(Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext)">
            <summary>
            Sets the <see cref="P:Microsoft.AspNetCore.Http.Features.IHttpMaxRequestBodySizeFeature.MaxRequestBodySize"/> to <see cref="P:Microsoft.AspNetCore.Mvc.Filters.RequestSizeLimitFilter.Bytes"/>.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext"/>.</param>
            <remarks>If <see cref="T:Microsoft.AspNetCore.Http.Features.IHttpMaxRequestBodySizeFeature"/> is not enabled or is read-only,
            the <see cref="T:Microsoft.AspNetCore.Mvc.RequestSizeLimitAttribute"/> is not applied.</remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Filters.ResponseCacheFilter">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IActionFilter"/> which sets the appropriate headers related to response caching.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Filters.ResponseCacheFilter.#ctor(Microsoft.AspNetCore.Mvc.CacheProfile,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Filters.ResponseCacheFilter"/>
            </summary>
            <param name="cacheProfile">The profile which contains the settings for
            <see cref="T:Microsoft.AspNetCore.Mvc.Filters.ResponseCacheFilter"/>.</param>
            <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Filters.ResponseCacheFilter.Duration">
            <summary>
            Gets or sets the duration in seconds for which the response is cached.
            This is a required parameter.
            This sets "max-age" in "Cache-control" header.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Filters.ResponseCacheFilter.Location">
            <summary>
            Gets or sets the location where the data from a particular URL must be cached.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Filters.ResponseCacheFilter.NoStore">
            <summary>
            Gets or sets the value which determines whether the data should be stored or not.
            When set to <see langword="true"/>, it sets "Cache-control" header to "no-store".
            Ignores the "Location" parameter for values other than "None".
            Ignores the "duration" parameter.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Filters.ResponseCacheFilter.VaryByHeader">
            <summary>
            Gets or sets the value for the Vary response header.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Filters.ResponseCacheFilter.VaryByQueryKeys">
            <summary>
            Gets or sets the query keys to vary by.
            </summary>
            <remarks>
            <see cref="P:Microsoft.AspNetCore.Mvc.Filters.ResponseCacheFilter.VaryByQueryKeys"/> requires the response cache middleware.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Filters.ResponseCacheFilter.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Filters.ResponseCacheFilter.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Filters.ResultFilterAttribute">
            <summary>
            An abstract filter that asynchronously surrounds execution of the action result. Subclasses
            must override <see cref="M:Microsoft.AspNetCore.Mvc.Filters.ResultFilterAttribute.OnResultExecuting(Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext)"/>, <see cref="M:Microsoft.AspNetCore.Mvc.Filters.ResultFilterAttribute.OnResultExecuted(Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext)"/> or
            <see cref="M:Microsoft.AspNetCore.Mvc.Filters.ResultFilterAttribute.OnResultExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext,Microsoft.AspNetCore.Mvc.Filters.ResultExecutionDelegate)"/> but not <see cref="M:Microsoft.AspNetCore.Mvc.Filters.ResultFilterAttribute.OnResultExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext,Microsoft.AspNetCore.Mvc.Filters.ResultExecutionDelegate)"/> and either of the other two.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Filters.ResultFilterAttribute.Order">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Filters.ResultFilterAttribute.OnResultExecuting(Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Filters.ResultFilterAttribute.OnResultExecuted(Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Filters.ResultFilterAttribute.OnResultExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext,Microsoft.AspNetCore.Mvc.Filters.ResultExecutionDelegate)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.MiddlewareFilterAttribute">
            <summary>
            Executes a middleware pipeline provided the by the <see cref="P:Microsoft.AspNetCore.Mvc.MiddlewareFilterAttribute.ConfigurationType"/>.
            The middleware pipeline will be treated as an async resource filter.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.MiddlewareFilterAttribute.#ctor(System.Type)">
            <summary>
            Instantiates a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.MiddlewareFilterAttribute"/>.
            </summary>
            <param name="configurationType">A type which configures a middleware pipeline.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.MiddlewareFilterAttribute.ConfigurationType">
            <summary>
            The type which configures a middleware pipeline.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.MiddlewareFilterAttribute.Order">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.MiddlewareFilterAttribute.IsReusable">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.MiddlewareFilterAttribute.CreateInstance(System.IServiceProvider)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.MiddlewareFilterAttribute`1">
            <inheritdoc />
            <typeparam name="T">A type which configures a middleware pipeline.</typeparam>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.MiddlewareFilterAttribute`1.#ctor">
            <summary>
            Instantiates a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.MiddlewareFilterAttribute"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ForbidResult">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ActionResult"/> that on execution invokes <see cref="M:HttpContext.ForbidAsync"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ForbidResult.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ForbidResult"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ForbidResult.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ForbidResult"/> with the
            specified authentication scheme.
            </summary>
            <param name="authenticationScheme">The authentication scheme to challenge.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ForbidResult.#ctor(System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ForbidResult"/> with the
            specified authentication schemes.
            </summary>
            <param name="authenticationSchemes">The authentication schemes to challenge.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ForbidResult.#ctor(Microsoft.AspNetCore.Authentication.AuthenticationProperties)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ForbidResult"/> with the
            specified <paramref name="properties"/>.
            </summary>
            <param name="properties"><see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationProperties"/> used to perform the authentication
            challenge.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ForbidResult.#ctor(System.String,Microsoft.AspNetCore.Authentication.AuthenticationProperties)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ForbidResult"/> with the
            specified authentication scheme and <paramref name="properties"/>.
            </summary>
            <param name="authenticationScheme">The authentication schemes to challenge.</param>
            <param name="properties"><see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationProperties"/> used to perform the authentication
            challenge.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ForbidResult.#ctor(System.Collections.Generic.IList{System.String},Microsoft.AspNetCore.Authentication.AuthenticationProperties)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ForbidResult"/> with the
            specified authentication schemes and <paramref name="properties"/>.
            </summary>
            <param name="authenticationSchemes">The authentication scheme to challenge.</param>
            <param name="properties"><see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationProperties"/> used to perform the authentication
            challenge.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ForbidResult.AuthenticationSchemes">
            <summary>
            Gets or sets the authentication schemes that are challenged.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ForbidResult.Properties">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationProperties"/> used to perform the authentication challenge.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ForbidResult.ExecuteResultAsync(Microsoft.AspNetCore.Mvc.ActionContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.FormatFilterAttribute">
            <summary>
            A filter that will use the format value in the route data or query string to set the content type on an
            <see cref="T:Microsoft.AspNetCore.Mvc.ObjectResult" /> returned from an action.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.FormatFilterAttribute.IsReusable">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.FormatFilterAttribute.CreateInstance(System.IServiceProvider)">
            <summary>
            Creates an instance of <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.FormatFilter"/>.
            </summary>
            <param name="serviceProvider">The <see cref="T:System.IServiceProvider"/>.</param>
            <returns>An instance of <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.FormatFilter"/>.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Formatters.FormatFilter">
            <summary>
            A filter that will use the format value in the route data or query string to set the content type on an
            <see cref="T:Microsoft.AspNetCore.Mvc.ObjectResult"/> returned from an action.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.FormatFilter.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Mvc.MvcOptions},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes an instance of <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.FormatFilter"/>.
            </summary>
            <param name="options">The <see cref="T:Microsoft.Extensions.Options.IOptions`1"/></param>
            <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.FormatFilter.GetFormat(Microsoft.AspNetCore.Mvc.ActionContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.FormatFilter.OnResourceExecuting(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext)">
            <summary>
            As a <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IResourceFilter"/>, this filter looks at the request and rejects it before going ahead if
            1. The format in the request does not match any format in the map.
            2. If there is a conflicting producesFilter.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.FormatFilter.OnResourceExecuted(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.FormatFilter.OnResultExecuting(Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext)">
            <summary>
            Sets a Content Type on an  <see cref="T:Microsoft.AspNetCore.Mvc.ObjectResult" />  using a format value from the request.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.FormatFilter.OnResultExecuted(Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Formatters.FormatterMappings">
            <summary>
            Used to specify mapping between the URL Format and corresponding media type.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.FormatterMappings.SetMediaTypeMappingForFormat(System.String,System.String)">
            <summary>
            Sets mapping for the format to specified media type.
            If the format already exists, the media type will be overwritten with the new value.
            </summary>
            <param name="format">The format value.</param>
            <param name="contentType">The media type for the format value.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.FormatterMappings.SetMediaTypeMappingForFormat(System.String,Microsoft.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Sets mapping for the format to specified media type.
            If the format already exists, the media type will be overwritten with the new value.
            </summary>
            <param name="format">The format value.</param>
            <param name="contentType">The media type for the format value.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.FormatterMappings.GetMediaTypeMappingForFormat(System.String)">
            <summary>
            Gets the media type for the specified format.
            </summary>
            <param name="format">The format value.</param>
            <returns>The media type for input format.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.FormatterMappings.ClearMediaTypeMappingForFormat(System.String)">
            <summary>
            Clears the media type mapping for the format.
            </summary>
            <param name="format">The format value.</param>
            <returns><c>true</c> if the format is successfully found and cleared; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter">
            <summary>
            Sets the status code to 204 if the content is null.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter.TreatNullValueAsNoContent">
            <summary>
            Indicates whether to select this formatter if the returned value from the action
            is null.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter.CanWriteResult(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterCanWriteContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter.WriteAsync(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Formatters.IFormatFilter">
            <summary>
            A filter that produces the desired content type for the request.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.IFormatFilter.GetFormat(Microsoft.AspNetCore.Mvc.ActionContext)">
            <summary>
            Gets the format value for the request associated with the provided <see cref="T:Microsoft.AspNetCore.Mvc.ActionContext"/>.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.ActionContext"/> associated with the current request.</param>
            <returns>A format value, or <c>null</c> if a format cannot be determined for the request.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Formatters.InputFormatter">
            <summary>
            Reads an object from the request body.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Formatters.InputFormatter.SupportedMediaTypes">
            <summary>
            Gets the mutable collection of media type elements supported by
            this <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.InputFormatter"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.InputFormatter.GetDefaultValueForType(System.Type)">
            <summary>
            Gets the default value for a given type. Used to return a default value when the body contains no content.
            </summary>
            <param name="modelType">The type of the value.</param>
            <returns>The default value for the <paramref name="modelType"/> type.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.InputFormatter.CanRead(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.InputFormatter.CanReadType(System.Type)">
            <summary>
            Determines whether this <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.InputFormatter"/> can deserialize an object of the given
            <paramref name="type"/>.
            </summary>
            <param name="type">The <see cref="T:System.Type"/> of object that will be read.</param>
            <returns><c>true</c> if the <paramref name="type"/> can be read, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.InputFormatter.ReadAsync(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.InputFormatter.ReadRequestBodyAsync(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext)">
            <summary>
            Reads an object from the request body.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that on completion deserializes the request body.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.InputFormatter.GetSupportedContentTypes(System.String,System.Type)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Formatters.MediaType">
            <summary>
            A media type value.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.MediaType.#ctor(System.String)">
            <summary>
            Initializes a <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.MediaType"/> instance.
            </summary>
            <param name="mediaType">The <see cref="T:System.String"/> with the media type.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.MediaType.#ctor(Microsoft.Extensions.Primitives.StringSegment)">
            <summary>
            Initializes a <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.MediaType"/> instance.
            </summary>
            <param name="mediaType">The <see cref="T:Microsoft.Extensions.Primitives.StringSegment"/> with the media type.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.MediaType.#ctor(System.String,System.Int32,System.Nullable{System.Int32})">
            <summary>
            Initializes a <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.MediaType.MediaTypeParameterParser"/> instance.
            </summary>
            <param name="mediaType">The <see cref="T:System.String"/> with the media type.</param>
            <param name="offset">The offset in the <paramref name="mediaType"/> where the parsing starts.</param>
            <param name="length">The length of the media type to parse if provided.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Formatters.MediaType.Type">
            <summary>
            Gets the type of the <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.MediaType"/>.
            </summary>
            <example>
            For the media type <c>"application/json"</c>, this property gives the value <c>"application"</c>.
            </example>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Formatters.MediaType.MatchesAllTypes">
            <summary>
            Gets whether this <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.MediaType"/> matches all types.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Formatters.MediaType.SubType">
            <summary>
            Gets the subtype of the <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.MediaType"/>.
            </summary>
            <example>
            For the media type <c>"application/vnd.example+json"</c>, this property gives the value
            <c>"vnd.example+json"</c>.
            </example>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Formatters.MediaType.SubTypeWithoutSuffix">
            <summary>
            Gets the subtype of the <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.MediaType"/>, excluding any structured syntax suffix.
            </summary>
            <example>
            For the media type <c>"application/vnd.example+json"</c>, this property gives the value
            <c>"vnd.example"</c>.
            </example>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Formatters.MediaType.SubTypeSuffix">
            <summary>
            Gets the structured syntax suffix of the <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.MediaType"/> if it has one.
            </summary>
            <example>
            For the media type <c>"application/vnd.example+json"</c>, this property gives the value
            <c>"json"</c>.
            </example>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Formatters.MediaType.MatchesAllSubTypes">
            <summary>
            Gets whether this <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.MediaType"/> matches all subtypes.
            </summary>
            <example>
            For the media type <c>"application/*"</c>, this property is <c>true</c>.
            </example>
            <example>
            For the media type <c>"application/json"</c>, this property is <c>false</c>.
            </example>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Formatters.MediaType.MatchesAllSubTypesWithoutSuffix">
            <summary>
            Gets whether this <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.MediaType"/> matches all subtypes, ignoring any structured syntax suffix.
            </summary>
            <example>
            For the media type <c>"application/*+json"</c>, this property is <c>true</c>.
            </example>
            <example>
            For the media type <c>"application/vnd.example+json"</c>, this property is <c>false</c>.
            </example>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Formatters.MediaType.Encoding">
            <summary>
            Gets the <see cref="T:System.Text.Encoding"/> of the <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.MediaType"/> if it has one.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Formatters.MediaType.Charset">
            <summary>
            Gets the charset parameter of the <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.MediaType"/> if it has one.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Formatters.MediaType.HasWildcard">
            <summary>
            Determines whether the current <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.MediaType"/> contains a wildcard.
            </summary>
            <returns>
            <c>true</c> if this <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.MediaType"/> contains a wildcard; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.MediaType.IsSubsetOf(Microsoft.AspNetCore.Mvc.Formatters.MediaType)">
            <summary>
            Determines whether the current <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.MediaType"/> is a subset of the <paramref name="set"/>
            <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.MediaType"/>.
            </summary>
            <param name="set">The set <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.MediaType"/>.</param>
            <returns>
            <c>true</c> if this <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.MediaType"/> is a subset of <paramref name="set"/>; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.MediaType.GetParameter(System.String)">
            <summary>
            Gets the parameter <paramref name="parameterName"/> of the media type.
            </summary>
            <param name="parameterName">The name of the parameter to retrieve.</param>
            <returns>
            The <see cref="T:Microsoft.Extensions.Primitives.StringSegment"/>for the given <paramref name="parameterName"/> if found; otherwise
            <c>null</c>.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.MediaType.GetParameter(Microsoft.Extensions.Primitives.StringSegment)">
            <summary>
            Gets the parameter <paramref name="parameterName"/> of the media type.
            </summary>
            <param name="parameterName">The name of the parameter to retrieve.</param>
            <returns>
            The <see cref="T:Microsoft.Extensions.Primitives.StringSegment"/>for the given <paramref name="parameterName"/> if found; otherwise
            <c>null</c>.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.MediaType.ReplaceEncoding(System.String,System.Text.Encoding)">
            <summary>
            Replaces the encoding of the given <paramref name="mediaType"/> with the provided
            <paramref name="encoding"/>.
            </summary>
            <param name="mediaType">The media type whose encoding will be replaced.</param>
            <param name="encoding">The encoding that will replace the encoding in the <paramref name="mediaType"/>.
            </param>
            <returns>A media type with the replaced encoding.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.MediaType.ReplaceEncoding(Microsoft.Extensions.Primitives.StringSegment,System.Text.Encoding)">
            <summary>
            Replaces the encoding of the given <paramref name="mediaType"/> with the provided
            <paramref name="encoding"/>.
            </summary>
            <param name="mediaType">The media type whose encoding will be replaced.</param>
            <param name="encoding">The encoding that will replace the encoding in the <paramref name="mediaType"/>.
            </param>
            <returns>A media type with the replaced encoding.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.MediaType.GetEncoding(System.String)">
            <summary>
            Get an encoding for a mediaType.
            </summary>
            <param name="mediaType">The mediaType.</param>
            <returns>The encoding.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.MediaType.GetEncoding(Microsoft.Extensions.Primitives.StringSegment)">
            <summary>
            Get an encoding for a mediaType.
            </summary>
            <param name="mediaType">The mediaType.</param>
            <returns>The encoding.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.MediaType.CreateMediaTypeSegmentWithQuality(System.String,System.Int32)">
            <summary>
            Creates an <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.MediaTypeSegmentWithQuality"/> containing the media type in <paramref name="mediaType"/>
            and its associated quality.
            </summary>
            <param name="mediaType">The media type to parse.</param>
            <param name="start">The position at which the parsing starts.</param>
            <returns>The parsed media type with its associated quality.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection">
            <summary>
            A collection of media types.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection.Add(Microsoft.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Adds an object to the end of the <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection"/>.
            </summary>
            <param name="item">The media type to be added to the end of the <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection.Insert(System.Int32,Microsoft.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Inserts an element into the <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">The media type to insert.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection.Remove(Microsoft.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Removes the first occurrence of a specific media type from the <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection"/>.
            </summary>
            <param name="item"></param>
            <returns><see langword="true" /> if <paramref name="item"/> is successfully removed; otherwise, <see langword="false" />.
            This method also returns <see langword="false" /> if <paramref name="item"/> was not found in the original
            <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection"/>.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Formatters.MediaTypeSegmentWithQuality">
            <summary>
            A media type with its associated quality.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.MediaTypeSegmentWithQuality.#ctor(Microsoft.Extensions.Primitives.StringSegment,System.Double)">
            <summary>
            Initializes an instance of <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.MediaTypeSegmentWithQuality"/>.
            </summary>
            <param name="mediaType">The <see cref="T:Microsoft.Extensions.Primitives.StringSegment"/> containing the media type.</param>
            <param name="quality">The quality parameter of the media type or 1 in the case it does not exist.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Formatters.MediaTypeSegmentWithQuality.MediaType">
            <summary>
            Gets the media type of this <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.MediaTypeSegmentWithQuality"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Formatters.MediaTypeSegmentWithQuality.Quality">
            <summary>
            Gets the quality of this <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.MediaTypeSegmentWithQuality"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.MediaTypeSegmentWithQuality.ToString">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter">
            <summary>
            Writes an object to the output stream.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter.SupportedMediaTypes">
            <summary>
            Gets the mutable collection of media type elements supported by
            this <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter.CanWriteType(System.Type)">
            <summary>
            Returns a value indicating whether or not the given type can be written by this serializer.
            </summary>
            <param name="type">The object type.</param>
            <returns><c>true</c> if the type can be written, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter.GetSupportedContentTypes(System.String,System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter.CanWriteResult(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterCanWriteContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter.WriteAsync(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter.WriteResponseHeaders(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext)">
            <summary>
            Sets the headers on <see cref="T:Microsoft.AspNetCore.Http.HttpResponse"/> object.
            </summary>
            <param name="context">The formatter context associated with the call.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter.WriteResponseBodyAsync(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext)">
            <summary>
            Writes the response body.
            </summary>
            <param name="context">The formatter context associated with the call.</param>
            <returns>A task which can write the response body.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter">
            <summary>
            Always copies the <see cref="T:System.IO.Stream" /> to the response,
            regardless of requested content type.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter.CanWriteResult(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterCanWriteContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter.WriteAsync(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter">
            <summary>
            A <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.TextOutputFormatter"/> for simple text content.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter.#ctor">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter"/> that only supports plain text encoded as <see cref="P:System.Text.Encoding.UTF8" />
            or <see cref="P:System.Text.Encoding.Unicode" />.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter.CanWriteResult(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterCanWriteContext)">
            <summary>
            Verifies that the object to be formatted is a <see langword="string" /> and proceeds with the standard checks of
            <see cref="M:Microsoft.AspNetCore.Mvc.Formatters.OutputFormatter.CanWriteResult(OutputFormatterCanWriteContext)" />.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter.WriteResponseBodyAsync(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext,System.Text.Encoding)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter">
            <summary>
            A <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.TextInputFormatter"/> for JSON content that uses <see cref="T:System.Text.Json.JsonSerializer"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter.#ctor(Microsoft.AspNetCore.Mvc.JsonOptions,Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter})">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter"/>.
            </summary>
            <param name="options">The <see cref="T:Microsoft.AspNetCore.Mvc.JsonOptions"/>.</param>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter.SerializerOptions">
            <summary>
            Gets the <see cref="T:System.Text.Json.JsonSerializerOptions"/> used to configure the <see cref="T:System.Text.Json.JsonSerializer"/>.
            </summary>
            <remarks>
            A single instance of <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter"/> is used for all JSON formatting. Any
            changes to the options will affect all input formatting.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter.Microsoft#AspNetCore#Mvc#Formatters#IInputFormatterExceptionPolicy#ExceptionPolicy">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter.ReadRequestBodyAsync(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext,System.Text.Encoding)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter">
            <summary>
            A <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.TextOutputFormatter"/> for JSON content that uses <see cref="T:System.Text.Json.JsonSerializer"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter.#ctor(System.Text.Json.JsonSerializerOptions)">
            <summary>
            Initializes a new <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"/> instance.
            </summary>
            <param name="jsonSerializerOptions">The <see cref="T:System.Text.Json.JsonSerializerOptions"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter.SerializerOptions">
            <summary>
            Gets the <see cref="T:System.Text.Json.JsonSerializerOptions"/> used to configure the <see cref="T:System.Text.Json.JsonSerializer"/>.
            </summary>
            <remarks>
            A single instance of <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"/> is used for all JSON formatting. Any
            changes to the options will affect all output formatting.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter.WriteResponseBodyAsync(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext,System.Text.Encoding)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Formatters.TextInputFormatter">
            <summary>
            Reads an object from a request body with a text format.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Formatters.TextInputFormatter.UTF8EncodingWithoutBOM">
            <summary>
            Returns UTF8 Encoding without BOM and throws on invalid bytes.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Formatters.TextInputFormatter.UTF16EncodingLittleEndian">
            <summary>
            Returns UTF16 Encoding which uses littleEndian byte order with BOM and throws on invalid bytes.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Formatters.TextInputFormatter.SupportedEncodings">
            <summary>
            Gets the mutable collection of character encodings supported by
            this <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.TextInputFormatter"/>. The encodings are
            used when reading the data.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.TextInputFormatter.ReadRequestBodyAsync(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.TextInputFormatter.ReadRequestBodyAsync(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext,System.Text.Encoding)">
            <summary>
            Reads an object from the request body.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext"/>.</param>
            <param name="encoding">The <see cref="T:System.Text.Encoding"/> used to read the request body.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that on completion deserializes the request body.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.TextInputFormatter.SelectCharacterEncoding(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext)">
            <summary>
            Returns an <see cref="T:System.Text.Encoding"/> based on <paramref name="context"/>'s
            character set.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext"/>.</param>
            <returns>
            An <see cref="T:System.Text.Encoding"/> based on <paramref name="context"/>'s
            character set. <c>null</c> if no supported encoding was found.
            </returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Formatters.TextOutputFormatter">
            <summary>
            Writes an object in a given text format to the output stream.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.TextOutputFormatter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.TextOutputFormatter"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Formatters.TextOutputFormatter.SupportedEncodings">
            <summary>
            Gets the mutable collection of character encodings supported by
            this <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.TextOutputFormatter"/>. The encodings are
            used when writing the data.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.TextOutputFormatter.SelectCharacterEncoding(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext)">
            <summary>
            Determines the best <see cref="T:System.Text.Encoding"/> amongst the supported encodings
            for reading or writing an HTTP entity body based on the provided content type.
            </summary>
            <param name="context">The formatter context associated with the call.
            </param>
            <returns>The <see cref="T:System.Text.Encoding"/> to use when reading the request or writing the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.TextOutputFormatter.WriteAsync(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.TextOutputFormatter.WriteResponseBodyAsync(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Formatters.TextOutputFormatter.WriteResponseBodyAsync(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterWriteContext,System.Text.Encoding)">
            <summary>
            Writes the response body.
            </summary>
            <param name="context">The formatter context associated with the call.</param>
            <param name="selectedEncoding">The <see cref="T:System.Text.Encoding"/> that should be used to write the response.</param>
            <returns>A task which can write the response body.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.FromBodyAttribute">
            <summary>
            Specifies that a parameter or property should be bound using the request body.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.FromBodyAttribute.BindingSource">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.FromBodyAttribute.EmptyBodyBehavior">
            <summary>
            Gets or sets a value which decides whether body model binding should treat empty
            input as valid.
            </summary>
            <remarks>
            The default behavior is to use framework defaults as configured by <see cref="P:Microsoft.AspNetCore.Mvc.MvcOptions.AllowEmptyInputInBodyModelBinding"/>.
            Specifying <see cref="F:Microsoft.AspNetCore.Mvc.ModelBinding.EmptyBodyBehavior.Allow"/> or <see cref="F:Microsoft.AspNetCore.Mvc.ModelBinding.EmptyBodyBehavior.Disallow" /> will override the framework defaults.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.FromFormAttribute">
            <summary>
            Specifies that a parameter or property should be bound using form-data in the request body.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.FromFormAttribute.BindingSource">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.FromFormAttribute.Name">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.FromHeaderAttribute">
            <summary>
            Specifies that a parameter or property should be bound using the request headers.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.FromHeaderAttribute.BindingSource">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.FromHeaderAttribute.Name">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.FromQueryAttribute">
            <summary>
            Specifies that a parameter or property should be bound using the request query string.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.FromQueryAttribute.BindingSource">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.FromQueryAttribute.Name">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.FromRouteAttribute">
            <summary>
            Specifies that a parameter or property should be bound using route-data from the current request.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.FromRouteAttribute.BindingSource">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.FromRouteAttribute.Name">
            <summary>
            The <see cref="P:Microsoft.AspNetCore.Http.HttpRequest.RouteValues"/> name.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.FromServicesAttribute">
             <summary>
             Specifies that a parameter or property should be bound using the request services.
             </summary>
             <example>
             In this example an implementation of IProductModelRequestService is registered as a service.
             Then in the GetProduct action, the parameter is bound to an instance of IProductModelRequestService
             which is resolved from the request services.
            
             <code>
             [HttpGet]
             public ProductModel GetProduct([FromServices] IProductModelRequestService productModelRequest)
             {
                 return productModelRequest.Value;
             }
             </code>
             </example>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.FromServicesAttribute.BindingSource">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.HttpActionResult">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ActionResult"/> that when executed will produce a response based on the <see cref="T:Microsoft.AspNetCore.Http.IResult"/> provided.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.HttpActionResult.Result">
            <summary>
            Gets the instance of the current <see cref="T:Microsoft.AspNetCore.Http.IResult"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.HttpActionResult.#ctor(Microsoft.AspNetCore.Http.IResult)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.HttpActionResult"/> class with the
            <see cref="T:Microsoft.AspNetCore.Http.IResult"/> provided.
            </summary>
            <param name="result">The <see cref="T:Microsoft.AspNetCore.Http.IResult"/> instance to be used during the <see cref="M:Microsoft.AspNetCore.Mvc.HttpActionResult.ExecuteResultAsync(Microsoft.AspNetCore.Mvc.ActionContext)"/> invocation.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.HttpActionResult.ExecuteResultAsync(Microsoft.AspNetCore.Mvc.ActionContext)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.HttpDeleteAttribute">
            <summary>
            Identifies an action that supports the HTTP DELETE method.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.HttpDeleteAttribute.#ctor">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.HttpDeleteAttribute"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.HttpDeleteAttribute.#ctor(System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.HttpDeleteAttribute"/> with the given route template.
            </summary>
            <param name="template">The route template. May not be null.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.HttpGetAttribute">
            <summary>
            Identifies an action that supports the HTTP GET method.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.HttpGetAttribute.#ctor">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.HttpGetAttribute"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.HttpGetAttribute.#ctor(System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.HttpGetAttribute"/> with the given route template.
            </summary>
            <param name="template">The route template. May not be null.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.HttpHeadAttribute">
            <summary>
            Identifies an action that supports the HTTP HEAD method.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.HttpHeadAttribute.#ctor">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.HttpHeadAttribute"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.HttpHeadAttribute.#ctor(System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.HttpHeadAttribute"/> with the given route template.
            </summary>
            <param name="template">The route template. May not be null.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.HttpOptionsAttribute">
            <summary>
            Identifies an action that supports the HTTP OPTIONS method.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.HttpOptionsAttribute.#ctor">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.HttpOptionsAttribute"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.HttpOptionsAttribute.#ctor(System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.HttpOptionsAttribute"/> with the given route template.
            </summary>
            <param name="template">The route template. May not be null.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.HttpPatchAttribute">
            <summary>
            Identifies an action that supports the HTTP PATCH method.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.HttpPatchAttribute.#ctor">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.HttpPatchAttribute"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.HttpPatchAttribute.#ctor(System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.HttpPatchAttribute"/> with the given route template.
            </summary>
            <param name="template">The route template. May not be null.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.HttpPostAttribute">
            <summary>
            Identifies an action that supports the HTTP POST method.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.HttpPostAttribute.#ctor">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.HttpPostAttribute"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.HttpPostAttribute.#ctor(System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.HttpPostAttribute"/> with the given route template.
            </summary>
            <param name="template">The route template. May not be null.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.HttpPutAttribute">
            <summary>
            Identifies an action that supports the HTTP PUT method.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.HttpPutAttribute.#ctor">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.HttpPutAttribute"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.HttpPutAttribute.#ctor(System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.HttpPutAttribute"/> with the given route template.
            </summary>
            <param name="template">The route template. May not be null.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.IDesignTimeMvcBuilderConfiguration">
            <summary>
            Configures the <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/>. Implement this interface to enable design-time configuration
            (for instance during pre-compilation of views) of <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.IDesignTimeMvcBuilderConfiguration.ConfigureMvc(Microsoft.Extensions.DependencyInjection.IMvcBuilder)">
            <summary>
            Configures the <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/>.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/>.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Infrastructure.ActionContextAccessor">
            <summary>
            Type that provides access to an <see cref="P:Microsoft.AspNetCore.Mvc.Infrastructure.ActionContextAccessor.ActionContext"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Infrastructure.ActionContextAccessor.ActionContext">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Infrastructure.ActionDescriptorCollection">
            <summary>
            A cached collection of <see cref="T:Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor" />.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.ActionDescriptorCollection.#ctor(System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor},System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.ActionDescriptorCollection"/>.
            </summary>
            <param name="items">The result of action discovery</param>
            <param name="version">The unique version of discovered actions.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Infrastructure.ActionDescriptorCollection.Items">
            <summary>
            Returns the cached <see cref="T:System.Collections.Generic.IReadOnlyList`1"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Infrastructure.ActionDescriptorCollection.Version">
            <summary>
            Returns the unique version of the currently cached items.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Infrastructure.ActionDescriptorCollectionProvider">
            <summary>
            A base class for <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.IActionDescriptorCollectionProvider"/> which also provides an <see cref="T:Microsoft.Extensions.Primitives.IChangeToken"/>
            for reactive notifications of <see cref="T:Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor"/> changes.
            </summary>
            <remarks>
            <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.ActionDescriptorCollectionProvider"/> is used as a base class by the default implementation of
            <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.IActionDescriptorCollectionProvider"/>. To retrieve an instance of <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.ActionDescriptorCollectionProvider"/>,
            obtain the <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.IActionDescriptorCollectionProvider"/> from the dependency injection provider and
            downcast to <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.ActionDescriptorCollectionProvider"/>.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Infrastructure.ActionDescriptorCollectionProvider.ActionDescriptors">
            <summary>
            Returns the current cached <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.ActionDescriptorCollection"/>
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.ActionDescriptorCollectionProvider.GetChangeToken">
            <summary>
            Gets an <see cref="T:Microsoft.Extensions.Primitives.IChangeToken"/> that will be signaled after the <see cref="P:Microsoft.AspNetCore.Mvc.Infrastructure.ActionDescriptorCollectionProvider.ActionDescriptors"/>
            collection has changed.
            </summary>
            <returns>The <see cref="T:Microsoft.Extensions.Primitives.IChangeToken"/>.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Infrastructure.ActionResultObjectValueAttribute">
            <summary>
            Attribute annotated on ActionResult constructor, helper method parameters, and properties to indicate
            that the parameter or property is used to set the "value" for ActionResult.
            <para>
            Analyzers match this parameter by type name. This allows users to annotate custom results \ custom helpers
            with a user-defined attribute without having to expose this type.
            </para>
            <para>
            This attribute is intentionally marked Inherited=false since the analyzer does not walk the inheritance graph.
            </para>
            </summary>
            <example>
            Annotated constructor parameter:
            <code>
            public BadRequestObjectResult([ActionResultObjectValue] object error)
                :base(error)
            {
                StatusCode = DefaultStatusCode;
            }
            </code>
            Annotated property:
            <code>
            public class ObjectResult : ActionResult, IStatusCodeActionResult
            {
                [ActionResultObjectValue]
                public object Value { get; set; }
            }
            </code>
            </example>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Infrastructure.ActionResultStatusCodeAttribute">
            <summary>
            Attribute annotated on ActionResult constructor and helper method parameters to indicate
            that the parameter is used to set the "statusCode" for the ActionResult.
            <para>
            Analyzers match this parameter by type name. This allows users to annotate custom results \ custom helpers
            with a user-defined attribute without having to expose this type.
            </para>
            <para>
            This attribute is intentionally marked Inherited=false since the analyzer does not walk the inheritance graph.
            </para>
            </summary>
            <example>
            Annotated constructor parameter:
            <code>
            public StatusCodeResult([ActionResultStatusCode] int statusCode)
            {
                StatusCode = statusCode;
            }
            </code>
            </example>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Infrastructure.ActionSelector">
            <summary>
            A default <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.IActionSelector"/> implementation.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.ActionSelector.#ctor(Microsoft.AspNetCore.Mvc.Infrastructure.IActionDescriptorCollectionProvider,Microsoft.AspNetCore.Mvc.ActionConstraints.ActionConstraintCache,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.ActionSelector"/>.
            </summary>
            <param name="actionDescriptorCollectionProvider">
            The <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.IActionDescriptorCollectionProvider"/>.
            </param>
            <param name="actionConstraintCache">The <see cref="T:Microsoft.AspNetCore.Mvc.ActionConstraints.ActionConstraintCache"/> that
            providers a set of <see cref="T:Microsoft.AspNetCore.Mvc.ActionConstraints.IActionConstraint"/> instances.</param>
            <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/>.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Infrastructure.AmbiguousActionException">
            <summary>
            An exception which indicates multiple matches in action selection.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.AmbiguousActionException.#ctor(System.String)">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.AmbiguousActionException" />.
            </summary>
            <param name="message">The exception message.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.AmbiguousActionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Framework infrastructure. Do not call directly.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Infrastructure.AsyncEnumerableReader">
            <summary>
            Type that reads an <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> instance into a
            generic collection instance.
            </summary>
            <remarks>
            This type is used to create a strongly typed synchronous <see cref="T:System.Collections.Generic.ICollection`1"/> instance from
            an <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/>. An accurate <see cref="T:System.Collections.Generic.ICollection`1"/> is required for XML formatters to
            correctly serialize.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.AsyncEnumerableReader.#ctor(Microsoft.AspNetCore.Mvc.MvcOptions)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.AsyncEnumerableReader"/>.
            </summary>
            <param name="mvcOptions">Accessor to <see cref="T:Microsoft.AspNetCore.Mvc.MvcOptions"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.AsyncEnumerableReader.TryGetReader(System.Type,System.Func{System.Object,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Collections.ICollection}}@)">
            <summary>
            Attempts to produces a delegate that reads an <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> into an <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="type">The type to read.</param>
            <param name="reader">A delegate that when awaited reads the <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/>.</param>
            <returns><see langword="true" /> when <paramref name="type"/> is an instance of <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/>, othwerise <see langword="false"/>.</returns>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter.Order">
            <summary>
            Gets the filter order. Defaults to -2000 so that it runs early.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter.Log.__TransformingClientErrorStruct">
            <summary> This API supports the logging infrastructure and is not intended to be used directly from your code. It is subject to change in the future. </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Infrastructure.CompatibilitySwitch`1">
            <summary>
            Infrastructure supporting the implementation of <see cref="T:Microsoft.AspNetCore.Mvc.CompatibilityVersion"/>. This is an
            implementation of <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.ICompatibilitySwitch"/> suitable for use with the <see cref="T:Microsoft.Extensions.Options.IOptions`1"/>
            pattern. This is framework infrastructure and should not be used by application code.
            </summary>
            <typeparam name="TValue">The type of value associated with the compatibility switch.</typeparam>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.CompatibilitySwitch`1.#ctor(System.String)">
            <summary>
            Creates a new compatibility switch with the provided name.
            </summary>
            <param name="name">
            The compatibility switch name. The name must match a property name on an options type.
            </param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.CompatibilitySwitch`1.#ctor(System.String,`0)">
            <summary>
            Creates a new compatibility switch with the provided name and initial value.
            </summary>
            <param name="name">
            The compatibility switch name. The name must match a property name on an options type.
            </param>
            <param name="initialValue">
            The initial value to assign to the switch.
            </param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Infrastructure.CompatibilitySwitch`1.IsValueSet">
            <summary>
            Gets a value indicating whether the <see cref="P:Microsoft.AspNetCore.Mvc.Infrastructure.CompatibilitySwitch`1.Value"/> property has been set.
            </summary>
            <remarks>
            This is used by the compatibility infrastructure to determine whether the application developer
            has set explicitly set the value associated with this switch.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Infrastructure.CompatibilitySwitch`1.Name">
            <summary>
            Gets the name of the compatibility switch.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Infrastructure.CompatibilitySwitch`1.Value">
            <summary>
            Gets or set the value associated with the compatibility switch.
            </summary>
            <remarks>
            Setting the switch value using <see cref="P:Microsoft.AspNetCore.Mvc.Infrastructure.CompatibilitySwitch`1.Value"/> will set <see cref="P:Microsoft.AspNetCore.Mvc.Infrastructure.CompatibilitySwitch`1.IsValueSet"/> to <c>true</c>.
            As a consequence, the compatibility infrastructure will consider this switch explicitly configured by
            the application developer, and will not apply a default value based on the compatibility version.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Infrastructure.ConfigureCompatibilityOptions`1">
            <summary>
            A base class for infrastructure that implements ASP.NET Core MVC's support for
            <see cref="T:Microsoft.AspNetCore.Mvc.CompatibilityVersion"/>. This is framework infrastructure and should not be used
            by application code.
            </summary>
            <typeparam name="TOptions"></typeparam>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.ConfigureCompatibilityOptions`1.#ctor(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Mvc.Infrastructure.MvcCompatibilityOptions})">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.ConfigureCompatibilityOptions`1"/>.
            </summary>
            <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/>.</param>
            <param name="compatibilityOptions">The <see cref="T:Microsoft.Extensions.Options.IOptions`1"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Infrastructure.ConfigureCompatibilityOptions`1.DefaultValues">
            <summary>
            Gets the default values of compatibility switches associated with the applications configured
            <see cref="T:Microsoft.AspNetCore.Mvc.CompatibilityVersion"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Infrastructure.ConfigureCompatibilityOptions`1.Version">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Mvc.CompatibilityVersion"/> configured for the application.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.ConfigureCompatibilityOptions`1.PostConfigure(System.String,`0)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Infrastructure.ContentResultExecutor">
            <summary>
            A <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.IActionResultExecutor`1"/> that is responsible for <see cref="T:Microsoft.AspNetCore.Mvc.ContentResult"/>
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.ContentResultExecutor.#ctor(Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.Mvc.Infrastructure.ContentResultExecutor},Microsoft.AspNetCore.Mvc.Infrastructure.IHttpResponseStreamWriterFactory)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.ContentResultExecutor"/>.
            </summary>
            <param name="logger">The logger to use.</param>
            <param name="httpResponseStreamWriterFactory">The stream writer factory.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.ContentResultExecutor.ExecuteAsync(Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.ContentResult)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync">
            <remarks><see cref="M:Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeFilterPipelineAsync"/> for details on what the
            variables in this method represent.</remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvokerProvider.OnProvidersExecuting(Microsoft.AspNetCore.Mvc.Abstractions.ActionInvokerProviderContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvokerProvider.OnProvidersExecuted(Microsoft.AspNetCore.Mvc.Abstractions.ActionInvokerProviderContext)">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Infrastructure.DefaultActionDescriptorCollectionProvider.ActionDescriptors">
            <summary>
            Returns a cached collection of <see cref="T:Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor" />.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.DefaultActionDescriptorCollectionProvider.GetChangeToken">
            <summary>
            Gets an <see cref="T:Microsoft.Extensions.Primitives.IChangeToken"/> that will be signaled after the <see cref="P:Microsoft.AspNetCore.Mvc.Infrastructure.DefaultActionDescriptorCollectionProvider.ActionDescriptors"/>
            collection has changed.
            </summary>
            <returns>The <see cref="T:Microsoft.Extensions.Primitives.IChangeToken"/>.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Infrastructure.DefaultOutputFormatterSelector">
            <summary>
            The default implementation of <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.OutputFormatterSelector"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.DefaultOutputFormatterSelector.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Mvc.MvcOptions},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.DefaultOutputFormatterSelector"/>
            </summary>
            <param name="options">Used to access <see cref="T:Microsoft.AspNetCore.Mvc.MvcOptions"/>.</param>
            <param name="loggerFactory">The logger factory.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.DefaultOutputFormatterSelector.SelectFormatter(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterCanWriteContext,System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter},Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Infrastructure.DefaultStatusCodeAttribute">
            <summary>
            Specifies the default status code associated with an <see cref="T:Microsoft.AspNetCore.Mvc.ActionResult"/>.
            </summary>
            <remarks>
            This attribute is informational only and does not have any runtime effects.
            Applying the attribute on a class indicates that the <see cref="T:Microsoft.AspNetCore.Mvc.ActionResult"/>
            represented by that class uses a particular status code by default. Applying the
            attribute to a method indicates that the <see cref="T:Microsoft.AspNetCore.Mvc.ActionResult"/> returned by the
            method uses that status code by default. The later is helpful in scenarios where we
            need to specify that a method modifies the status code that an <see cref="T:Microsoft.AspNetCore.Mvc.ActionResult"/>
            uses by default in its logic or for specifying the status code for consumption in
            the API analyzers.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.DefaultStatusCodeAttribute.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.DefaultStatusCodeAttribute"/>.
            </summary>
            <param name="statusCode">The default status code.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Infrastructure.DefaultStatusCodeAttribute.StatusCode">
            <summary>
            Gets the default status code.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor">
            <summary>
            A <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.IActionResultExecutor`1"/>
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor.#ctor(Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Intializes a new <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor"/>.
            </summary>
            <param name="loggerFactory">The factory used to create loggers.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor.ExecuteAsync(Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.FileContentResult)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.FileContentResultExecutor.WriteFileAsync(Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.FileContentResult,Microsoft.Net.Http.Headers.RangeItemHeaderValue,System.Int64)">
            <summary>
            Writes the file content.
            </summary>
            <param name="context">The action context.</param>
            <param name="result">The <see cref="T:Microsoft.AspNetCore.Mvc.FileContentResult"/>.</param>
            <param name="range">The <see cref="T:Microsoft.Net.Http.Headers.RangeItemHeaderValue"/>.</param>
            <param name="rangeLength">The length of the range.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Infrastructure.FileResultExecutorBase">
            <summary>
            Base class for executing a file result.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Infrastructure.FileResultExecutorBase.BufferSize">
            <summary>
            The buffer size: 64 * 1024.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.FileResultExecutorBase.#ctor(Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Intializes a new <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.FileResultExecutorBase"/>.
            </summary>
            <param name="logger">The logger.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Infrastructure.FileResultExecutorBase.Logger">
            <summary>
            The logger to use.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.FileResultExecutorBase.SetHeadersAndLog(Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.FileResult,System.Nullable{System.Int64},System.Boolean,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)">
            <summary>
            Sets etag and last modified headers.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.ActionContext"/>.</param>
            <param name="result">The <see cref="T:Microsoft.AspNetCore.Mvc.FileResult"/>.</param>
            <param name="fileLength">The nullable file length.</param>
            <param name="enableRangeProcessing">Whether range processing is enabled.</param>
            <param name="lastModified">The nullable lastModified date.</param>
            <param name="etag">The <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue"/>.</param>
            <returns>A tuple with the <see cref="T:Microsoft.Net.Http.Headers.RangeItemHeaderValue"/> range, length, and whether the body was served.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.FileResultExecutorBase.CreateLogger``1(Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Creates a logger using the factory.
            </summary>
            <typeparam name="T">The type being logged.</typeparam>
            <param name="factory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/>.</param>
            <returns>An <see cref="T:Microsoft.Extensions.Logging.ILogger"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.FileResultExecutorBase.WriteFileAsync(Microsoft.AspNetCore.Http.HttpContext,System.IO.Stream,Microsoft.Net.Http.Headers.RangeItemHeaderValue,System.Int64)">
            <summary>
            Write the contents of the fileStream to the response body.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/>.</param>
            <param name="fileStream">The fileStream to write.</param>
            <param name="range">The <see cref="T:Microsoft.Net.Http.Headers.RangeItemHeaderValue"/>.</param>
            <param name="rangeLength">The range length.</param>
            <returns>The async task.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Infrastructure.FileStreamResultExecutor">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.IActionResultExecutor`1"/> for a file stream result.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.FileStreamResultExecutor.#ctor(Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.FileStreamResultExecutor"/>.
            </summary>
            <param name="loggerFactory">The factory used to create loggers.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.FileStreamResultExecutor.ExecuteAsync(Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.FileStreamResult)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.FileStreamResultExecutor.WriteFileAsync(Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.FileStreamResult,Microsoft.Net.Http.Headers.RangeItemHeaderValue,System.Int64)">
            <summary>
            Write the contents of the FileStreamResult to the response body.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.ActionContext"/>.</param>
            <param name="result">The FileStreamResult to write.</param>
            <param name="range">The <see cref="T:Microsoft.Net.Http.Headers.RangeItemHeaderValue"/>.</param>
            <param name="rangeLength">The range length.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor">
            <summary>
            Defines an interface for exposing an <see cref="P:Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor.ActionContext"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor.ActionContext">
            <summary>
            Gets or sets the <see cref="P:Microsoft.AspNetCore.Mvc.Infrastructure.IActionContextAccessor.ActionContext"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Infrastructure.IActionDescriptorChangeProvider">
            <summary>
            Provides a way to signal invalidation of the cached collection of <see cref="T:Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor" /> from an
            <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.IActionDescriptorCollectionProvider"/>.
            </summary>
            <remarks>
            The change token returned from <see cref="M:Microsoft.AspNetCore.Mvc.Infrastructure.IActionDescriptorChangeProvider.GetChangeToken"/> is only for use inside the MVC infrastructure.
            Use <see cref="M:Microsoft.AspNetCore.Mvc.Infrastructure.ActionDescriptorCollectionProvider.GetChangeToken"/> to be notified of <see cref="T:Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor"/>
            changes.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.IActionDescriptorChangeProvider.GetChangeToken">
            <summary>
            Gets a <see cref="T:Microsoft.Extensions.Primitives.IChangeToken"/> used to signal invalidation of cached <see cref="T:Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor"/>
            instances.
            </summary>
            <returns>The <see cref="T:Microsoft.Extensions.Primitives.IChangeToken"/>.</returns>
            <remarks>
            The change token returned from <see cref="M:Microsoft.AspNetCore.Mvc.Infrastructure.IActionDescriptorChangeProvider.GetChangeToken"/> is only for use inside the MVC infrastructure.
            Use <see cref="M:Microsoft.AspNetCore.Mvc.Infrastructure.ActionDescriptorCollectionProvider.GetChangeToken"/> to be notified of <see cref="T:Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor"/>
            changes.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Infrastructure.IActionDescriptorCollectionProvider">
             <summary>
             Provides the currently cached collection of <see cref="T:Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor"/>.
             </summary>
             <remarks>
             <para>
             The default implementation internally caches the collection and uses
             <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.IActionDescriptorChangeProvider"/> to invalidate this cache, incrementing
             <see cref="P:Microsoft.AspNetCore.Mvc.Infrastructure.ActionDescriptorCollection.Version"/> the collection is reconstructed.
            </para>
            <para>
             To be reactively notified of changes, downcast to <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.ActionDescriptorCollectionProvider"/> and
             subscribe to the change token returned from <see cref="M:Microsoft.AspNetCore.Mvc.Infrastructure.ActionDescriptorCollectionProvider.GetChangeToken"/>
             using <see cref="M:Microsoft.Extensions.Primitives.ChangeToken.OnChange(System.Func{Microsoft.Extensions.Primitives.IChangeToken},System.Action)"/>.
             </para>
             <para>
             Default consumers of this service, are aware of the version and will recache
             data as appropriate, but rely on the version being unique.
             </para>
             </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Infrastructure.IActionDescriptorCollectionProvider.ActionDescriptors">
            <summary>
            Returns the current cached <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.ActionDescriptorCollection"/>
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Infrastructure.IActionInvokerFactory">
            <summary>
            Defines an interface for creating an <see cref="T:Microsoft.AspNetCore.Mvc.Abstractions.IActionInvoker"/> for the current request.
            </summary>
            <remarks>
            The default <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.IActionInvokerFactory"/> implementation creates an <see cref="T:Microsoft.AspNetCore.Mvc.Abstractions.IActionInvoker"/> by
            calling into each <see cref="T:Microsoft.AspNetCore.Mvc.Abstractions.IActionInvokerProvider"/>. See <see cref="T:Microsoft.AspNetCore.Mvc.Abstractions.IActionInvokerProvider"/> for more
            details.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.IActionInvokerFactory.CreateInvoker(Microsoft.AspNetCore.Mvc.ActionContext)">
            <summary>
            Creates an <see cref="T:Microsoft.AspNetCore.Mvc.Abstractions.IActionInvoker"/> for the current request associated with
            <paramref name="actionContext"/>.
            </summary>
            <param name="actionContext">
            The <see cref="T:Microsoft.AspNetCore.Mvc.ActionContext"/> associated with the current request.
            </param>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.Abstractions.IActionInvoker"/> or <c>null</c>.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Infrastructure.IActionResultExecutor`1">
            <summary>
            Defines an interface for a service which can execute a particular kind of <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> by
            manipulating the <see cref="T:Microsoft.AspNetCore.Http.HttpResponse"/>.
            </summary>
            <typeparam name="TResult">The type of <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</typeparam>
            <remarks>
            Implementations of <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.IActionResultExecutor`1"/> are typically called by the
            <see cref="M:Microsoft.AspNetCore.Mvc.IActionResult.ExecuteResultAsync(Microsoft.AspNetCore.Mvc.ActionContext)"/> method of the corresponding action result type.
            Implementations should be registered as singleton services.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.IActionResultExecutor`1.ExecuteAsync(Microsoft.AspNetCore.Mvc.ActionContext,`0)">
            <summary>
            Asynchronously executes the action result, by modifying the <see cref="T:Microsoft.AspNetCore.Http.HttpResponse"/>.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.ActionContext"/> associated with the current request."/></param>
            <param name="result">The action result to execute.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> which represents the asynchronous operation.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Infrastructure.IActionResultTypeMapper">
            <summary>
            Provides a mapping from the return value of an action to an <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>
            for request processing.
            </summary>
            <remarks>
            The default implementation of this service handles the conversion of
            <see cref="T:Microsoft.AspNetCore.Mvc.ActionResult`1"/> to an <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> during request
            processing as well as the mapping of <see cref="T:Microsoft.AspNetCore.Mvc.ActionResult`1"/> to <c>TValue</c>
            during API Explorer processing.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.IActionResultTypeMapper.GetResultDataType(System.Type)">
            <summary>
            Gets the result data type that corresponds to <paramref name="returnType"/>. This
            method will not be called for actions that return <c>void</c> or an <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>
            type.
            </summary>
            <param name="returnType">The declared return type of an action.</param>
            <returns>A <see cref="T:System.Type"/> that represents the response data.</returns>
            <remarks>
            Prior to calling this method, the infrastructure will unwrap <see cref="T:System.Threading.Tasks.Task`1"/> or
            other task-like types.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.IActionResultTypeMapper.Convert(System.Object,System.Type)">
            <summary>
            Converts the result of an action to an <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> for response processing.
            This method will be not be called when a method returns <c>void</c> or an
            <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> value.
            </summary>
            <param name="value">The action return value. May be <c>null</c>.</param>
            <param name="returnType">The declared return type.</param>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> for response processing.</returns>
            <remarks>
            Prior to calling this method, the infrastructure will unwrap <see cref="T:System.Threading.Tasks.Task`1"/> or
            other task-like types.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Infrastructure.IActionSelector">
            <summary>
            Defines an interface for selecting an MVC action to invoke for the current request.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.IActionSelector.SelectCandidates(Microsoft.AspNetCore.Routing.RouteContext)">
            <summary>
            Selects a set of <see cref="T:Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor"/> candidates for the current request associated with
            <paramref name="context"/>.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Routing.RouteContext"/> associated with the current request.</param>
            <returns>A set of <see cref="T:Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor"/> candidates or <c>null</c>.</returns>
            <remarks>
            <para>
            Used by conventional routing to select the set of actions that match the route values for the
            current request. Action constraints associated with the candidates are not invoked by this method
            </para>
            <para>
            Attribute routing does not call this method.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.IActionSelector.SelectBestCandidate(Microsoft.AspNetCore.Routing.RouteContext,System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor})">
            <summary>
            Selects the best <see cref="T:Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor"/> candidate from <paramref name="candidates"/> for the
            current request associated with <paramref name="context"/>.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Routing.RouteContext"/> associated with the current request.</param>
            <param name="candidates">The set of <see cref="T:Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor"/> candidates.</param>
            <returns>The best <see cref="T:Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor"/> candidate for the current request or <c>null</c>.</returns>
            <exception cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.AmbiguousActionException">
            Thrown when action selection results in an ambiguity.
            </exception>
            <remarks>
            <para>
            Invokes action constraints associated with the candidates.
            </para>
            <para>
            Used by conventional routing after calling <see cref="M:Microsoft.AspNetCore.Mvc.Infrastructure.IActionSelector.SelectCandidates(Microsoft.AspNetCore.Routing.RouteContext)"/> to apply action constraints and
            disambiguate between multiple candidates.
            </para>
            <para>
            Used by attribute routing to apply action constraints and disambiguate between multiple candidates.
            </para>
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Infrastructure.IApiBehaviorMetadata">
            <summary>
            A <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"/> that indicates that a type and all derived types are used to serve HTTP API responses.
            <para>
            Controllers decorated with this attribute (<see cref="T:Microsoft.AspNetCore.Mvc.ApiControllerAttribute"/>) are configured with
            features and behavior targeted at improving the developer experience for building APIs.
            </para>
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Infrastructure.IClientErrorActionResult">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.IStatusCodeActionResult"/> that can be transformed to a more descriptive client error.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Infrastructure.IClientErrorFactory">
            <summary>
            A factory for producing client errors. This contract is used by controllers annotated
            with <see cref="T:Microsoft.AspNetCore.Mvc.ApiControllerAttribute"/> to transform <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.IClientErrorActionResult"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.IClientErrorFactory.GetClientError(Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.Infrastructure.IClientErrorActionResult)">
            <summary>
            Transforms <paramref name="clientError"/> for the specified <paramref name="actionContext"/>.
            </summary>
            <param name="actionContext">The <see cref="T:Microsoft.AspNetCore.Mvc.ActionContext"/>.</param>
            <param name="clientError">The <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.IClientErrorActionResult"/>.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> that would be returned to the client.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Infrastructure.ICompatibilitySwitch">
            <summary>
            Defines a compatibility switch. This is framework infrastructure and should not be used
            by application code.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Infrastructure.ICompatibilitySwitch.IsValueSet">
            <summary>
            Gets a value indicating whether the <see cref="P:Microsoft.AspNetCore.Mvc.Infrastructure.ICompatibilitySwitch.Value"/> property has been set.
            </summary>
            <remarks>
            This is used by the compatibility infrastructure to determine whether the application developer
            has set explicitly set the value associated with this switch.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Infrastructure.ICompatibilitySwitch.Name">
            <summary>
            Gets the name of the compatibility switch.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Infrastructure.ICompatibilitySwitch.Value">
            <summary>
            Gets or set the value associated with the compatibility switch.
            </summary>
            <remarks>
            Setting the switch value using <see cref="P:Microsoft.AspNetCore.Mvc.Infrastructure.ICompatibilitySwitch.Value"/> will not set <see cref="P:Microsoft.AspNetCore.Mvc.Infrastructure.ICompatibilitySwitch.IsValueSet"/> to <c>true</c>.
            This should be used by the compatibility infrastructure when <see cref="P:Microsoft.AspNetCore.Mvc.Infrastructure.ICompatibilitySwitch.IsValueSet"/> is <c>false</c>
            to apply a compatibility value based on <see cref="T:Microsoft.AspNetCore.Mvc.CompatibilityVersion"/>.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Infrastructure.IConvertToActionResult">
            <summary>
            Defines the contract to convert a type to an <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> during action invocation.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.IConvertToActionResult.Convert">
            <summary>
            Converts the current instance to an instance of <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.
            </summary>
            <returns>The converted <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/>.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Infrastructure.IHttpRequestStreamReaderFactory">
            <summary>
            Creates <see cref="T:System.IO.TextReader"/> instances for reading from <see cref="P:Microsoft.AspNetCore.Http.HttpRequest.Body"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.IHttpRequestStreamReaderFactory.CreateReader(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Creates a new <see cref="T:System.IO.TextReader"/>.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/>, usually <see cref="P:Microsoft.AspNetCore.Http.HttpRequest.Body"/>.</param>
            <param name="encoding">The <see cref="T:System.Text.Encoding"/>, usually <see cref="P:System.Text.Encoding.UTF8"/>.</param>
            <returns>A <see cref="T:System.IO.TextReader"/>.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Infrastructure.IHttpResponseStreamWriterFactory">
            <summary>
            Creates <see cref="T:System.IO.TextWriter"/> instances for writing to <see cref="P:Microsoft.AspNetCore.Http.HttpResponse.Body"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.IHttpResponseStreamWriterFactory.CreateWriter(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Creates a new <see cref="T:System.IO.TextWriter"/>.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/>, usually <see cref="P:Microsoft.AspNetCore.Http.HttpResponse.Body"/>.</param>
            <param name="encoding">The <see cref="T:System.Text.Encoding"/>, usually <see cref="P:System.Text.Encoding.UTF8"/>.</param>
            <returns>A <see cref="T:System.IO.TextWriter"/>.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Infrastructure.IParameterInfoParameterDescriptor">
            <summary>
            A <see cref="T:Microsoft.AspNetCore.Mvc.Abstractions.ParameterDescriptor"/> for action parameters.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Infrastructure.IParameterInfoParameterDescriptor.ParameterInfo">
            <summary>
            Gets the <see cref="T:System.Reflection.ParameterInfo"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Infrastructure.IPropertyInfoParameterDescriptor">
            <summary>
            A <see cref="T:Microsoft.AspNetCore.Mvc.Abstractions.ParameterDescriptor"/> for bound properties.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Infrastructure.IPropertyInfoParameterDescriptor.PropertyInfo">
            <summary>
            Gets the <see cref="T:System.Reflection.PropertyInfo"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Infrastructure.IStatusCodeActionResult">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> that when executed will
            produce an HTTP response with the specified <see cref="P:Microsoft.AspNetCore.Mvc.Infrastructure.IStatusCodeActionResult.StatusCode"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Infrastructure.IStatusCodeActionResult.StatusCode">
            <summary>
            Gets the HTTP status code.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Infrastructure.ITypeActivatorCache">
            <summary>
            Caches <see cref="T:Microsoft.Extensions.DependencyInjection.ObjectFactory"/> instances produced by
            <see cref="M:Microsoft.Extensions.DependencyInjection.ActivatorUtilities.CreateFactory(System.Type,System.Type[])"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.ITypeActivatorCache.CreateInstance``1(System.IServiceProvider,System.Type)">
            <summary>
            Creates an instance of <typeparamref name="TInstance"/>.
            </summary>
            <param name="serviceProvider">The <see cref="T:System.IServiceProvider"/> used to resolve dependencies for
            <paramref name="optionType"/>.</param>
            <param name="optionType">The <see cref="T:System.Type"/> of the <typeparamref name="TInstance"/> to create.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Infrastructure.LocalRedirectResultExecutor">
            <summary>
            A <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.IActionResultExecutor`1"/> that handles <see cref="T:Microsoft.AspNetCore.Mvc.LocalRedirectResult"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.LocalRedirectResultExecutor.#ctor(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.AspNetCore.Mvc.Routing.IUrlHelperFactory)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.LocalRedirectResultExecutor"/>.
            </summary>
            <param name="loggerFactory">Used to create loggers.</param>
            <param name="urlHelperFactory">Used to create url helpers.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.LocalRedirectResultExecutor.ExecuteAsync(Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.LocalRedirectResult)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Infrastructure.MemoryPoolHttpRequestStreamReaderFactory">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.IHttpRequestStreamReaderFactory"/> that uses pooled buffers.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Infrastructure.MemoryPoolHttpRequestStreamReaderFactory.DefaultBufferSize">
            <summary>
            The default size of created char buffers.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.MemoryPoolHttpRequestStreamReaderFactory.#ctor(System.Buffers.ArrayPool{System.Byte},System.Buffers.ArrayPool{System.Char})">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.MemoryPoolHttpRequestStreamReaderFactory"/>.
            </summary>
            <param name="bytePool">
            The <see cref="T:System.Buffers.ArrayPool`1"/> for creating <see cref="T:byte[]"/> buffers.
            </param>
            <param name="charPool">
            The <see cref="T:System.Buffers.ArrayPool`1"/> for creating <see cref="T:char[]"/> buffers.
            </param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.MemoryPoolHttpRequestStreamReaderFactory.CreateReader(System.IO.Stream,System.Text.Encoding)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Infrastructure.MemoryPoolHttpResponseStreamWriterFactory">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.IHttpResponseStreamWriterFactory"/> that uses pooled buffers.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Infrastructure.MemoryPoolHttpResponseStreamWriterFactory.DefaultBufferSize">
            <summary>
            The default size of buffers <see cref="T:Microsoft.AspNetCore.WebUtilities.HttpResponseStreamWriter"/>s will allocate.
            </summary>
            <value>
            16K causes each <see cref="T:Microsoft.AspNetCore.WebUtilities.HttpResponseStreamWriter"/> to allocate one 16K
            <see langword="char"/> array and one 32K (for UTF8) <see langword="byte"/> array.
            </value>
            <remarks>
            <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.MemoryPoolHttpResponseStreamWriterFactory"/> maintains <see cref="T:System.Buffers.ArrayPool`1"/>s
            for these arrays.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.MemoryPoolHttpResponseStreamWriterFactory.#ctor(System.Buffers.ArrayPool{System.Byte},System.Buffers.ArrayPool{System.Char})">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.MemoryPoolHttpResponseStreamWriterFactory"/>.
            </summary>
            <param name="bytePool">
            The <see cref="T:System.Buffers.ArrayPool`1"/> for creating <see cref="T:System.Byte"/> buffers.
            </param>
            <param name="charPool">
            The <see cref="T:System.Buffers.ArrayPool`1"/> for creating <see cref="T:System.Char"/> buffers.
            </param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.MemoryPoolHttpResponseStreamWriterFactory.CreateWriter(System.IO.Stream,System.Text.Encoding)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter">
            <summary>
            A <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IActionFilter"/> that responds to invalid <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/>. This filter is
            added to all types and actions annotated with <see cref="T:Microsoft.AspNetCore.Mvc.ApiControllerAttribute"/>.
            See <see cref="T:Microsoft.AspNetCore.Mvc.ApiBehaviorOptions"/> for ways to configure this filter.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter.#ctor(Microsoft.AspNetCore.Mvc.ApiBehaviorOptions,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter"/>.
            </summary>
            <param name="apiBehaviorOptions">The api behavior options.</param>
            <param name="logger">The logger.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter.Order">
            <summary>
            Gets the order value for determining the order of execution of filters. Filters execute in
            ascending numeric value of the <see cref="P:Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter.Order"/> property.
            </summary>
            <remarks>
            <para>
            Filters are executed in a sequence determined by an ascending sort of the <see cref="P:Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter.Order"/> property.
            </para>
            <para>
            The default Order for this attribute is -2000 so that it runs early in the pipeline.
            </para>
            <para>
            Look at <see cref="P:Microsoft.AspNetCore.Mvc.Filters.IOrderedFilter.Order"/> for more detailed info.
            </para>
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter.IsReusable">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)">
            <summary>
            Invoked when an action is executed.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            Invoked when an action is executing.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext"/>.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Infrastructure.MvcCompatibilityOptions">
            <summary>
            An options type for configuring the application <see cref="T:Microsoft.AspNetCore.Mvc.CompatibilityVersion"/>.
            </summary>
            <remarks>
            The primary way to configure the application's <see cref="T:Microsoft.AspNetCore.Mvc.CompatibilityVersion"/> is by
            calling <see cref="M:Microsoft.Extensions.DependencyInjection.MvcCoreMvcBuilderExtensions.SetCompatibilityVersion(Microsoft.Extensions.DependencyInjection.IMvcBuilder,Microsoft.AspNetCore.Mvc.CompatibilityVersion)"/>
            or <see cref="M:Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions.SetCompatibilityVersion(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder,Microsoft.AspNetCore.Mvc.CompatibilityVersion)"/>.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Infrastructure.MvcCompatibilityOptions.CompatibilityVersion">
            <summary>
            Gets or sets the application's configured <see cref="T:Microsoft.AspNetCore.Mvc.CompatibilityVersion"/>.
            </summary>
            <value>the default value is <see cref="F:Microsoft.AspNetCore.Mvc.CompatibilityVersion.Version_3_0"/>.</value>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Infrastructure.NonDisposableStream">
            <summary>
            Stream that delegates to an inner stream.
            This Stream is present so that the inner stream is not closed
            even when Close() or Dispose() is called.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.NonDisposableStream.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.NonDisposableStream"/>.
            </summary>
            <param name="innerStream">The stream which should not be closed or flushed.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Infrastructure.NonDisposableStream.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Infrastructure.NonDisposableStream.CanSeek">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Infrastructure.NonDisposableStream.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Infrastructure.NonDisposableStream.Length">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Infrastructure.NonDisposableStream.Position">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Infrastructure.NonDisposableStream.ReadTimeout">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Infrastructure.NonDisposableStream.CanTimeout">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Infrastructure.NonDisposableStream.WriteTimeout">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.NonDisposableStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.NonDisposableStream.Read(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.NonDisposableStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.NonDisposableStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.NonDisposableStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.NonDisposableStream.EndRead(System.IAsyncResult)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.NonDisposableStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.NonDisposableStream.EndWrite(System.IAsyncResult)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.NonDisposableStream.Close">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.NonDisposableStream.ReadByte">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.NonDisposableStream.Flush">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.NonDisposableStream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.NonDisposableStream.FlushAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.NonDisposableStream.SetLength(System.Int64)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.NonDisposableStream.Write(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.NonDisposableStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.NonDisposableStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.NonDisposableStream.WriteByte(System.Byte)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.NonDisposableStream.Dispose(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor">
            <summary>
            Executes an <see cref="T:Microsoft.AspNetCore.Mvc.ObjectResult"/> to write to the response.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor.#ctor(Microsoft.AspNetCore.Mvc.Infrastructure.OutputFormatterSelector,Microsoft.AspNetCore.Mvc.Infrastructure.IHttpResponseStreamWriterFactory,Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Mvc.MvcOptions})">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor"/>.
            </summary>
            <param name="formatterSelector">The <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.OutputFormatterSelector"/>.</param>
            <param name="writerFactory">The <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.IHttpResponseStreamWriterFactory"/>.</param>
            <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/>.</param>
            <param name="mvcOptions">Accessor to <see cref="T:Microsoft.AspNetCore.Mvc.MvcOptions"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor.Logger">
            <summary>
            Gets the <see cref="T:Microsoft.Extensions.Logging.ILogger"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor.FormatterSelector">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.OutputFormatterSelector"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor.WriterFactory">
            <summary>
            Gets the writer factory delegate.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor.ExecuteAsync(Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.ObjectResult)">
            <summary>
            Executes the <see cref="T:Microsoft.AspNetCore.Mvc.ObjectResult"/>.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.ActionContext"/> for the current request.</param>
            <param name="result">The <see cref="T:Microsoft.AspNetCore.Mvc.ObjectResult"/>.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> which will complete once the <see cref="T:Microsoft.AspNetCore.Mvc.ObjectResult"/> is written to the response.
            </returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Infrastructure.OutputFormatterSelector">
            <summary>
            Selects an <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter"/> to write a response to the current request.
            </summary>
            <remarks>
            <para>
            The default implementation of <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.OutputFormatterSelector"/> provided by ASP.NET Core MVC
            is <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.DefaultOutputFormatterSelector"/>. The <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.DefaultOutputFormatterSelector"/> implements
            MVC's default content negotiation algorithm. This API is designed in a way that can satisfy the contract
            of <see cref="T:Microsoft.AspNetCore.Mvc.ObjectResult"/>.
            </para>
            <para>
            The default implementation is controlled by settings on <see cref="T:Microsoft.AspNetCore.Mvc.MvcOptions"/>, most notably:
            <see cref="P:Microsoft.AspNetCore.Mvc.MvcOptions.OutputFormatters"/>, <see cref="P:Microsoft.AspNetCore.Mvc.MvcOptions.RespectBrowserAcceptHeader"/>, and
            <see cref="P:Microsoft.AspNetCore.Mvc.MvcOptions.ReturnHttpNotAcceptable"/>.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.OutputFormatterSelector.SelectFormatter(Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterCanWriteContext,System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter},Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection)">
            <summary>
            Selects an <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter"/> to write the response based on the provided values and the current request.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.OutputFormatterCanWriteContext"/> associated with the current request.</param>
            <param name="formatters">A list of formatters to use; this acts as an override to <see cref="P:Microsoft.AspNetCore.Mvc.MvcOptions.OutputFormatters"/>.</param>
            <param name="mediaTypes">A list of media types to use; this acts as an override to the <c>Accept</c> header. </param>
            <returns>The selected <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter"/>, or <c>null</c> if one could not be selected.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Infrastructure.PhysicalFileResultExecutor">
            <summary>
            A <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.IActionResultExecutor`1"/> for <see cref="T:Microsoft.AspNetCore.Mvc.PhysicalFileResult"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.PhysicalFileResultExecutor.#ctor(Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.PhysicalFileResultExecutor"/>.
            </summary>
            <param name="loggerFactory">The factory used to create loggers.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.PhysicalFileResultExecutor.ExecuteAsync(Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.PhysicalFileResult)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.PhysicalFileResultExecutor.WriteFileAsync(Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.PhysicalFileResult,Microsoft.Net.Http.Headers.RangeItemHeaderValue,System.Int64)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.PhysicalFileResultExecutor.GetFileStream(System.String)">
            <summary>
            Obsolete. This API is no longer called.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.PhysicalFileResultExecutor.GetFileInfo(System.String)">
            <summary>
            Get the file metadata for a path.
            </summary>
            <param name="path">The file path.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.PhysicalFileResultExecutor.FileMetadata"/> for the path.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Infrastructure.PhysicalFileResultExecutor.FileMetadata">
            <summary>
            Represents metadata for a file.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Infrastructure.PhysicalFileResultExecutor.FileMetadata.Exists">
            <summary>
            Whether a file exists.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Infrastructure.PhysicalFileResultExecutor.FileMetadata.Length">
            <summary>
            The file length.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Infrastructure.PhysicalFileResultExecutor.FileMetadata.LastModified">
            <summary>
            When the file was last modified.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Infrastructure.ProblemDetailsFactory">
            <summary>
            Factory to produce <see cref="T:Microsoft.AspNetCore.Mvc.ProblemDetails" /> and <see cref="T:Microsoft.AspNetCore.Mvc.ValidationProblemDetails" />.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.ProblemDetailsFactory.CreateProblemDetails(Microsoft.AspNetCore.Http.HttpContext,System.Nullable{System.Int32},System.String,System.String,System.String,System.String)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.ProblemDetails" /> instance that configures defaults based on values specified in <see cref="T:Microsoft.AspNetCore.Mvc.ApiBehaviorOptions" />.
            </summary>
            <param name="httpContext">The <see cref="T:Microsoft.AspNetCore.Http.HttpContext" />.</param>
            <param name="statusCode">The value for <see cref="P:Microsoft.AspNetCore.Mvc.ProblemDetails.Status"/>.</param>
            <param name="title">The value for <see cref="P:Microsoft.AspNetCore.Mvc.ProblemDetails.Title" />.</param>
            <param name="type">The value for <see cref="P:Microsoft.AspNetCore.Mvc.ProblemDetails.Type" />.</param>
            <param name="detail">The value for <see cref="P:Microsoft.AspNetCore.Mvc.ProblemDetails.Detail" />.</param>
            <param name="instance">The value for <see cref="P:Microsoft.AspNetCore.Mvc.ProblemDetails.Instance" />.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.ProblemDetails"/> instance.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.ProblemDetailsFactory.CreateValidationProblemDetails(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.Nullable{System.Int32},System.String,System.String,System.String,System.String)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.ValidationProblemDetails" /> instance that configures defaults based on values specified in <see cref="T:Microsoft.AspNetCore.Mvc.ApiBehaviorOptions" />.
            </summary>
            <param name="httpContext">The <see cref="T:Microsoft.AspNetCore.Http.HttpContext" />.</param>
            <param name="modelStateDictionary">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary" />.</param>
            <param name="statusCode">The value for <see cref="P:Microsoft.AspNetCore.Mvc.ProblemDetails.Status"/>.</param>
            <param name="title">The value for <see cref="P:Microsoft.AspNetCore.Mvc.ProblemDetails.Title" />.</param>
            <param name="type">The value for <see cref="P:Microsoft.AspNetCore.Mvc.ProblemDetails.Type" />.</param>
            <param name="detail">The value for <see cref="P:Microsoft.AspNetCore.Mvc.ProblemDetails.Detail" />.</param>
            <param name="instance">The value for <see cref="P:Microsoft.AspNetCore.Mvc.ProblemDetails.Instance" />.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.ValidationProblemDetails"/> instance.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Infrastructure.RedirectResultExecutor">
            <summary>
            A <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.IActionResultExecutor`1"/> for <see cref="T:Microsoft.AspNetCore.Mvc.RedirectResult"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.RedirectResultExecutor.#ctor(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.AspNetCore.Mvc.Routing.IUrlHelperFactory)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.RedirectResultExecutor"/>.
            </summary>
            <param name="loggerFactory">The factory used to create loggers.</param>
            <param name="urlHelperFactory">The factory used to create url helpers.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.RedirectResultExecutor.ExecuteAsync(Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.RedirectResult)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Infrastructure.RedirectToActionResultExecutor">
            <summary>
            A <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.IActionResultExecutor`1"/> for <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToActionResult"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.RedirectToActionResultExecutor.#ctor(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.AspNetCore.Mvc.Routing.IUrlHelperFactory)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.PhysicalFileResultExecutor"/>.
            </summary>
            <param name="loggerFactory">The factory used to create loggers.</param>
            <param name="urlHelperFactory">The factory used to create url helpers.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.RedirectToActionResultExecutor.ExecuteAsync(Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.RedirectToActionResult)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Infrastructure.RedirectToPageResultExecutor">
            <summary>
            A <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.IActionResultExecutor`1"/> for <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToPageResult"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.RedirectToPageResultExecutor.#ctor(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.AspNetCore.Mvc.Routing.IUrlHelperFactory)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.RedirectToPageResultExecutor"/>.
            </summary>
            <param name="loggerFactory">The factory used to create loggers.</param>
            <param name="urlHelperFactory">The factory used to create url helpers.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.RedirectToPageResultExecutor.ExecuteAsync(Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.RedirectToPageResult)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Infrastructure.RedirectToRouteResultExecutor">
            <summary>
            A <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.IActionResultExecutor`1"/> for <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToRouteResult"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.RedirectToRouteResultExecutor.#ctor(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.AspNetCore.Mvc.Routing.IUrlHelperFactory)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.RedirectToRouteResultExecutor"/>.
            </summary>
            <param name="loggerFactory">The factory used to create loggers.</param>
            <param name="urlHelperFactory">The factory used to create url helpers.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.RedirectToRouteResultExecutor.ExecuteAsync(Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.RedirectToRouteResult)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.ReleaseResources">
            <summary>
            In derived types, releases resources such as controller, model, or page instances created as
            part of invoking the inner pipeline.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Infrastructure.TypeActivatorCache">
            <summary>
            Caches <see cref="T:Microsoft.Extensions.DependencyInjection.ObjectFactory"/> instances produced by
            <see cref="M:Microsoft.Extensions.DependencyInjection.ActivatorUtilities.CreateFactory(System.Type,System.Type[])"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.TypeActivatorCache.CreateInstance``1(System.IServiceProvider,System.Type)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Infrastructure.VirtualFileResultExecutor">
            <summary>
            A <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.IActionResultExecutor`1"/> for <see cref="T:Microsoft.AspNetCore.Mvc.VirtualFileResult"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.VirtualFileResultExecutor.#ctor(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.VirtualFileResultExecutor"/>.
            </summary>
            <param name="loggerFactory">The factory used to create loggers.</param>
            <param name="hostingEnvironment">The hosting environment</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.VirtualFileResultExecutor.ExecuteAsync(Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.VirtualFileResult)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.VirtualFileResultExecutor.WriteFileAsync(Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.VirtualFileResult,Microsoft.Extensions.FileProviders.IFileInfo,Microsoft.Net.Http.Headers.RangeItemHeaderValue,System.Int64)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Infrastructure.VirtualFileResultExecutor.GetFileStream(Microsoft.Extensions.FileProviders.IFileInfo)">
            <summary>
            Obsolete, this API is no longer called.
            </summary>
            <param name="fileInfo"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Core.Infrastructure.IAntiforgeryValidationFailedResult">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> that is used when the
            antiforgery validation failed. This can be matched inside MVC result
            filters to process the validation failure.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.MatchAllContentTypeIsNotAllowed">
            <summary>The argument '{0}' is invalid. Media types which match all types or match all subtypes are not supported.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatMatchAllContentTypeIsNotAllowed(System.Object)">
            <summary>The argument '{0}' is invalid. Media types which match all types or match all subtypes are not supported.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.ObjectResult_MatchAllContentType">
            <summary>The content-type '{0}' added in the '{1}' property is invalid. Media types which match all types or match all subtypes are not supported.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatObjectResult_MatchAllContentType(System.Object,System.Object)">
            <summary>The content-type '{0}' added in the '{1}' property is invalid. Media types which match all types or match all subtypes are not supported.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.ActionExecutor_WrappedTaskInstance">
            <summary>The method '{0}' on type '{1}' returned an instance of '{2}'. Make sure to call Unwrap on the returned value to avoid unobserved faulted Task.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatActionExecutor_WrappedTaskInstance(System.Object,System.Object,System.Object)">
            <summary>The method '{0}' on type '{1}' returned an instance of '{2}'. Make sure to call Unwrap on the returned value to avoid unobserved faulted Task.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.ActionExecutor_UnexpectedTaskInstance">
            <summary>The method '{0}' on type '{1}' returned a Task instance even though it is not an asynchronous method.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatActionExecutor_UnexpectedTaskInstance(System.Object,System.Object)">
            <summary>The method '{0}' on type '{1}' returned a Task instance even though it is not an asynchronous method.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.ActionInvokerFactory_CouldNotCreateInvoker">
            <summary>An action invoker could not be created for action '{0}'.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatActionInvokerFactory_CouldNotCreateInvoker(System.Object)">
            <summary>An action invoker could not be created for action '{0}'.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.ActionDescriptorMustBeBasedOnControllerAction">
            <summary>The action descriptor must be of type '{0}'.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatActionDescriptorMustBeBasedOnControllerAction(System.Object)">
            <summary>The action descriptor must be of type '{0}'.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.ArgumentCannotBeNullOrEmpty">
            <summary>Value cannot be null or empty.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.PropertyOfTypeCannotBeNull">
            <summary>The '{0}' property of '{1}' must not be null.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatPropertyOfTypeCannotBeNull(System.Object,System.Object)">
            <summary>The '{0}' property of '{1}' must not be null.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.TypeMethodMustReturnNotNullValue">
            <summary>The '{0}' method of type '{1}' cannot return a null value.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatTypeMethodMustReturnNotNullValue(System.Object,System.Object)">
            <summary>The '{0}' method of type '{1}' cannot return a null value.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.ModelBinding_NullValueNotValid">
            <summary>The value '{0}' is invalid.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatModelBinding_NullValueNotValid(System.Object)">
            <summary>The value '{0}' is invalid.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.Invalid_IncludePropertyExpression">
            <summary>The passed expression of expression node type '{0}' is invalid. Only simple member access expressions for model properties are supported.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatInvalid_IncludePropertyExpression(System.Object)">
            <summary>The passed expression of expression node type '{0}' is invalid. Only simple member access expressions for model properties are supported.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.NoRoutesMatched">
            <summary>No route matches the supplied values.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.AsyncActionFilter_InvalidShortCircuit">
            <summary>If an {0} provides a result value by setting the {1} property of {2} to a non-null value, then it cannot call the next filter by invoking {3}.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatAsyncActionFilter_InvalidShortCircuit(System.Object,System.Object,System.Object,System.Object)">
            <summary>If an {0} provides a result value by setting the {1} property of {2} to a non-null value, then it cannot call the next filter by invoking {3}.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.AsyncResultFilter_InvalidShortCircuit">
            <summary>If an {0} cancels execution by setting the {1} property of {2} to 'true', then it cannot call the next filter by invoking {3}.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatAsyncResultFilter_InvalidShortCircuit(System.Object,System.Object,System.Object,System.Object)">
            <summary>If an {0} cancels execution by setting the {1} property of {2} to 'true', then it cannot call the next filter by invoking {3}.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.FilterFactoryAttribute_TypeMustImplementIFilter">
            <summary>The type provided to '{0}' must implement '{1}'.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatFilterFactoryAttribute_TypeMustImplementIFilter(System.Object,System.Object)">
            <summary>The type provided to '{0}' must implement '{1}'.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.ActionResult_ActionReturnValueCannotBeNull">
            <summary>Cannot return null from an action method with a return type of '{0}'.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatActionResult_ActionReturnValueCannotBeNull(System.Object)">
            <summary>Cannot return null from an action method with a return type of '{0}'.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.TypeMustDeriveFromType">
            <summary>The type '{0}' must derive from '{1}'.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatTypeMustDeriveFromType(System.Object,System.Object)">
            <summary>The type '{0}' must derive from '{1}'.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.InputFormatterNoEncoding">
            <summary>No encoding found for input formatter '{0}'. There must be at least one supported encoding registered in order for the formatter to read content.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatInputFormatterNoEncoding(System.Object)">
            <summary>No encoding found for input formatter '{0}'. There must be at least one supported encoding registered in order for the formatter to read content.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.UnsupportedContentType">
            <summary>Unsupported content type '{0}'.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatUnsupportedContentType(System.Object)">
            <summary>Unsupported content type '{0}'.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.OutputFormatterNoMediaType">
            <summary>No supported media type registered for output formatter '{0}'. There must be at least one supported media type registered in order for the output formatter to write content.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatOutputFormatterNoMediaType(System.Object)">
            <summary>No supported media type registered for output formatter '{0}'. There must be at least one supported media type registered in order for the output formatter to write content.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.AttributeRoute_AggregateErrorMessage">
            <summary>The following errors occurred with attribute routing information:{0}{0}{1}</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatAttributeRoute_AggregateErrorMessage(System.Object,System.Object)">
            <summary>The following errors occurred with attribute routing information:{0}{0}{1}</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.AttributeRoute_CannotContainParameter">
            <summary>The attribute route '{0}' cannot contain a parameter named '{{{1}}}'. Use '[{1}]' in the route template to insert the value '{2}'.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatAttributeRoute_CannotContainParameter(System.Object,System.Object,System.Object)">
            <summary>The attribute route '{0}' cannot contain a parameter named '{{{1}}}'. Use '[{1}]' in the route template to insert the value '{2}'.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.AttributeRoute_IndividualErrorMessage">
            <summary>For action: '{0}'{1}Error: {2}</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatAttributeRoute_IndividualErrorMessage(System.Object,System.Object,System.Object)">
            <summary>For action: '{0}'{1}Error: {2}</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.AttributeRoute_TokenReplacement_EmptyTokenNotAllowed">
            <summary>An empty replacement token ('[]') is not allowed.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.AttributeRoute_TokenReplacement_ImbalancedSquareBrackets">
            <summary>Token delimiters ('[', ']') are imbalanced.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.AttributeRoute_TokenReplacement_InvalidSyntax">
            <summary>The route template '{0}' has invalid syntax. {1}</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatAttributeRoute_TokenReplacement_InvalidSyntax(System.Object,System.Object)">
            <summary>The route template '{0}' has invalid syntax. {1}</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.AttributeRoute_TokenReplacement_ReplacementValueNotFound">
            <summary>While processing template '{0}', a replacement value for the token '{1}' could not be found. Available tokens: '{2}'. To use a '[' or ']' as a literal string in a route or within a constraint, use '[[' or ']]' instead.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatAttributeRoute_TokenReplacement_ReplacementValueNotFound(System.Object,System.Object,System.Object)">
            <summary>While processing template '{0}', a replacement value for the token '{1}' could not be found. Available tokens: '{2}'. To use a '[' or ']' as a literal string in a route or within a constraint, use '[[' or ']]' instead.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.AttributeRoute_TokenReplacement_UnclosedToken">
            <summary>A replacement token is not closed.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.AttributeRoute_TokenReplacement_UnescapedBraceInToken">
            <summary>An unescaped '[' token is not allowed inside of a replacement token. Use '[[' to escape.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.UnableToFindServices">
            <summary>Unable to find the required services. Please add all the required services by calling '{0}.{1}' inside the call to '{2}' in the application startup code.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatUnableToFindServices(System.Object,System.Object,System.Object)">
            <summary>Unable to find the required services. Please add all the required services by calling '{0}.{1}' inside the call to '{2}' in the application startup code.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.AttributeRoute_DuplicateNames_Item">
            <summary>Action: '{0}' - Template: '{1}'</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatAttributeRoute_DuplicateNames_Item(System.Object,System.Object)">
            <summary>Action: '{0}' - Template: '{1}'</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.AttributeRoute_DuplicateNames">
            <summary>Attribute routes with the same name '{0}' must have the same template:{1}{2}</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatAttributeRoute_DuplicateNames(System.Object,System.Object,System.Object)">
            <summary>Attribute routes with the same name '{0}' must have the same template:{1}{2}</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.AttributeRoute_AggregateErrorMessage_ErrorNumber">
            <summary>Error {0}:{1}{2}</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatAttributeRoute_AggregateErrorMessage_ErrorNumber(System.Object,System.Object,System.Object)">
            <summary>Error {0}:{1}{2}</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.AttributeRoute_MixedAttributeAndConventionallyRoutedActions_ForMethod">
            <summary>A method '{0}' must not define attribute routed actions and non attribute routed actions at the same time:{1}{2}{1}{1}Use 'AcceptVerbsAttribute' to create a single route that allows multiple HTTP verbs and defines a route, or set a route template in all at ...</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatAttributeRoute_MixedAttributeAndConventionallyRoutedActions_ForMethod(System.Object,System.Object,System.Object)">
            <summary>A method '{0}' must not define attribute routed actions and non attribute routed actions at the same time:{1}{2}{1}{1}Use 'AcceptVerbsAttribute' to create a single route that allows multiple HTTP verbs and defines a route, or set a route template in all at ...</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.AttributeRoute_MixedAttributeAndConventionallyRoutedActions_ForMethod_Item">
            <summary>Action: '{0}' - Route Template: '{1}' - HTTP Verbs: '{2}'</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatAttributeRoute_MixedAttributeAndConventionallyRoutedActions_ForMethod_Item(System.Object,System.Object,System.Object)">
            <summary>Action: '{0}' - Route Template: '{1}' - HTTP Verbs: '{2}'</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.AttributeRoute_NullTemplateRepresentation">
            <summary>(none)</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.DefaultActionSelector_AmbiguousActions">
            <summary>Multiple actions matched. The following actions matched route data and had all constraints satisfied:{0}{0}{1}</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatDefaultActionSelector_AmbiguousActions(System.Object,System.Object)">
            <summary>Multiple actions matched. The following actions matched route data and had all constraints satisfied:{0}{0}{1}</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.FileResult_InvalidPath">
            <summary>Could not find file: {0}.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatFileResult_InvalidPath(System.Object)">
            <summary>Could not find file: {0}.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.SerializableError_DefaultError">
            <summary>The input was not valid.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.AsyncResourceFilter_InvalidShortCircuit">
            <summary>If an {0} provides a result value by setting the {1} property of {2} to a non-null value, then it cannot call the next filter by invoking {3}.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatAsyncResourceFilter_InvalidShortCircuit(System.Object,System.Object,System.Object,System.Object)">
            <summary>If an {0} provides a result value by setting the {1} property of {2} to a non-null value, then it cannot call the next filter by invoking {3}.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.ResponseCache_SpecifyDuration">
            <summary>If the '{0}' property is not set to true, '{1}' property must be specified.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatResponseCache_SpecifyDuration(System.Object,System.Object)">
            <summary>If the '{0}' property is not set to true, '{1}' property must be specified.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.ApiExplorer_UnsupportedAction">
            <summary>The action '{0}' has ApiExplorer enabled, but is using conventional routing. Only actions which use attribute routing support ApiExplorer.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatApiExplorer_UnsupportedAction(System.Object)">
            <summary>The action '{0}' has ApiExplorer enabled, but is using conventional routing. Only actions which use attribute routing support ApiExplorer.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.FormatterMappings_NotValidMediaType">
            <summary>The media type "{0}" is not valid. MediaTypes containing wildcards (*) are not allowed in formatter mappings.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatFormatterMappings_NotValidMediaType(System.Object)">
            <summary>The media type "{0}" is not valid. MediaTypes containing wildcards (*) are not allowed in formatter mappings.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.Format_NotValid">
            <summary>The format provided is invalid '{0}'. A format must be a non-empty file-extension, optionally prefixed with a '.' character.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatFormat_NotValid(System.Object)">
            <summary>The format provided is invalid '{0}'. A format must be a non-empty file-extension, optionally prefixed with a '.' character.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.CacheProfileNotFound">
            <summary>The '{0}' cache profile is not defined.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatCacheProfileNotFound(System.Object)">
            <summary>The '{0}' cache profile is not defined.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.ModelType_WrongType">
            <summary>The model's runtime type '{0}' is not assignable to the type '{1}'.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatModelType_WrongType(System.Object,System.Object)">
            <summary>The model's runtime type '{0}' is not assignable to the type '{1}'.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.ValueInterfaceAbstractOrOpenGenericTypesCannotBeActivated">
            <summary>The type '{0}' cannot be activated by '{1}' because it is either a value type, an interface, an abstract class or an open generic type.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatValueInterfaceAbstractOrOpenGenericTypesCannotBeActivated(System.Object,System.Object)">
            <summary>The type '{0}' cannot be activated by '{1}' because it is either a value type, an interface, an abstract class or an open generic type.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.BinderType_MustBeIModelBinder">
            <summary>The type '{0}' must implement '{1}' to be used as a model binder.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatBinderType_MustBeIModelBinder(System.Object,System.Object)">
            <summary>The type '{0}' must implement '{1}' to be used as a model binder.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.BindingSource_CannotBeComposite">
            <summary>The provided binding source '{0}' is a composite. '{1}' requires that the source must represent a single type of input.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatBindingSource_CannotBeComposite(System.Object,System.Object)">
            <summary>The provided binding source '{0}' is a composite. '{1}' requires that the source must represent a single type of input.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.BindingSource_CannotBeGreedy">
            <summary>The provided binding source '{0}' is a greedy data source. '{1}' does not support greedy data sources.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatBindingSource_CannotBeGreedy(System.Object,System.Object)">
            <summary>The provided binding source '{0}' is a greedy data source. '{1}' does not support greedy data sources.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.Common_PropertyNotFound">
            <summary>The property {0}.{1} could not be found.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatCommon_PropertyNotFound(System.Object,System.Object)">
            <summary>The property {0}.{1} could not be found.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.JQueryFormValueProviderFactory_MissingClosingBracket">
            <summary>The key '{0}' is invalid JQuery syntax because it is missing a closing bracket.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatJQueryFormValueProviderFactory_MissingClosingBracket(System.Object)">
            <summary>The key '{0}' is invalid JQuery syntax because it is missing a closing bracket.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.KeyValuePair_BothKeyAndValueMustBePresent">
            <summary>A value is required.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.ModelBinderUtil_ModelCannotBeNull">
            <summary>The binding context has a null Model, but this binder requires a non-null model of type '{0}'.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatModelBinderUtil_ModelCannotBeNull(System.Object)">
            <summary>The binding context has a null Model, but this binder requires a non-null model of type '{0}'.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.ModelBinderUtil_ModelInstanceIsWrong">
            <summary>The binding context has a Model of type '{0}', but this binder can only operate on models of type '{1}'.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatModelBinderUtil_ModelInstanceIsWrong(System.Object,System.Object)">
            <summary>The binding context has a Model of type '{0}', but this binder can only operate on models of type '{1}'.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.ModelBinderUtil_ModelMetadataCannotBeNull">
            <summary>The binding context cannot have a null ModelMetadata.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.ModelBinding_MissingBindRequiredMember">
            <summary>A value for the '{0}' parameter or property was not provided.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatModelBinding_MissingBindRequiredMember(System.Object)">
            <summary>A value for the '{0}' parameter or property was not provided.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.ModelBinding_MissingRequestBodyRequiredMember">
            <summary>A non-empty request body is required.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.ValueProviderResult_NoConverterExists">
            <summary>The parameter conversion from type '{0}' to type '{1}' failed because no type converter can convert between these types.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatValueProviderResult_NoConverterExists(System.Object,System.Object)">
            <summary>The parameter conversion from type '{0}' to type '{1}' failed because no type converter can convert between these types.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.FileResult_PathNotRooted">
            <summary>Path '{0}' was not rooted.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatFileResult_PathNotRooted(System.Object)">
            <summary>Path '{0}' was not rooted.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.UrlNotLocal">
            <summary>The supplied URL is not local. A URL with an absolute path is considered local if it does not have a host/authority part. URLs using virtual paths ('~/') are also local.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.FormatFormatterMappings_GetMediaTypeMappingForFormat_InvalidFormat">
            <summary>The argument '{0}' is invalid. Empty or null formats are not supported.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatFormatFormatterMappings_GetMediaTypeMappingForFormat_InvalidFormat(System.Object)">
            <summary>The argument '{0}' is invalid. Empty or null formats are not supported.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.AcceptHeaderParser_ParseAcceptHeader_InvalidValues">
            <summary>"Invalid values '{0}'."</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatAcceptHeaderParser_ParseAcceptHeader_InvalidValues(System.Object)">
            <summary>"Invalid values '{0}'."</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.ModelState_AttemptedValueIsInvalid">
            <summary>The value '{0}' is not valid for {1}.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatModelState_AttemptedValueIsInvalid(System.Object,System.Object)">
            <summary>The value '{0}' is not valid for {1}.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.ModelState_NonPropertyAttemptedValueIsInvalid">
            <summary>The value '{0}' is not valid.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatModelState_NonPropertyAttemptedValueIsInvalid(System.Object)">
            <summary>The value '{0}' is not valid.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.ModelState_UnknownValueIsInvalid">
            <summary>The supplied value is invalid for {0}.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatModelState_UnknownValueIsInvalid(System.Object)">
            <summary>The supplied value is invalid for {0}.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.ModelState_NonPropertyUnknownValueIsInvalid">
            <summary>The supplied value is invalid.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.HtmlGeneration_ValueIsInvalid">
            <summary>The value '{0}' is invalid.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatHtmlGeneration_ValueIsInvalid(System.Object)">
            <summary>The value '{0}' is invalid.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.HtmlGeneration_ValueMustBeNumber">
            <summary>The field {0} must be a number.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatHtmlGeneration_ValueMustBeNumber(System.Object)">
            <summary>The field {0} must be a number.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.HtmlGeneration_NonPropertyValueMustBeNumber">
            <summary>The field must be a number.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.TextInputFormatter_SupportedEncodingsMustNotBeEmpty">
            <summary>The list of '{0}' must not be empty. Add at least one supported encoding.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatTextInputFormatter_SupportedEncodingsMustNotBeEmpty(System.Object)">
            <summary>The list of '{0}' must not be empty. Add at least one supported encoding.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.TextOutputFormatter_SupportedEncodingsMustNotBeEmpty">
            <summary>The list of '{0}' must not be empty. Add at least one supported encoding.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatTextOutputFormatter_SupportedEncodingsMustNotBeEmpty(System.Object)">
            <summary>The list of '{0}' must not be empty. Add at least one supported encoding.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.TextOutputFormatter_WriteResponseBodyAsyncNotSupported">
            <summary>'{0}' is not supported by '{1}'. Use '{2}' instead.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatTextOutputFormatter_WriteResponseBodyAsyncNotSupported(System.Object,System.Object,System.Object)">
            <summary>'{0}' is not supported by '{1}'. Use '{2}' instead.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.Formatter_NoMediaTypes">
            <summary>No media types found in '{0}.{1}'. Add at least one media type to the list of supported media types.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatFormatter_NoMediaTypes(System.Object,System.Object)">
            <summary>No media types found in '{0}.{1}'. Add at least one media type to the list of supported media types.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.CouldNotCreateIModelBinder">
            <summary>Could not create a model binder for model object of type '{0}'.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatCouldNotCreateIModelBinder(System.Object)">
            <summary>Could not create a model binder for model object of type '{0}'.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.InputFormattersAreRequired">
            <summary>'{0}.{1}' must not be empty. At least one '{2}' is required to bind from the body.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatInputFormattersAreRequired(System.Object,System.Object,System.Object)">
            <summary>'{0}.{1}' must not be empty. At least one '{2}' is required to bind from the body.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.ModelBinderProvidersAreRequired">
            <summary>'{0}.{1}' must not be empty. At least one '{2}' is required to model bind.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatModelBinderProvidersAreRequired(System.Object,System.Object,System.Object)">
            <summary>'{0}.{1}' must not be empty. At least one '{2}' is required to model bind.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.OutputFormattersAreRequired">
            <summary>'{0}.{1}' must not be empty. At least one '{2}' is required to format a response.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatOutputFormattersAreRequired(System.Object,System.Object,System.Object)">
            <summary>'{0}.{1}' must not be empty. At least one '{2}' is required to format a response.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.MiddewareFilter_ConfigureMethodOverload">
            <summary>Multiple overloads of method '{0}' are not supported.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatMiddewareFilter_ConfigureMethodOverload(System.Object)">
            <summary>Multiple overloads of method '{0}' are not supported.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.MiddewareFilter_NoConfigureMethod">
            <summary>A public method named '{0}' could not be found in the '{1}' type.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatMiddewareFilter_NoConfigureMethod(System.Object,System.Object)">
            <summary>A public method named '{0}' could not be found in the '{1}' type.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.MiddlewareFilterBuilder_NullApplicationBuilder">
            <summary>The '{0}' property cannot be null.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatMiddlewareFilterBuilder_NullApplicationBuilder(System.Object)">
            <summary>The '{0}' property cannot be null.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.MiddlewareFilter_InvalidConfigureReturnType">
            <summary>The '{0}' method in the type '{1}' must have a return type of '{2}'.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatMiddlewareFilter_InvalidConfigureReturnType(System.Object,System.Object,System.Object)">
            <summary>The '{0}' method in the type '{1}' must have a return type of '{2}'.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.MiddlewareFilter_ServiceResolutionFail">
            <summary>Could not resolve a service of type '{0}' for the parameter '{1}' of method '{2}' on type '{3}'.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatMiddlewareFilter_ServiceResolutionFail(System.Object,System.Object,System.Object,System.Object)">
            <summary>Could not resolve a service of type '{0}' for the parameter '{1}' of method '{2}' on type '{3}'.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.AuthorizeFilter_AuthorizationPolicyCannotBeCreated">
            <summary>An {0} cannot be created without a valid instance of {1}.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatAuthorizeFilter_AuthorizationPolicyCannotBeCreated(System.Object,System.Object)">
            <summary>An {0} cannot be created without a valid instance of {1}.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.FormCollectionModelBinder_CannotBindToFormCollection">
            <summary>The '{0}' cannot bind to a model of type '{1}'. Change the model type to '{2}' instead.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatFormCollectionModelBinder_CannotBindToFormCollection(System.Object,System.Object,System.Object)">
            <summary>The '{0}' cannot bind to a model of type '{1}'. Change the model type to '{2}' instead.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.VaryByQueryKeys_Requires_ResponseCachingMiddleware">
            <summary>'{0}' requires the response cache middleware.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatVaryByQueryKeys_Requires_ResponseCachingMiddleware(System.Object)">
            <summary>'{0}' requires the response cache middleware.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.CandidateResolver_DifferentCasedReference">
            <summary>A duplicate entry for library reference {0} was found. Please check that all package references in all projects use the same casing for the same package references.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatCandidateResolver_DifferentCasedReference(System.Object)">
            <summary>A duplicate entry for library reference {0} was found. Please check that all package references in all projects use the same casing for the same package references.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.MiddlewareFilterConfigurationProvider_CreateConfigureDelegate_CannotCreateType">
            <summary>Unable to create an instance of type '{0}'. The type specified in {1} must not be abstract and must have a parameterless constructor.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatMiddlewareFilterConfigurationProvider_CreateConfigureDelegate_CannotCreateType(System.Object,System.Object)">
            <summary>Unable to create an instance of type '{0}'. The type specified in {1} must not be abstract and must have a parameterless constructor.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.Argument_InvalidOffsetLength">
            <summary>'{0}' and '{1}' are out of bounds for the string.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatArgument_InvalidOffsetLength(System.Object,System.Object)">
            <summary>'{0}' and '{1}' are out of bounds for the string.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.ComplexTypeModelBinder_NoParameterlessConstructor_ForType">
            <summary>Could not create an instance of type '{0}'. Model bound complex types must not be abstract or value types and must have a parameterless constructor.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatComplexTypeModelBinder_NoParameterlessConstructor_ForType(System.Object)">
            <summary>Could not create an instance of type '{0}'. Model bound complex types must not be abstract or value types and must have a parameterless constructor.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.ComplexTypeModelBinder_NoParameterlessConstructor_ForProperty">
            <summary>Could not create an instance of type '{0}'. Model bound complex types must not be abstract or value types and must have a parameterless constructor. Alternatively, set the '{1}' property to a non-null value in the '{2}' constructor.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatComplexTypeModelBinder_NoParameterlessConstructor_ForProperty(System.Object,System.Object,System.Object)">
            <summary>Could not create an instance of type '{0}'. Model bound complex types must not be abstract or value types and must have a parameterless constructor. Alternatively, set the '{1}' property to a non-null value in the '{2}' constructor.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.NoRoutesMatchedForPage">
            <summary>No page named '{0}' matches the supplied values.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatNoRoutesMatchedForPage(System.Object)">
            <summary>No page named '{0}' matches the supplied values.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.UrlHelper_RelativePagePathIsNotSupported">
            <summary>The relative page path '{0}' can only be used while executing a Razor Page. Specify a root relative path with a leading '/' to generate a URL outside of a Razor Page. If you are using {1} then you must provide the current {2} to use relative pages.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatUrlHelper_RelativePagePathIsNotSupported(System.Object,System.Object,System.Object)">
            <summary>The relative page path '{0}' can only be used while executing a Razor Page. Specify a root relative path with a leading '/' to generate a URL outside of a Razor Page. If you are using {1} then you must provide the current {2} to use relative pages.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.ValidationProblemDescription_Title">
            <summary>One or more validation errors occurred.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.ApiController_AttributeRouteRequired">
            <summary>Action '{0}' does not have an attribute route. Action methods on controllers annotated with {1} must be attribute routed.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatApiController_AttributeRouteRequired(System.Object,System.Object)">
            <summary>Action '{0}' does not have an attribute route. Action methods on controllers annotated with {1} must be attribute routed.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.VirtualFileResultExecutor_NoFileProviderConfigured">
            <summary>No file provider has been configured to process the supplied file.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.ApplicationPartFactory_InvalidFactoryType">
            <summary>Type {0} specified by {1} is invalid. Type specified by {1} must derive from {2}.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatApplicationPartFactory_InvalidFactoryType(System.Object,System.Object,System.Object)">
            <summary>Type {0} specified by {1} is invalid. Type specified by {1} must derive from {2}.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.RelatedAssemblyAttribute_AssemblyCannotReferenceSelf">
            <summary>{0} specified on {1} cannot be self referential.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatRelatedAssemblyAttribute_AssemblyCannotReferenceSelf(System.Object,System.Object)">
            <summary>{0} specified on {1} cannot be self referential.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.RelatedAssemblyAttribute_CouldNotBeFound">
            <summary>Related assembly '{0}' specified by assembly '{1}' could not be found in the directory {2}. Related assemblies must be co-located with the specifying assemblies.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatRelatedAssemblyAttribute_CouldNotBeFound(System.Object,System.Object,System.Object)">
            <summary>Related assembly '{0}' specified by assembly '{1}' could not be found in the directory {2}. Related assemblies must be co-located with the specifying assemblies.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.ApplicationAssembliesProvider_DuplicateRelatedAssembly">
            <summary>Each related assembly must be declared by exactly one assembly. The assembly '{0}' was declared as related assembly by the following:</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatApplicationAssembliesProvider_DuplicateRelatedAssembly(System.Object)">
            <summary>Each related assembly must be declared by exactly one assembly. The assembly '{0}' was declared as related assembly by the following:</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.ApplicationAssembliesProvider_RelatedAssemblyCannotDefineAdditional">
            <summary>Assembly '{0}' declared as a related assembly by assembly '{1}' cannot define additional related assemblies.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatApplicationAssembliesProvider_RelatedAssemblyCannotDefineAdditional(System.Object,System.Object)">
            <summary>Assembly '{0}' declared as a related assembly by assembly '{1}' cannot define additional related assemblies.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.ComplexTypeModelBinder_NoParameterlessConstructor_ForParameter">
            <summary>Could not create an instance of type '{0}'. Model bound complex types must not be abstract or value types and must have a parameterless constructor. Alternatively, give the '{1}' parameter a non-null default value.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatComplexTypeModelBinder_NoParameterlessConstructor_ForParameter(System.Object,System.Object)">
            <summary>Could not create an instance of type '{0}'. Model bound complex types must not be abstract or value types and must have a parameterless constructor. Alternatively, give the '{1}' parameter a non-null default value.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.ApiController_MultipleBodyParametersFound">
            <summary>Action '{0}' has more than one parameter that was specified or inferred as bound from request body. Only one parameter per action may be bound from body. Inspect the following parameters, and use '{1}' to specify bound from query, '{2}' to specify bound fr ...</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatApiController_MultipleBodyParametersFound(System.Object,System.Object,System.Object,System.Object)">
            <summary>Action '{0}' has more than one parameter that was specified or inferred as bound from request body. Only one parameter per action may be bound from body. Inspect the following parameters, and use '{1}' to specify bound from query, '{2}' to specify bound fr ...</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.ApiConventionMustBeStatic">
            <summary>API convention type '{0}' must be a static type.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatApiConventionMustBeStatic(System.Object)">
            <summary>API convention type '{0}' must be a static type.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.InvalidTypeTForActionResultOfT">
            <summary>Invalid type parameter '{0}' specified for '{1}'.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatInvalidTypeTForActionResultOfT(System.Object,System.Object)">
            <summary>Invalid type parameter '{0}' specified for '{1}'.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.ApiConvention_UnsupportedAttributesOnConvention">
            <summary>Method {0} is decorated with the following attributes that are not allowed on an API convention method:{1}The following attributes are allowed on API convention methods: {2}.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatApiConvention_UnsupportedAttributesOnConvention(System.Object,System.Object,System.Object)">
            <summary>Method {0} is decorated with the following attributes that are not allowed on an API convention method:{1}The following attributes are allowed on API convention methods: {2}.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.ApiConventionMethod_AmbiguousMethodName">
            <summary>Method name '{0}' is ambiguous for convention type '{1}'. More than one method found with the name '{0}'.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatApiConventionMethod_AmbiguousMethodName(System.Object,System.Object)">
            <summary>Method name '{0}' is ambiguous for convention type '{1}'. More than one method found with the name '{0}'.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.ApiConventionMethod_NoMethodFound">
            <summary>A method named '{0}' was not found on convention type '{1}'.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatApiConventionMethod_NoMethodFound(System.Object,System.Object)">
            <summary>A method named '{0}' was not found on convention type '{1}'.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.ValidationVisitor_ExceededMaxDepth">
            <summary>{0} exceeded the maximum configured validation depth '{1}' when validating type '{2}'.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatValidationVisitor_ExceededMaxDepth(System.Object,System.Object,System.Object)">
            <summary>{0} exceeded the maximum configured validation depth '{1}' when validating type '{2}'.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.ValidationVisitor_ExceededMaxDepthFix">
            <summary>This may indicate a very deep or infinitely recursive object graph. Consider modifying '{0}.{1}' or suppressing validation on the model type.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatValidationVisitor_ExceededMaxDepthFix(System.Object,System.Object)">
            <summary>This may indicate a very deep or infinitely recursive object graph. Consider modifying '{0}.{1}' or suppressing validation on the model type.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.ValidationVisitor_ExceededMaxPropertyDepth">
            <summary>{0} exceeded the maximum configured validation depth '{1}' when validating property '{2}' on type '{3}'.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatValidationVisitor_ExceededMaxPropertyDepth(System.Object,System.Object,System.Object,System.Object)">
            <summary>{0} exceeded the maximum configured validation depth '{1}' when validating property '{2}' on type '{3}'.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.ReferenceToNewtonsoftJsonRequired">
            <summary>'{0}' requires a reference to '{1}'. Configure your application by adding a reference to the '{1}' package and calling '{2}.{3}' inside the call to '{4}' in the application startup code.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatReferenceToNewtonsoftJsonRequired(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>'{0}' requires a reference to '{1}'. Configure your application by adding a reference to the '{1}' package and calling '{2}.{3}' inside the call to '{4}' in the application startup code.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.ModelBinding_ExceededMaxModelBindingCollectionSize">
            <summary>Collection bound to '{0}' exceeded {1}.{2} ({3}). This limit is a safeguard against incorrect model binders and models. Address issues in '{4}'. For example, this type may have a property with a model binder that always succeeds. See the {1}.{2} documentat ...</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatModelBinding_ExceededMaxModelBindingCollectionSize(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>Collection bound to '{0}' exceeded {1}.{2} ({3}). This limit is a safeguard against incorrect model binders and models. Address issues in '{4}'. For example, this type may have a property with a model binder that always succeeds. See the {1}.{2} documentat ...</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.ModelBinding_ExceededMaxModelBindingRecursionDepth">
            <summary>Model binding system exceeded {0}.{1} ({2}). Reduce the potential nesting of '{3}'. For example, this type may have a property with a model binder that always succeeds. See the {0}.{1} documentation for more information.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatModelBinding_ExceededMaxModelBindingRecursionDepth(System.Object,System.Object,System.Object,System.Object)">
            <summary>Model binding system exceeded {0}.{1} ({2}). Reduce the potential nesting of '{3}'. For example, this type may have a property with a model binder that always succeeds. See the {0}.{1} documentation for more information.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.Property_MustBeInstanceOfType">
            <summary>Property '{0}.{1}' must be an instance of type '{2}'.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatProperty_MustBeInstanceOfType(System.Object,System.Object,System.Object)">
            <summary>Property '{0}.{1}' must be an instance of type '{2}'.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.ObjectResultExecutor_MaxEnumerationExceeded">
            <summary>'{0}' reached the configured maximum size of the buffer when enumerating a value of type '{1}'. This limit is in place to prevent infinite streams of 'IAsyncEnumerable&lt;&gt;' from continuing indefinitely. If this is not a programming mistake, consider ways to  ...</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatObjectResultExecutor_MaxEnumerationExceeded(System.Object,System.Object)">
            <summary>'{0}' reached the configured maximum size of the buffer when enumerating a value of type '{1}'. This limit is in place to prevent infinite streams of 'IAsyncEnumerable&lt;&gt;' from continuing indefinitely. If this is not a programming mistake, consider ways to  ...</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.UnexpectedJsonEnd">
            <summary>Unexpected end when reading JSON.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.FailedToReadRequestForm">
            <summary>Failed to read the request form. {0}</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatFailedToReadRequestForm(System.Object)">
            <summary>Failed to read the request form. {0}</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.ValidationVisitor_ContainerCannotBeSpecified">
            <summary>A container cannot be specified when the ModelMetada is of kind '{0}'.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatValidationVisitor_ContainerCannotBeSpecified(System.Object)">
            <summary>A container cannot be specified when the ModelMetada is of kind '{0}'.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.StateShouldBeNullForRouteValueTransformers">
            <summary>Transformer '{0}' was retrieved from dependency injection with a state value. State can only be specified when the dynamic route is mapped using MapDynamicControllerRoute's state argument together with transient lifetime transformer. Ensure that '{0}' does ...</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatStateShouldBeNullForRouteValueTransformers(System.Object)">
            <summary>Transformer '{0}' was retrieved from dependency injection with a state value. State can only be specified when the dynamic route is mapped using MapDynamicControllerRoute's state argument together with transient lifetime transformer. Ensure that '{0}' does ...</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.ComplexObjectModelBinder_NoSuitableConstructor_ForParameter">
            <summary>Could not create an instance of type '{0}'. Model bound complex types must not be abstract or value types and must have a parameterless constructor. Record types must have a single primary constructor. Alternatively, give the '{1}' parameter a non-null def ...</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatComplexObjectModelBinder_NoSuitableConstructor_ForParameter(System.Object,System.Object)">
            <summary>Could not create an instance of type '{0}'. Model bound complex types must not be abstract or value types and must have a parameterless constructor. Record types must have a single primary constructor. Alternatively, give the '{1}' parameter a non-null def ...</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.ComplexObjectModelBinder_NoSuitableConstructor_ForProperty">
            <summary>Could not create an instance of type '{0}'. Model bound complex types must not be abstract or value types and must have a parameterless constructor. Record types must have a single primary constructor. Alternatively, set the '{1}' property to a non-null va ...</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatComplexObjectModelBinder_NoSuitableConstructor_ForProperty(System.Object,System.Object,System.Object)">
            <summary>Could not create an instance of type '{0}'. Model bound complex types must not be abstract or value types and must have a parameterless constructor. Record types must have a single primary constructor. Alternatively, set the '{1}' property to a non-null va ...</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.ComplexObjectModelBinder_NoSuitableConstructor_ForType">
            <summary>Could not create an instance of type '{0}'. Model bound complex types must not be abstract or value types and must have a parameterless constructor. Record types must have a single primary constructor.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatComplexObjectModelBinder_NoSuitableConstructor_ForType(System.Object)">
            <summary>Could not create an instance of type '{0}'. Model bound complex types must not be abstract or value types and must have a parameterless constructor. Record types must have a single primary constructor.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.ValidationStrategy_MappedPropertyNotFound">
            <summary>No property found that maps to constructor parameter '{0}' for type '{1}'. Validation requires that each bound parameter of a record type's primary constructor must have a property to read the value.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatValidationStrategy_MappedPropertyNotFound(System.Object,System.Object)">
            <summary>No property found that maps to constructor parameter '{0}' for type '{1}'. Validation requires that each bound parameter of a record type's primary constructor must have a property to read the value.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.TryUpdateModel_RecordTypeNotSupported">
            <summary>{0} cannot update a record type model. If a '{1}' must be updated, include it in an object type.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatTryUpdateModel_RecordTypeNotSupported(System.Object,System.Object)">
            <summary>{0} cannot update a record type model. If a '{1}' must be updated, include it in an object type.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.GetContentTypes_WildcardsNotSupported">
            <summary>Could not parse '{0}'. Content types with wildcards are not supported.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatGetContentTypes_WildcardsNotSupported(System.Object)">
            <summary>Could not parse '{0}'. Content types with wildcards are not supported.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.OutputCacheAttribute_Requires_OutputCachingMiddleware">
            <summary>'{0}' requires the output cache middleware.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatOutputCacheAttribute_Requires_OutputCachingMiddleware(System.Object)">
            <summary>'{0}' requires the output cache middleware.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Core.Resources.TryParseModelBinder_InvalidType">
            <summary>The type '{0}' does not contain a TryParse method and the binder '{1}' cannot be used.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Core.Resources.FormatTryParseModelBinder_InvalidType(System.Object,System.Object)">
            <summary>The type '{0}' does not contain a TryParse method and the binder '{1}' cannot be used.</summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.MvcCoreMvcOptionsSetup">
            <summary>
            Sets up default options for <see cref="T:Microsoft.AspNetCore.Mvc.MvcOptions"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.IRequestFormLimitsPolicy">
            <summary>
            A marker interface for filters which define a policy for limits on a request's body read as a form.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.IRequestSizePolicy">
            <summary>
            A marker interface for filters which define a policy for maximum size for the request body.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.JsonOptions">
            <summary>
            Options to configure <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter"/> and <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.JsonOptions.AllowInputFormatterExceptionMessages">
            <summary>
            Gets or sets a flag to determine whether error messages from JSON deserialization by the
            <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter"/> will be added to the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/>. If
            <see langword="false"/>, a generic error message will be used instead.
            </summary>
            <value>
            The default value is <see langword="true"/>.
            </value>
            <remarks>
            Error messages in the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/> are often communicated to clients, either in HTML
            or using <see cref="T:Microsoft.AspNetCore.Mvc.BadRequestObjectResult"/>. In effect, this setting controls whether clients can receive
            detailed error messages about submitted JSON data.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.JsonOptions.JsonSerializerOptions">
            <summary>
            Gets the <see cref="T:System.Text.Json.JsonSerializerOptions"/> used by <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter"/> and
            <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.JsonResult">
            <summary>
            An action result which formats the given object as JSON.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.JsonResult.#ctor(System.Object)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.JsonResult"/> with the given <paramref name="value"/>.
            </summary>
            <param name="value">The value to format as JSON.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.JsonResult.#ctor(System.Object,System.Object)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.JsonResult"/> with the given <paramref name="value"/>.
            </summary>
            <param name="value">The value to format as JSON.</param>
            <param name="serializerSettings">
            The serializer settings to be used by the formatter.
            <para>
            When using <c>System.Text.Json</c>, this should be an instance of <see cref="T:System.Text.Json.JsonSerializerOptions" />.
            </para>
            <para>
            When using <c>Newtonsoft.Json</c>, this should be an instance of <c>JsonSerializerSettings</c>.
            </para>
            </param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.JsonResult.ContentType">
            <summary>
            Gets or sets the <see cref="T:Microsoft.Net.Http.Headers.MediaTypeHeaderValue"/> representing the Content-Type header of the response.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.JsonResult.SerializerSettings">
            <summary>
            Gets or sets the serializer settings.
            <para>
            When using <c>System.Text.Json</c>, this should be an instance of <see cref="T:System.Text.Json.JsonSerializerOptions" />
            </para>
            <para>
            When using <c>Newtonsoft.Json</c>, this should be an instance of <c>JsonSerializerSettings</c>.
            </para>
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.JsonResult.StatusCode">
            <summary>
            Gets or sets the HTTP status code.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.JsonResult.Value">
            <summary>
            Gets or sets the value to be formatted.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.JsonResult.ExecuteResultAsync(Microsoft.AspNetCore.Mvc.ActionContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.LocalRedirectResult">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ActionResult"/> that returns a Found (302), Moved Permanently (301), Temporary Redirect (307),
            or Permanent Redirect (308) response with a Location header to the supplied local URL.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.LocalRedirectResult.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.LocalRedirectResult"/> class with the values
            provided.
            </summary>
            <param name="localUrl">The local URL to redirect to.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.LocalRedirectResult.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.LocalRedirectResult"/> class with the values
            provided.
            </summary>
            <param name="localUrl">The local URL to redirect to.</param>
            <param name="permanent">Specifies whether the redirect should be permanent (301) or temporary (302).</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.LocalRedirectResult.#ctor(System.String,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.LocalRedirectResult"/> class with the values
            provided.
            </summary>
            <param name="localUrl">The local URL to redirect to.</param>
            <param name="permanent">Specifies whether the redirect should be permanent (301) or temporary (302).</param>
            <param name="preserveMethod">If set to true, make the temporary redirect (307) or permanent redirect (308) preserve the initial request's method.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.LocalRedirectResult.Permanent">
            <summary>
            Gets or sets the value that specifies that the redirect should be permanent if true or temporary if false.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.LocalRedirectResult.PreserveMethod">
            <summary>
            Gets or sets an indication that the redirect preserves the initial request method.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.LocalRedirectResult.Url">
            <summary>
            Gets or sets the local URL to redirect to.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.LocalRedirectResult.UrlHelper">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Mvc.IUrlHelper"/> for this result.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.LocalRedirectResult.ExecuteResultAsync(Microsoft.AspNetCore.Mvc.ActionContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinderAttribute">
            <summary>
            An attribute that can specify a model name or type of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder"/> to use for binding.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinderAttribute.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinderAttribute"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinderAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinderAttribute"/>.
            </summary>
            <param name="binderType">A <see cref="T:System.Type"/> which implements <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder"/>.</param>
            <remarks>
            Subclass this attribute and set <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinderAttribute.BindingSource"/> if <see cref="F:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Custom"/> is not
            correct for the specified <paramref name="binderType"/>.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinderAttribute.BinderType">
            <inheritdoc />
            <remarks>
            Subclass this attribute and set <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinderAttribute.BindingSource"/> if <see cref="F:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Custom"/> is not
            correct for the specified (non-<see langword="null"/>) <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder"/> implementation.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinderAttribute.BindingSource">
            <inheritdoc />
            <value>
            If <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinderAttribute.BinderType"/> is <see langword="null"/>, defaults to <see langword="null"/>. Otherwise,
            defaults to <see cref="F:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Custom"/>. May be overridden in a subclass.
            </value>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinderAttribute.Name">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinderAttribute`1">
            <inheritdoc />
            <typeparam name="TBinder">A <see cref="T:System.Type"/> which implements <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder"/>.</typeparam>
            <remarks>
            This is a derived generic variant of the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinderAttribute"/>.
            Ensure that only one instance of either attribute is provided on the target.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinderAttribute`1.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinderAttribute"/>.
            </summary>
            <remarks>
            Subclass this attribute and set <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource"/> if <see cref="F:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Custom"/> is not
            correct for the specified type parameter.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinder`1">
            <summary>
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder"/> implementation for binding array values.
            </summary>
            <typeparam name="TElement">Type of elements in the array.</typeparam>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinder`1.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinder`1"/>.
            </summary>
            <param name="elementBinder">
            The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder"/> for binding <typeparamref name="TElement"/>.
            </param>
            <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinder`1.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder,Microsoft.Extensions.Logging.ILoggerFactory,System.Boolean)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinder`1"/>.
            </summary>
            <param name="elementBinder">
            The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder"/> for binding <typeparamref name="TElement"/>.
            </param>
            <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/>.</param>
            <param name="allowValidatingTopLevelNodes">
            Indication that validation of top-level models is enabled. If <see langword="true"/> and
            <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.IsBindingRequired"/> is <see langword="true"/> for a top-level model, the binder
            adds a <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/> error when the model is not bound.
            </param>
            <remarks>
            The <paramref name="allowValidatingTopLevelNodes"/> parameter is currently ignored.
            <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.AllowValidatingTopLevelNodes"/> is always <see langword="true"/>
            in <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinder`1"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinder`1.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder,Microsoft.Extensions.Logging.ILoggerFactory,System.Boolean,Microsoft.AspNetCore.Mvc.MvcOptions)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinder`1"/>.
            </summary>
            <param name="elementBinder">
            The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder"/> for binding <typeparamref name="TElement"/>.
            </param>
            <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/>.</param>
            <param name="allowValidatingTopLevelNodes">
            Indication that validation of top-level models is enabled. If <see langword="true"/> and
            <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.IsBindingRequired"/> is <see langword="true"/> for a top-level model, the binder
            adds a <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/> error when the model is not bound.
            </param>
            <param name="mvcOptions">The <see cref="T:Microsoft.AspNetCore.Mvc.MvcOptions"/>.</param>
            <remarks>
            <para>This is the preferred <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinder`1"/> constructor.</para>
            <para>
            The <paramref name="allowValidatingTopLevelNodes"/> parameter is currently ignored.
            <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.AllowValidatingTopLevelNodes"/> is always <see langword="true"/>
            in <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinder`1"/>.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinder`1.CanCreateInstance(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinder`1.CreateEmptyCollection(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinder`1.ConvertToCollectionType(System.Type,System.Collections.Generic.IEnumerable{`0})">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinder`1.CopyToModel(System.Object,System.Collections.Generic.IEnumerable{`0})">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderProvider"/> for arrays.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider.GetBinder(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderProviderContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinder">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder"/> for models which specify an <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder"/> using
            <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.BinderType"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinder.#ctor(System.Type)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinder"/>.
            </summary>
            <param name="binderType">The <see cref="T:System.Type"/> of the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinder.BindModelAsync(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderProvider"/> for models which specify an <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder"/>
            using <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo.BinderType"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider.GetBinder(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderProviderContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinder">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder"/> which binds models from the request body using an <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.IInputFormatter"/>
            when a model has the binding source <see cref="F:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Body"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinder.#ctor(System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Formatters.IInputFormatter},Microsoft.AspNetCore.Mvc.Infrastructure.IHttpRequestStreamReaderFactory)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinder"/>.
            </summary>
            <param name="formatters">The list of <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.IInputFormatter"/>.</param>
            <param name="readerFactory">
            The <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.IHttpRequestStreamReaderFactory"/>, used to create <see cref="T:System.IO.TextReader"/>
            instances for reading the request body.
            </param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinder.#ctor(System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Formatters.IInputFormatter},Microsoft.AspNetCore.Mvc.Infrastructure.IHttpRequestStreamReaderFactory,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinder"/>.
            </summary>
            <param name="formatters">The list of <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.IInputFormatter"/>.</param>
            <param name="readerFactory">
            The <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.IHttpRequestStreamReaderFactory"/>, used to create <see cref="T:System.IO.TextReader"/>
            instances for reading the request body.
            </param>
            <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinder.#ctor(System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Formatters.IInputFormatter},Microsoft.AspNetCore.Mvc.Infrastructure.IHttpRequestStreamReaderFactory,Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.AspNetCore.Mvc.MvcOptions)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinder"/>.
            </summary>
            <param name="formatters">The list of <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.IInputFormatter"/>.</param>
            <param name="readerFactory">
            The <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.IHttpRequestStreamReaderFactory"/>, used to create <see cref="T:System.IO.TextReader"/>
            instances for reading the request body.
            </param>
            <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/>.</param>
            <param name="options">The <see cref="T:Microsoft.AspNetCore.Mvc.MvcOptions"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinder.BindModelAsync(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderProvider"/> for deserializing the request body using a formatter.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider.#ctor(System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Formatters.IInputFormatter},Microsoft.AspNetCore.Mvc.Infrastructure.IHttpRequestStreamReaderFactory)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider"/>.
            </summary>
            <param name="formatters">The list of <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.IInputFormatter"/>.</param>
            <param name="readerFactory">The <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.IHttpRequestStreamReaderFactory"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider.#ctor(System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Formatters.IInputFormatter},Microsoft.AspNetCore.Mvc.Infrastructure.IHttpRequestStreamReaderFactory,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider"/>.
            </summary>
            <param name="formatters">The list of <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.IInputFormatter"/>.</param>
            <param name="readerFactory">The <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.IHttpRequestStreamReaderFactory"/>.</param>
            <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider.#ctor(System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Formatters.IInputFormatter},Microsoft.AspNetCore.Mvc.Infrastructure.IHttpRequestStreamReaderFactory,Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.AspNetCore.Mvc.MvcOptions)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider"/>.
            </summary>
            <param name="formatters">The list of <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.IInputFormatter"/>.</param>
            <param name="readerFactory">The <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.IHttpRequestStreamReaderFactory"/>.</param>
            <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/>.</param>
            <param name="options">The <see cref="T:Microsoft.AspNetCore.Mvc.MvcOptions"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider.GetBinder(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderProviderContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinder">
            <summary>
            ModelBinder to bind byte Arrays.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinder.#ctor(Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinder"/>.
            </summary>
            <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinder.BindModelAsync(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderProvider"/> for binding base64 encoded byte arrays.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider.GetBinder(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderProviderContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinder">
            <summary>
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder"/> implementation to bind models of type <see cref="T:System.Threading.CancellationToken"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinder.BindModelAsync(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderProvider"/> for <see cref="T:System.Threading.CancellationToken"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider.GetBinder(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderProviderContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1">
            <summary>
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder"/> implementation for binding collection values.
            </summary>
            <typeparam name="TElement">Type of elements in the collection.</typeparam>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1"/>.
            </summary>
            <param name="elementBinder">
            The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder"/> for binding <typeparamref name="TElement"/>.
            </param>
            <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder,Microsoft.Extensions.Logging.ILoggerFactory,System.Boolean)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1"/>.
            </summary>
            <param name="elementBinder">
            The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder"/> for binding <typeparamref name="TElement"/>.
            </param>
            <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/>.</param>
            <param name="allowValidatingTopLevelNodes">
            Indication that validation of top-level models is enabled. If <see langword="true"/> and
            <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.IsBindingRequired"/> is <see langword="true"/> for a top-level model, the binder
            adds a <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/> error when the model is not bound.
            </param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder,Microsoft.Extensions.Logging.ILoggerFactory,System.Boolean,Microsoft.AspNetCore.Mvc.MvcOptions)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1"/>.
            </summary>
            <param name="elementBinder">
            The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder"/> for binding <typeparamref name="TElement"/>.
            </param>
            <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/>.</param>
            <param name="allowValidatingTopLevelNodes">
            Indication that validation of top-level models is enabled. If <see langword="true"/> and
            <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.IsBindingRequired"/> is <see langword="true"/> for a top-level model, the binder
            adds a <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/> error when the model is not bound.
            </param>
            <param name="mvcOptions">The <see cref="T:Microsoft.AspNetCore.Mvc.MvcOptions"/>.</param>
            <remarks>This is the preferred <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1"/> constructor.</remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.ElementBinder">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder"/> instances for binding collection elements.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.Logger">
            <summary>
            The <see cref="T:Microsoft.Extensions.Logging.ILogger"/> used for logging in this binder.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.BindModelAsync(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.CanCreateInstance(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.AddErrorIfBindingRequired(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)">
            <summary>
            Add a <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelError" /> to <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.ModelState" /> if
            <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.IsBindingRequired" />.
            </summary>
            <param name="bindingContext">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext"/>.</param>
            <remarks>
            For back-compatibility reasons, <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.Result" /> must have
            <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult.IsModelSet" /> equal to <see langword="true" /> when a
            top-level model is not bound. Therefore, ParameterBinder can not detect a
            <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.IsBindingRequired" /> failure for collections. Add the error here.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.CreateEmptyCollection(System.Type)">
            <summary>
            Create an <see cref="T:System.Object"/> assignable to <paramref name="targetType"/>.
            </summary>
            <param name="targetType"><see cref="T:System.Type"/> of the model.</param>
            <returns>An <see cref="T:System.Object"/> assignable to <paramref name="targetType"/>.</returns>
            <remarks>Called when creating a default 'empty' model for a top level bind.</remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.CreateInstance(System.Type)">
            <summary>
            Create an instance of <paramref name="targetType"/>.
            </summary>
            <param name="targetType"><see cref="T:System.Type"/> of the model.</param>
            <returns>An instance of <paramref name="targetType"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.ConvertToCollectionType(System.Type,System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Gets an <see cref="T:System.Object"/> assignable to <paramref name="targetType"/> that contains members from
            <paramref name="collection"/>.
            </summary>
            <param name="targetType"><see cref="T:System.Type"/> of the model.</param>
            <param name="collection">
            Collection of values retrieved from value providers. <see langword="null"/> if nothing was bound.
            </param>
            <returns>
            An <see cref="T:System.Object"/> assignable to <paramref name="targetType"/>. <see langword="null"/> if nothing
            was bound.
            </returns>
            <remarks>
            Extensibility point that allows the bound collection to be manipulated or transformed before being
            returned from the binder.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.CopyToModel(System.Object,System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds values from <paramref name="sourceCollection"/> to given <paramref name="target"/>.
            </summary>
            <param name="target"><see cref="T:System.Object"/> into which values are copied.</param>
            <param name="sourceCollection">
            Collection of values retrieved from value providers. <see langword="null"/> if nothing was bound.
            </param>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.Log.__AttemptingToBindCollectionUsingIndicesStruct">
            <summary> This API supports the logging infrastructure and is not intended to be used directly from your code. It is subject to change in the future. </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.Log.__AttemptingToBindCollectionOfKeyValuePairStruct">
            <summary> This API supports the logging infrastructure and is not intended to be used directly from your code. It is subject to change in the future. </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.Log.__NoNonIndexBasedFormatFoundForCollectionStruct">
            <summary> This API supports the logging infrastructure and is not intended to be used directly from your code. It is subject to change in the future. </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderProvider"/> for <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider.GetBinder(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderProviderContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinder">
            <summary>
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder"/> implementation for binding complex types.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinder.BindModelAsync(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinder.CreateModel(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)">
            <summary>
            Creates suitable <see cref="T:System.Object"/> for given <paramref name="bindingContext"/>.
            </summary>
            <param name="bindingContext">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext"/>.</param>
            <returns>An <see cref="T:System.Object"/> compatible with <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.ModelType"/>.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderProvider"/> for complex types.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider.GetBinder(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderProviderContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexTypeModelBinder">
            <summary>
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder"/> implementation for binding complex types.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexTypeModelBinder.#ctor(System.Collections.Generic.IDictionary{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexTypeModelBinder"/>.
            </summary>
            <param name="propertyBinders">
            The <see cref="T:System.Collections.Generic.IDictionary`2"/> of binders to use for binding properties.
            </param>
            <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexTypeModelBinder.#ctor(System.Collections.Generic.IDictionary{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder},Microsoft.Extensions.Logging.ILoggerFactory,System.Boolean)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexTypeModelBinder"/>.
            </summary>
            <param name="propertyBinders">
            The <see cref="T:System.Collections.Generic.IDictionary`2"/> of binders to use for binding properties.
            </param>
            <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/>.</param>
            <param name="allowValidatingTopLevelNodes">
            Indication that validation of top-level models is enabled. If <see langword="true"/> and
            <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.IsBindingRequired"/> is <see langword="true"/> for a top-level model, the binder
            adds a <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/> error when the model is not bound.
            </param>
            <remarks>The <paramref name="allowValidatingTopLevelNodes"/> parameter is currently ignored.</remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexTypeModelBinder.BindModelAsync(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexTypeModelBinder.CanBindProperty(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext,Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata)">
            <summary>
            Gets a value indicating whether or not the model property identified by <paramref name="propertyMetadata"/>
            can be bound.
            </summary>
            <param name="bindingContext">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext"/> for the container model.</param>
            <param name="propertyMetadata">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/> for the model property.</param>
            <returns><c>true</c> if the model property can be bound, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexTypeModelBinder.BindProperty(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)">
            <summary>
            Attempts to bind a property of the model.
            </summary>
            <param name="bindingContext">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext"/> for the model property.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that when completed will set <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.Result"/> to the
            result of model binding.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexTypeModelBinder.CreateModel(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)">
            <summary>
            Creates suitable <see cref="T:System.Object"/> for given <paramref name="bindingContext"/>.
            </summary>
            <param name="bindingContext">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext"/>.</param>
            <returns>An <see cref="T:System.Object"/> compatible with <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.ModelType"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexTypeModelBinder.SetProperty(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult)">
            <summary>
            Updates a property in the current <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.Model"/>.
            </summary>
            <param name="bindingContext">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext"/>.</param>
            <param name="modelName">The model name.</param>
            <param name="propertyMetadata">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/> for the property to set.</param>
            <param name="result">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingResult"/> for the property's new value.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexTypeModelBinderProvider">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderProvider"/> for complex types.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexTypeModelBinderProvider.GetBinder(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderProviderContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinder">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder"/> for <see cref="T:System.DateTime"/> and nullable <see cref="T:System.DateTime"/> models.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinder.#ctor(System.Globalization.DateTimeStyles,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinder"/>.
            </summary>
            <param name="supportedStyles">The <see cref="T:System.Globalization.DateTimeStyles"/>.</param>
            <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinder.BindModelAsync(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderProvider"/> for binding <see cref="T:System.DateTime" /> and nullable <see cref="T:System.DateTime"/> models.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider.GetBinder(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderProviderContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DecimalModelBinder">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder"/> for <see cref="T:System.Decimal"/> and <see cref="T:System.Nullable`1"/> where <c>T</c> is
            <see cref="T:System.Decimal"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DecimalModelBinder.#ctor(System.Globalization.NumberStyles,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DecimalModelBinder"/>.
            </summary>
            <param name="supportedStyles">The <see cref="T:System.Globalization.NumberStyles"/>.</param>
            <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DecimalModelBinder.BindModelAsync(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinder`2">
            <summary>
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder"/> implementation for binding dictionary values.
            </summary>
            <typeparam name="TKey">Type of keys in the dictionary.</typeparam>
            <typeparam name="TValue">Type of values in the dictionary.</typeparam>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinder`2.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder,Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinder`2"/>.
            </summary>
            <param name="keyBinder">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder"/> for <typeparamref name="TKey"/>.</param>
            <param name="valueBinder">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder"/> for <typeparamref name="TValue"/>.</param>
            <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinder`2.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder,Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder,Microsoft.Extensions.Logging.ILoggerFactory,System.Boolean)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinder`2"/>.
            </summary>
            <param name="keyBinder">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder"/> for <typeparamref name="TKey"/>.</param>
            <param name="valueBinder">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder"/> for <typeparamref name="TValue"/>.</param>
            <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/>.</param>
            <param name="allowValidatingTopLevelNodes">
            Indication that validation of top-level models is enabled. If <see langword="true"/> and
            <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.IsBindingRequired"/> is <see langword="true"/> for a top-level model, the binder
            adds a <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/> error when the model is not bound.
            </param>
            <remarks>
            The <paramref name="allowValidatingTopLevelNodes"/> parameter is currently ignored.
            <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.AllowValidatingTopLevelNodes"/> is always
            <see langword="false"/> in <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinder`2"/>. This class ignores that
            property and unconditionally checks for unbound top-level models with
            <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.IsBindingRequired"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinder`2.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder,Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder,Microsoft.Extensions.Logging.ILoggerFactory,System.Boolean,Microsoft.AspNetCore.Mvc.MvcOptions)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinder`2"/>.
            </summary>
            <param name="keyBinder">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder"/> for <typeparamref name="TKey"/>.</param>
            <param name="valueBinder">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder"/> for <typeparamref name="TValue"/>.</param>
            <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/>.</param>
            <param name="allowValidatingTopLevelNodes">
            Indication that validation of top-level models is enabled. If <see langword="true"/> and
            <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.IsBindingRequired"/> is <see langword="true"/> for a top-level model, the binder
            adds a <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/> error when the model is not bound.
            </param>
            <param name="mvcOptions">The <see cref="T:Microsoft.AspNetCore.Mvc.MvcOptions"/>.</param>
            <remarks>
            <para>This is the preferred <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinder`2"/> constructor.</para>
            <para>
            The <paramref name="allowValidatingTopLevelNodes"/> parameter is currently ignored.
            <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1.AllowValidatingTopLevelNodes"/> is always
            <see langword="false"/> in <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinder`2"/>. This class ignores that
            property and unconditionally checks for unbound top-level models with
            <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.IsBindingRequired"/>.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinder`2.BindModelAsync(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinder`2.ConvertToCollectionType(System.Type,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinder`2.CreateEmptyCollection(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinder`2.CanCreateInstance(System.Type)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinder`2.Log.__NoKeyValueFormatForDictionaryModelBinderStruct">
            <summary> This API supports the logging infrastructure and is not intended to be used directly from your code. It is subject to change in the future. </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderProvider"/> for binding <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider.GetBinder(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderProviderContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DoubleModelBinder">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder"/> for <see cref="T:System.Double"/> and <see cref="T:System.Nullable`1"/> where <c>T</c> is
            <see cref="T:System.Double"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DoubleModelBinder.#ctor(System.Globalization.NumberStyles,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DoubleModelBinder"/>.
            </summary>
            <param name="supportedStyles">The <see cref="T:System.Globalization.NumberStyles"/>.</param>
            <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DoubleModelBinder.BindModelAsync(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinder">
            <summary>
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder"/> implementation to bind models for types deriving from <see cref="T:System.Enum"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinder.#ctor(System.Boolean,System.Type,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinder"/>.
            </summary>
            <param name="suppressBindingUndefinedValueToEnumType">
            Flag to determine if binding to undefined should be suppressed or not.
            </param>
            <param name="modelType">The model type.</param>
            <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/>,</param>
            <remarks>
            The <paramref name="suppressBindingUndefinedValueToEnumType"/> parameter is currently ignored.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinder.CheckModel(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext,Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult,System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider">
            <summary>
            A <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderProvider"/> for types deriving from <see cref="T:System.Enum"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider.#ctor(Microsoft.AspNetCore.Mvc.MvcOptions)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider"/>.
            </summary>
            <param name="options">The <see cref="T:Microsoft.AspNetCore.Mvc.MvcOptions"/>.</param>
            <remarks>The <paramref name="options"/> parameter is currently ignored.</remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider.GetBinder(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderProviderContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderProvider"/> for binding <see cref="T:System.Decimal"/>, <see cref="T:System.Double"/>,
            <see cref="T:System.Single"/>, and their <see cref="T:System.Nullable`1"/> wrappers.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider.GetBinder(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderProviderContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatModelBinder">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder"/> for <see cref="T:System.Single"/> and <see cref="T:System.Nullable`1"/> where <c>T</c> is
            <see cref="T:System.Single"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatModelBinder.#ctor(System.Globalization.NumberStyles,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatModelBinder"/>.
            </summary>
            <param name="supportedStyles">The <see cref="T:System.Globalization.NumberStyles"/>.</param>
            <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatModelBinder.BindModelAsync(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinder">
            <summary>
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder"/> implementation to bind form values to <see cref="T:Microsoft.AspNetCore.Http.IFormCollection"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinder.#ctor(Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinder"/>.
            </summary>
            <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinder.BindModelAsync(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderProvider"/> for <see cref="T:Microsoft.AspNetCore.Http.IFormCollection"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider.GetBinder(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderProviderContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinder">
            <summary>
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder"/> implementation to bind posted files to <see cref="T:Microsoft.AspNetCore.Http.IFormFile"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinder.#ctor(Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinder"/>.
            </summary>
            <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinder.BindModelAsync(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderProvider"/> for <see cref="T:Microsoft.AspNetCore.Http.IFormFile"/>, collections
            of <see cref="T:Microsoft.AspNetCore.Http.IFormFile"/>, and <see cref="T:Microsoft.AspNetCore.Http.IFormFileCollection"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider.GetBinder(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderProviderContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinder">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder"/> which binds models from the request headers when a model
            has the binding source <see cref="F:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Header"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinder.#ctor(Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinder"/>.
            </summary>
            <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinder.#ctor(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinder"/>.
            </summary>
            <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/>.</param>
            <param name="innerModelBinder">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder"/> which does the actual
            binding of values.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinder.BindModelAsync(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderProvider"/> for binding header values.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider.GetBinder(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderProviderContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinder`2">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder"/> for <see cref="T:System.Collections.Generic.KeyValuePair`2"/>.
            </summary>
            <typeparam name="TKey">The key type.</typeparam>
            <typeparam name="TValue">The value type.</typeparam>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinder`2.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder,Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Creates a new <see cref="T:System.Collections.Generic.KeyValuePair`2"/>.
            </summary>
            <param name="keyBinder">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder"/> for <typeparamref name="TKey"/>.</param>
            <param name="valueBinder">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder"/> for <typeparamref name="TValue"/>.</param>
            <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinder`2.BindModelAsync(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderProvider"/> for <see cref="T:System.Collections.Generic.KeyValuePair`2"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider.GetBinder(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderProviderContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinder">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder"/> which binds models from the request services when a model
            has the binding source <see cref="F:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.Services"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinder.BindModelAsync(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderProvider"/> for binding from the <see cref="T:System.IServiceProvider"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider.GetBinder(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderProviderContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinder">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder"/> for simple types.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinder.#ctor(System.Type,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinder"/>.
            </summary>
            <param name="type">The type to create binder for.</param>
            <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinder.BindModelAsync(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinder.CheckModel(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext,Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderResult,System.Object)">
            <summary>
            If the <paramref name="model" /> is <see langword="null" />, verifies that it is allowed to be <see langword="null" />,
            otherwise notifies the <see cref="P:ModelBindingContext.ModelState" /> about the invalid <paramref name="valueProviderResult" />.
            Sets the <see href="P:ModelBindingContext.Result" /> to the <paramref name="model" /> if successful.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderProvider"/> for binding simple data types.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider.GetBinder(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderProviderContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinder">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder"/> for simple types.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinder.#ctor(System.Type,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinder"/>.
            </summary>
            <param name="modelType">The model type.</param>
            <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinder.BindModelAsync(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderProvider"/> for binding types that have a TryParse method.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider.GetBinder(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderProviderContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.BindingBehavior">
            <summary>
            Enumerates behavior options of the model binding system.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.ModelBinding.BindingBehavior.Optional">
            <summary>
            The property should be model bound if a value is available from the value provider.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.ModelBinding.BindingBehavior.Never">
            <summary>
            The property should be excluded from model binding.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.ModelBinding.BindingBehavior.Required">
            <summary>
            The property is required for model binding.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.BindingBehaviorAttribute">
            <summary>
            Specifies the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.BindingBehavior"/> that should be applied.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.BindingBehaviorAttribute.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.BindingBehavior)">
            <summary>
            Initializes a new <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.BindingBehaviorAttribute"/> instance.
            </summary>
            <param name="behavior">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.BindingBehavior"/> to apply.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.BindingBehaviorAttribute.Behavior">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.BindingBehavior"/> to apply.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSourceValueProvider">
            <summary>
            A value provider which provides data from a specific <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSourceValueProvider.BindingSource"/>.
            </summary>
            <remarks>
            <para>
            A <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSourceValueProvider"/> is an <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider"/> base-implementation which
            can provide data for all parameters and model properties which specify the corresponding
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource"/>.
            </para>
            <para>
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSourceValueProvider"/> implements <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IBindingSourceValueProvider"/> and will
            include or exclude itself from the set of value providers based on the model's associated
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource"/>. Value providers are by-default included; if a model does not
            specify a <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource"/> then all value providers are valid.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSourceValueProvider.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSourceValueProvider"/>.
            </summary>
            <param name="bindingSource">
            The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource"/>. Must be a single-source (non-composite) with
            <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource.IsGreedy"/> equal to <c>false</c>.
            </param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSourceValueProvider.BindingSource">
            <summary>
            Gets the corresponding <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSourceValueProvider.ContainsPrefix(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSourceValueProvider.GetValue(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSourceValueProvider.Filter(Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.BindNeverAttribute">
            <summary>
            Indicates that a property should be excluded from model binding. When applied to a property, the model binding
            system excludes that property. When applied to a type, the model binding system excludes all properties that
            type defines.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.BindNeverAttribute.#ctor">
            <summary>
            Initializes a new <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.BindNeverAttribute"/> instance.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.BindRequiredAttribute">
            <summary>
            Indicates that a property is required for model binding. When applied to a property, the model binding system
            requires a value for that property. When applied to a type, the model binding system requires values for all
            properties that type defines.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.BindRequiredAttribute.#ctor">
            <summary>
            Initializes a new <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.BindRequiredAttribute"/> instance.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.CompositeValueProvider">
            <summary>
            Represents a <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider"/> whose values come from a collection of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider"/>s.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.CompositeValueProvider.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.CompositeValueProvider"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.CompositeValueProvider.#ctor(System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider})">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.CompositeValueProvider"/>.
            </summary>
            <param name="valueProviders">The sequence of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider"/> to add to this instance of
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.CompositeValueProvider"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.CompositeValueProvider.CreateAsync(Microsoft.AspNetCore.Mvc.ControllerContext)">
            <summary>
            Asynchronously creates a <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.CompositeValueProvider"/> using the provided
            <paramref name="controllerContext"/>.
            </summary>
            <param name="controllerContext">The <see cref="T:Microsoft.AspNetCore.Mvc.ControllerContext"/> associated with the current request.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/> which, when completed, asynchronously returns a
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.CompositeValueProvider"/>.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.CompositeValueProvider.CreateAsync(Microsoft.AspNetCore.Mvc.ActionContext,System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory})">
            <summary>
            Asynchronously creates a <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.CompositeValueProvider"/> using the provided
            <paramref name="actionContext"/>.
            </summary>
            <param name="actionContext">The <see cref="T:Microsoft.AspNetCore.Mvc.ActionContext"/> associated with the current request.</param>
            <param name="factories">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory"/> to be applied to the context.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/> which, when completed, asynchronously returns a
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.CompositeValueProvider"/>.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.CompositeValueProvider.ContainsPrefix(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.CompositeValueProvider.GetValue(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.CompositeValueProvider.GetKeysFromPrefix(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.CompositeValueProvider.InsertItem(System.Int32,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.CompositeValueProvider.SetItem(System.Int32,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.CompositeValueProvider.Filter(Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.CompositeValueProvider.Filter">
            <inheritdoc />
            <remarks>
            Value providers are included by default. If a contained <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider"/> does not implement
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IKeyRewriterValueProvider"/>, <see cref="M:Microsoft.AspNetCore.Mvc.ModelBinding.CompositeValueProvider.Filter"/> will not remove it.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.DefaultModelBindingContext">
            <summary>
            A context that contains operating information for model binding and validation.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.DefaultModelBindingContext.ActionContext">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.DefaultModelBindingContext.FieldName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.DefaultModelBindingContext.Model">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.DefaultModelBindingContext.ModelMetadata">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.DefaultModelBindingContext.ModelName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.DefaultModelBindingContext.ModelState">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.DefaultModelBindingContext.BinderModelName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.DefaultModelBindingContext.BindingSource">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.DefaultModelBindingContext.IsTopLevelObject">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.DefaultModelBindingContext.OriginalValueProvider">
            <summary>
            Gets or sets the original value provider to be used when value providers are not filtered.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.DefaultModelBindingContext.ValueProvider">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.DefaultModelBindingContext.PropertyFilter">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.DefaultModelBindingContext.ValidationState">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.DefaultModelBindingContext.Result">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.DefaultModelBindingContext.CreateBindingContext(Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo,System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.DefaultModelBindingContext"/> for top-level model binding operation.
            </summary>
            <param name="actionContext">
            The <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.DefaultModelBindingContext.ActionContext"/> associated with the binding operation.
            </param>
            <param name="valueProvider">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider"/> to use for binding.</param>
            <param name="metadata"><see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.DefaultModelBindingContext.ModelMetadata"/> associated with the model.</param>
            <param name="bindingInfo"><see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo"/> associated with the model.</param>
            <param name="modelName">The name of the property or parameter being bound.</param>
            <returns>A new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.DefaultModelBindingContext"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.DefaultModelBindingContext.EnterNestedScope(Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.String,System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.DefaultModelBindingContext.EnterNestedScope">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.DefaultModelBindingContext.ExitNestedScope">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.DefaultPropertyFilterProvider`1">
            <summary>
            Default implementation for <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IPropertyFilterProvider"/>.
            Provides a expression based way to provide include properties.
            </summary>
            <typeparam name="TModel">The target model Type.</typeparam>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.DefaultPropertyFilterProvider`1.Prefix">
            <summary>
            The prefix which is used while generating the property filter.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.DefaultPropertyFilterProvider`1.PropertyIncludeExpressions">
            <summary>
            Expressions which can be used to generate property filter which can filter model
            properties.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.DefaultPropertyFilterProvider`1.PropertyFilter">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.EmptyModelMetadataProvider">
            <summary>
            A <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultBindingMetadataProvider"/> that represents an empty model.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.EmptyModelMetadataProvider.#ctor">
            <summary>
            Initializes a new <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.EmptyModelMetadataProvider"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.FormFileValueProvider">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider"/> adapter for data stored in an <see cref="T:Microsoft.AspNetCore.Http.IFormFileCollection"/>.
            </summary>
            <remarks>
            Unlike most <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider"/> instances, <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.FormFileValueProvider"/> does not provide any values, but
            specifically responds to <see cref="M:Microsoft.AspNetCore.Mvc.ModelBinding.FormFileValueProvider.ContainsPrefix(System.String)"/> queries. This allows the model binding system to
            recurse in to deeply nested object graphs with only values for form files.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.FormFileValueProvider.#ctor(Microsoft.AspNetCore.Http.IFormFileCollection)">
            <summary>
            Creates a value provider for <see cref="T:Microsoft.AspNetCore.Http.IFormFileCollection"/>.
            </summary>
            <param name="files">The <see cref="T:Microsoft.AspNetCore.Http.IFormFileCollection"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.FormFileValueProvider.ContainsPrefix(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.FormFileValueProvider.GetValue(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.FormFileValueProviderFactory">
            <summary>
            A <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory"/> for <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.FormValueProvider"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.FormFileValueProviderFactory.CreateValueProviderAsync(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderFactoryContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.FormValueProvider">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider"/> adapter for data stored in an <see cref="T:Microsoft.AspNetCore.Http.IFormCollection"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.FormValueProvider.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource,Microsoft.AspNetCore.Http.IFormCollection,System.Globalization.CultureInfo)">
            <summary>
            Creates a value provider for <see cref="T:Microsoft.AspNetCore.Http.IFormCollection"/>.
            </summary>
            <param name="bindingSource">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource"/> for the data.</param>
            <param name="values">The key value pairs to wrap.</param>
            <param name="culture">The culture to return with ValueProviderResult instances.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.FormValueProvider.Culture">
            <summary>
            The culture to use.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.FormValueProvider.PrefixContainer">
            <summary>
            The prefix container.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.FormValueProvider.ContainsPrefix(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.FormValueProvider.GetKeysFromPrefix(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.FormValueProvider.GetValue(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.FormValueProviderFactory">
            <summary>
            A <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory"/> for <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.FormValueProvider"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.FormValueProviderFactory.CreateValueProviderAsync(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderFactoryContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.IBindingSourceValueProvider">
            <summary>
            A value provider which can filter its contents based on <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource"/>.
            </summary>
            <remarks>
            Value providers are by-default included. If a model does not specify a <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource"/>
            then all value providers are valid.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.IBindingSourceValueProvider.Filter(Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource)">
            <summary>
            Filters the value provider based on <paramref name="bindingSource"/>.
            </summary>
            <param name="bindingSource">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource"/> associated with a model.</param>
            <returns>
            The filtered value provider, or <c>null</c> if the value provider does not match
            <paramref name="bindingSource"/>.
            </returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.ICollectionModelBinder">
            <summary>
            Interface for model binding collections.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.ICollectionModelBinder.CanCreateInstance(System.Type)">
            <summary>
            Gets an indication whether or not this <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ICollectionModelBinder"/> implementation can create
            an <see cref="T:System.Object"/> assignable to <paramref name="targetType"/>.
            </summary>
            <param name="targetType"><see cref="T:System.Type"/> of the model.</param>
            <returns>
            <c>true</c> if this <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ICollectionModelBinder"/> implementation can create an <see cref="T:System.Object"/>
            assignable to <paramref name="targetType"/>; <c>false</c> otherwise.
            </returns>
            <remarks>
            A <c>true</c> return value is necessary for successful model binding if model is initially <c>null</c>.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.IEnumerableValueProvider">
            <summary>
            Interface representing an enumerable <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.IEnumerableValueProvider.GetKeysFromPrefix(System.String)">
            <summary>
            Gets the keys for a specific prefix.
            </summary>
            <param name="prefix">The prefix to enumerate.</param>
            <returns>The keys for the prefix.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.IKeyRewriterValueProvider">
            <summary>
            A value provider which can filter its contents to remove keys rewritten compared to the request data.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.IKeyRewriterValueProvider.Filter">
            <summary>
            Filters the value provider to remove keys rewritten compared to the request data.
            </summary>
            <example>
            If the request contains values with keys <c>Model.Property</c> and <c>Collection[index]</c>, the returned
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider"/> will not match <c>Model[Property]</c> or <c>Collection.index</c>.
            </example>
            <returns>
            The filtered value provider or <see langref="null"/> if the value provider only contains rewritten keys.
            </returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory">
            <summary>
            A factory abstraction for creating <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder"/> instances.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory.CreateBinder(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactoryContext)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder"/>.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactoryContext"/>.</param>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder"/> instance.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.JQueryFormValueProvider">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider"/> for jQuery formatted form data.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.JQueryFormValueProvider.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource,System.Collections.Generic.IDictionary{System.String,Microsoft.Extensions.Primitives.StringValues},System.Globalization.CultureInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.JQueryFormValueProvider"/> class.
            </summary>
            <param name="bindingSource">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource"/> of the data.</param>
            <param name="values">The values.</param>
            <param name="culture">The culture to return with ValueProviderResult instances.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.JQueryFormValueProvider.GetValue(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.JQueryFormValueProviderFactory">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory"/> for <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.JQueryFormValueProvider"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.JQueryFormValueProviderFactory.CreateValueProviderAsync(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderFactoryContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.JQueryQueryStringValueProvider">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider"/> for jQuery formatted query string data.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.JQueryQueryStringValueProvider.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource,System.Collections.Generic.IDictionary{System.String,Microsoft.Extensions.Primitives.StringValues},System.Globalization.CultureInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.JQueryQueryStringValueProvider"/> class.
            </summary>
            <param name="bindingSource">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource"/> of the data.</param>
            <param name="values">The values.</param>
            <param name="culture">The culture to return with ValueProviderResult instances.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.JQueryQueryStringValueProviderFactory">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory"/> for <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.JQueryQueryStringValueProvider"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.JQueryQueryStringValueProviderFactory.CreateValueProviderAsync(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderFactoryContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.JQueryValueProvider">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider"/> for jQuery formatted data.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.JQueryValueProvider.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource,System.Collections.Generic.IDictionary{System.String,Microsoft.Extensions.Primitives.StringValues},System.Globalization.CultureInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.JQueryValueProvider"/> class.
            </summary>
            <param name="bindingSource">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource"/> of the data.</param>
            <param name="values">The values.</param>
            <param name="culture">The culture to return with ValueProviderResult instances.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.JQueryValueProvider.Culture">
            <summary>
            Gets the <see cref="T:System.Globalization.CultureInfo"/> associated with the values.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.JQueryValueProvider.PrefixContainer">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.JQueryValueProvider.ContainsPrefix(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.JQueryValueProvider.GetKeysFromPrefix(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.JQueryValueProvider.GetValue(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.JQueryValueProvider.Filter">
            <inheritdoc />
            <remarks>
            Always returns <see langword="null"/> because <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.JQueryFormValueProviderFactory"/> creates this
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider"/> with rewritten keys (if original contains brackets) or duplicate keys
            (that <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.FormValueProvider"/> will match).
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.BindingMetadata">
            <summary>
            Binding metadata details for a <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.BindingMetadata.BindingSource">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource"/>.
            See <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.BindingSource"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.BindingMetadata.BinderModelName">
            <summary>
            Gets or sets the binder model name. If <c>null</c> the property or parameter name will be used.
            See <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.BinderModelName"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.BindingMetadata.BinderType">
            <summary>
            Gets or sets the <see cref="T:System.Type"/> of the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder"/> implementation used to bind the
            model. See <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.BinderType"/>.
            </summary>
            <remarks>
            Also set <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.BindingMetadata.BindingSource"/> if the specified <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder"/> implementation does not
            use values from form data, route values or the query string.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.BindingMetadata.IsBindingAllowed">
            <summary>
            Gets or sets a value indicating whether or not the property can be model bound.
            Will be ignored if the model metadata being created does not represent a property.
            See <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.IsBindingAllowed"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.BindingMetadata.IsBindingRequired">
            <summary>
            Gets or sets a value indicating whether or not the request must contain a value for the model.
            Will be ignored if the model metadata being created does not represent a property.
            See <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.IsBindingRequired"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.BindingMetadata.IsReadOnly">
            <summary>
            Gets or sets a value indicating whether or not the model is read-only. Will be ignored
            if the model metadata being created is not a property. If <c>null</c> then
            <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.IsReadOnly"/> will be  computed based on the accessibility
            of the property accessor and model <see cref="T:System.Type"/>. See <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.IsReadOnly"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.BindingMetadata.ModelBindingMessageProvider">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelBindingMessageProvider"/> instance. See
            <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.ModelBindingMessageProvider"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.BindingMetadata.PropertyFilterProvider">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IPropertyFilterProvider"/>.
            See <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.PropertyFilterProvider"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.BindingMetadata.BoundConstructor">
            <summary>
            Gets or sets the <see cref="T:System.Reflection.ConstructorInfo"/> used to model bind and validate the model type.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.BindingMetadataProviderContext">
            <summary>
            A context for an <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IBindingMetadataProvider"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.BindingMetadataProviderContext.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity,Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.BindingMetadataProviderContext"/>.
            </summary>
            <param name="key">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity"/> for the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/>.</param>
            <param name="attributes">The attributes for the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.BindingMetadataProviderContext.Attributes">
            <summary>
            Gets the attributes.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.BindingMetadataProviderContext.Key">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.BindingMetadataProviderContext.ParameterAttributes">
            <summary>
            Gets the parameter attributes.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.BindingMetadataProviderContext.PropertyAttributes">
            <summary>
            Gets the property attributes.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.BindingMetadataProviderContext.TypeAttributes">
            <summary>
            Gets the type attributes.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.BindingMetadataProviderContext.BindingMetadata">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.BindingMetadata"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.BindingSourceMetadataProvider">
            <summary>
            Provides <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.BindingMetadata"/> for a <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.BindingSourceMetadataProvider.#ctor(System.Type,Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.BindingSourceMetadataProvider"/> for the given <paramref name="type"/>.
            </summary>
            <param name="type">
            The <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.BindingSourceMetadataProvider.Type"/>. The provider sets <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.BindingSourceMetadataProvider.BindingSource"/> of the given <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.BindingSourceMetadataProvider.Type"/> or
            anything assignable to the given <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.BindingSourceMetadataProvider.Type"/>.
            </param>
            <param name="bindingSource">
            The <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.BindingSourceMetadataProvider.BindingSource"/> to assign to the given <paramref name="type"/>.
            </param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.BindingSourceMetadataProvider.Type">
            <summary>
            The <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.BindingSourceMetadataProvider.Type"/>. The provider sets <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.BindingSourceMetadataProvider.BindingSource"/> of the given <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.BindingSourceMetadataProvider.Type"/> or
            anything assignable to the given <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.BindingSourceMetadataProvider.Type"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.BindingSourceMetadataProvider.BindingSource">
            <summary>
            The <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.BindingSourceMetadataProvider.BindingSource"/> to assign to the Type.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.BindingSourceMetadataProvider.CreateBindingMetadata(Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.BindingMetadataProviderContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultBindingMetadataProvider">
            <summary>
            A default implementation of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IBindingMetadataProvider"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultCompositeMetadataDetailsProvider">
            <summary>
            A default implementation of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ICompositeMetadataDetailsProvider"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultCompositeMetadataDetailsProvider.#ctor(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IMetadataDetailsProvider})">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultCompositeMetadataDetailsProvider"/>.
            </summary>
            <param name="providers">The set of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IMetadataDetailsProvider"/> instances.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultCompositeMetadataDetailsProvider.CreateBindingMetadata(Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.BindingMetadataProviderContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultCompositeMetadataDetailsProvider.CreateDisplayMetadata(Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadataProviderContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultCompositeMetadataDetailsProvider.CreateValidationMetadata(Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ValidationMetadataProviderContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultMetadataDetails">
            <summary>
            Holds associated metadata objects for a <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata"/>.
            </summary>
            <remarks>
            Any modifications to the data must be thread-safe for multiple readers and writers.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultMetadataDetails.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity,Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultMetadataDetails"/>.
            </summary>
            <param name="key">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity"/>.</param>
            <param name="attributes">The set of model attributes.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultMetadataDetails.ModelAttributes">
            <summary>
            Gets or sets the set of model attributes.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultMetadataDetails.BindingMetadata">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.BindingMetadata"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultMetadataDetails.DisplayMetadata">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultMetadataDetails.Key">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultMetadataDetails.Properties">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/> entries for the model properties.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultMetadataDetails.BoundConstructorParameters">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/> entries for constructor parameters.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultMetadataDetails.PropertyGetter">
            <summary>
            Gets or sets a property getter delegate to get the property value from a model object.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultMetadataDetails.PropertySetter">
            <summary>
            Gets or sets a property setter delegate to set the property value on a model object.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultMetadataDetails.BoundConstructorInvoker">
            <summary>
            Gets or sets a delegate used to invoke the bound constructor for record types.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultMetadataDetails.ValidationMetadata">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ValidationMetadata"/>
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultMetadataDetails.ContainerMetadata">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/> of the container type.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelBindingMessageProvider">
            <summary>
            Read / write <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelBindingMessageProvider"/> implementation.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelBindingMessageProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelBindingMessageProvider"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelBindingMessageProvider.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelBindingMessageProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelBindingMessageProvider"/> class based on
            <paramref name="originalProvider"/>.
            </summary>
            <param name="originalProvider">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelBindingMessageProvider"/> to duplicate.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelBindingMessageProvider.MissingBindRequiredValueAccessor">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelBindingMessageProvider.SetMissingBindRequiredValueAccessor(System.Func{System.String,System.String})">
            <summary>
            Sets the <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelBindingMessageProvider.MissingBindRequiredValueAccessor"/> property.
            </summary>
            <param name="missingBindRequiredValueAccessor">The value to set.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelBindingMessageProvider.MissingKeyOrValueAccessor">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelBindingMessageProvider.SetMissingKeyOrValueAccessor(System.Func{System.String})">
            <summary>
            Sets the <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelBindingMessageProvider.MissingKeyOrValueAccessor"/> property.
            </summary>
            <param name="missingKeyOrValueAccessor">The value to set.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelBindingMessageProvider.MissingRequestBodyRequiredValueAccessor">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelBindingMessageProvider.SetMissingRequestBodyRequiredValueAccessor(System.Func{System.String})">
            <summary>
            Sets the <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelBindingMessageProvider.MissingRequestBodyRequiredValueAccessor"/> property.
            </summary>
            <param name="missingRequestBodyRequiredValueAccessor">The value to set.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelBindingMessageProvider.ValueMustNotBeNullAccessor">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelBindingMessageProvider.SetValueMustNotBeNullAccessor(System.Func{System.String,System.String})">
            <summary>
            Sets the <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelBindingMessageProvider.ValueMustNotBeNullAccessor"/> property.
            </summary>
            <param name="valueMustNotBeNullAccessor">The value to set.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelBindingMessageProvider.AttemptedValueIsInvalidAccessor">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelBindingMessageProvider.SetAttemptedValueIsInvalidAccessor(System.Func{System.String,System.String,System.String})">
            <summary>
            Sets the <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelBindingMessageProvider.AttemptedValueIsInvalidAccessor"/> property.
            </summary>
            <param name="attemptedValueIsInvalidAccessor">The value to set.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelBindingMessageProvider.NonPropertyAttemptedValueIsInvalidAccessor">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelBindingMessageProvider.SetNonPropertyAttemptedValueIsInvalidAccessor(System.Func{System.String,System.String})">
            <summary>
            Sets the <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelBindingMessageProvider.NonPropertyAttemptedValueIsInvalidAccessor"/> property.
            </summary>
            <param name="nonPropertyAttemptedValueIsInvalidAccessor">The value to set.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelBindingMessageProvider.UnknownValueIsInvalidAccessor">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelBindingMessageProvider.SetUnknownValueIsInvalidAccessor(System.Func{System.String,System.String})">
            <summary>
            Sets the <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelBindingMessageProvider.UnknownValueIsInvalidAccessor"/> property.
            </summary>
            <param name="unknownValueIsInvalidAccessor">The value to set.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelBindingMessageProvider.NonPropertyUnknownValueIsInvalidAccessor">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelBindingMessageProvider.SetNonPropertyUnknownValueIsInvalidAccessor(System.Func{System.String})">
            <summary>
            Sets the <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelBindingMessageProvider.NonPropertyUnknownValueIsInvalidAccessor"/> property.
            </summary>
            <param name="nonPropertyUnknownValueIsInvalidAccessor">The value to set.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelBindingMessageProvider.ValueIsInvalidAccessor">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelBindingMessageProvider.SetValueIsInvalidAccessor(System.Func{System.String,System.String})">
            <summary>
            Sets the <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelBindingMessageProvider.ValueIsInvalidAccessor"/> property.
            </summary>
            <param name="valueIsInvalidAccessor">The value to set.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelBindingMessageProvider.ValueMustBeANumberAccessor">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelBindingMessageProvider.SetValueMustBeANumberAccessor(System.Func{System.String,System.String})">
            <summary>
            Sets the <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelBindingMessageProvider.ValueMustBeANumberAccessor"/> property.
            </summary>
            <param name="valueMustBeANumberAccessor">The value to set.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelBindingMessageProvider.NonPropertyValueMustBeANumberAccessor">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelBindingMessageProvider.SetNonPropertyValueMustBeANumberAccessor(System.Func{System.String})">
            <summary>
            Sets the <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelBindingMessageProvider.NonPropertyValueMustBeANumberAccessor"/> property.
            </summary>
            <param name="nonPropertyValueMustBeANumberAccessor">The value to set.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata">
            <summary>
            A default <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/> implementation.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider,Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ICompositeMetadataDetailsProvider,Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultMetadataDetails)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata"/>.
            </summary>
            <param name="provider">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider"/>.</param>
            <param name="detailsProvider">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ICompositeMetadataDetailsProvider"/>.</param>
            <param name="details">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultMetadataDetails"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider,Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ICompositeMetadataDetailsProvider,Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultMetadataDetails,Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelBindingMessageProvider)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata"/>.
            </summary>
            <param name="provider">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider"/>.</param>
            <param name="detailsProvider">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ICompositeMetadataDetailsProvider"/>.</param>
            <param name="details">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultMetadataDetails"/>.</param>
            <param name="modelBindingMessageProvider">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelBindingMessageProvider"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata.Attributes">
            <summary>
            Gets the set of attributes for the current instance.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata.ContainerMetadata">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata.BindingMetadata">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.BindingMetadata"/> for the current instance.
            </summary>
            <remarks>
            Accessing this property will populate the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.BindingMetadata"/> if necessary.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata.DisplayMetadata">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata"/> for the current instance.
            </summary>
            <remarks>
            Accessing this property will populate the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata"/> if necessary.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata.ValidationMetadata">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ValidationMetadata"/> for the current instance.
            </summary>
            <remarks>
            Accessing this property will populate the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ValidationMetadata"/> if necessary.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata.AdditionalValues">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata.BindingSource">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata.BinderModelName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata.BinderType">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata.ConvertEmptyStringToNull">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata.DataTypeName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata.Description">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata.DisplayFormatString">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata.DisplayName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata.EditFormatString">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata.ElementMetadata">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata.EnumGroupedDisplayNamesAndValues">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata.EnumNamesAndValues">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata.HasNonDefaultEditFormat">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata.HideSurroundingHtml">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata.HtmlEncode">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata.IsBindingAllowed">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata.IsBindingRequired">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata.IsEnum">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata.IsFlagsEnum">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata.IsReadOnly">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata.IsRequired">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata.ModelBindingMessageProvider">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata.NullDisplayText">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata.Order">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata.Placeholder">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata.Properties">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata.BoundConstructor">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata.BoundConstructorParameters">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata.PropertyFilterProvider">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata.ShowForDisplay">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata.ShowForEdit">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata.SimpleDisplayProperty">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata.TemplateHint">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata.PropertyValidationFilter">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata.ValidateChildren">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata.HasValidators">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata.ValidationModelName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata.ValidatorMetadata">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata.PropertyGetter">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata.PropertySetter">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata.BoundConstructorInvoker">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata.GetMetadataForType(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata.GetMetadataForProperties(System.Type)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadataProvider">
            <summary>
            A default implementation of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider"/> based on reflection.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadataProvider.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ICompositeMetadataDetailsProvider)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadataProvider"/>.
            </summary>
            <param name="detailsProvider">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ICompositeMetadataDetailsProvider"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadataProvider.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ICompositeMetadataDetailsProvider,Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Mvc.MvcOptions})">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadataProvider"/>.
            </summary>
            <param name="detailsProvider">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ICompositeMetadataDetailsProvider"/>.</param>
            <param name="optionsAccessor">The accessor for <see cref="T:Microsoft.AspNetCore.Mvc.MvcOptions"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadataProvider.DetailsProvider">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ICompositeMetadataDetailsProvider"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadataProvider.ModelBindingMessageProvider">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelBindingMessageProvider"/>.
            </summary>
            <value>Same as <see cref="P:Microsoft.AspNetCore.Mvc.MvcOptions.ModelBindingMessageProvider"/> in all production scenarios.</value>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadataProvider.GetMetadataForProperties(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadataProvider.GetMetadataForParameter(System.Reflection.ParameterInfo)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadataProvider.GetMetadataForParameter(System.Reflection.ParameterInfo,System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadataProvider.GetMetadataForType(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadataProvider.GetMetadataForProperty(System.Reflection.PropertyInfo,System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadataProvider.GetMetadataForConstructor(System.Reflection.ConstructorInfo,System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadataProvider.CreateModelMetadata(Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultMetadataDetails)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/> from a <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultMetadataDetails"/>.
            </summary>
            <param name="entry">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultMetadataDetails"/> entry with cached data.</param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/> instance.</returns>
            <remarks>
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadataProvider"/> will always create instances of
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata"/> .Override this method to create a <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/>
            of a different concrete type.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadataProvider.CreatePropertyDetails(Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity)">
            <summary>
            Creates the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultMetadataDetails"/> entries for the properties of a model
            <see cref="T:System.Type"/>.
            </summary>
            <param name="key">
            The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity"/> identifying the model <see cref="T:System.Type"/>.
            </param>
            <returns>A details object for each property of the model <see cref="T:System.Type"/>.</returns>
            <remarks>
            The results of this method will be cached and used to satisfy calls to
            <see cref="M:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadataProvider.GetMetadataForProperties(System.Type)"/>. Override this method to provide a different
            set of property data.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadataProvider.CreateTypeDetails(Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity)">
            <summary>
            Creates the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultMetadataDetails"/> entry for a model <see cref="T:System.Type"/>.
            </summary>
            <param name="key">
            The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity"/> identifying the model <see cref="T:System.Type"/>.
            </param>
            <returns>A details object for the model <see cref="T:System.Type"/>.</returns>
            <remarks>
            The results of this method will be cached and used to satisfy calls to
            <see cref="M:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadataProvider.GetMetadataForType(System.Type)"/>. Override this method to provide a different
            set of attributes.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadataProvider.CreateParameterDetails(Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity)">
            <summary>
            Creates the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultMetadataDetails"/> entry for a parameter <see cref="T:System.Type"/>.
            </summary>
            <param name="key">
            The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity"/> identifying the parameter <see cref="T:System.Type"/>.
            </param>
            <returns>A details object for the parameter.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultValidationMetadataProvider">
            <summary>
            A default implementation of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IValidationMetadataProvider"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultValidationMetadataProvider.CreateValidationMetadata(Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ValidationMetadataProviderContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata">
            <summary>
            Display metadata details for a <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.AdditionalValues">
            <summary>
            Gets a set of additional values. See <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.AdditionalValues"/>
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.ConvertEmptyStringToNull">
            <summary>
            Gets or sets a value indicating whether or not to convert an empty string value or one containing only
            whitespace characters to <see langword="null"/> when representing a model as text. See
            <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.ConvertEmptyStringToNull"/>
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.DataTypeName">
            <summary>
            Gets or sets the name of the data type.
            See <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.DataTypeName"/>
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.Description">
            <summary>
            Gets or sets a delegate which is used to get a value for the
            model description. See <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.Description"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.DisplayFormatString">
            <summary>
            Gets or sets a display format string for the model.
            See <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.DisplayFormatString"/>
            </summary>
            <remarks>
            Setting <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.DisplayFormatString"/> also changes <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.DisplayFormatStringProvider"/>.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.DisplayFormatStringProvider">
            <summary>
            Gets or sets a delegate which is used to get the display format string for the model. See
            <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.DisplayFormatString"/>.
            </summary>
            <remarks>
            Setting <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.DisplayFormatStringProvider"/> also changes <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.DisplayFormatString"/>.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.DisplayName">
            <summary>
            Gets or sets a delegate which is used to get a value for the
            display name of the model. See <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.DisplayName"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.EditFormatString">
            <summary>
            Gets or sets an edit format string for the model.
            See <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.EditFormatString"/>
            </summary>
            <remarks>
            <para>
            Setting <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.EditFormatString"/> also changes <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.EditFormatStringProvider"/>.
            </para>
            <para>
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IDisplayMetadataProvider"/> instances that set this property to a non-<see langword="null"/>,
            non-empty, non-default value should also set <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.HasNonDefaultEditFormat"/> to
            <see langword="true"/>.
            </para>
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.EditFormatStringProvider">
            <summary>
            Gets or sets a delegate which is used to get the edit format string for the model. See
            <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.EditFormatString"/>.
            </summary>
            <remarks>
            <para>
            Setting <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.EditFormatStringProvider"/> also changes <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.EditFormatString"/>.
            </para>
            <para>
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IDisplayMetadataProvider"/> instances that set this property to a non-default value should
            also set <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.HasNonDefaultEditFormat"/> to <see langword="true"/>.
            </para>
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.EnumGroupedDisplayNamesAndValues">
            <summary>
            Gets the ordered and grouped display names and values of all <see cref="T:System.Enum"/> values in
            <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.UnderlyingOrModelType"/>. See
            <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.EnumGroupedDisplayNamesAndValues"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.EnumNamesAndValues">
            <summary>
            Gets the names and values of all <see cref="T:System.Enum"/> values in
            <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.UnderlyingOrModelType"/>. See <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.EnumNamesAndValues"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.HasNonDefaultEditFormat">
            <summary>
            Gets or sets a value indicating whether or not the model has a non-default edit format.
            See <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.HasNonDefaultEditFormat"/>
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.HideSurroundingHtml">
            <summary>
            Gets or sets a value indicating if the surrounding HTML should be hidden.
            See <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.HideSurroundingHtml"/>
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.HtmlEncode">
            <summary>
            Gets or sets a value indicating if the model value should be HTML encoded.
            See <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.HtmlEncode"/>
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.IsEnum">
            <summary>
            Gets a value indicating whether <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.UnderlyingOrModelType"/> is for an
            <see cref="T:System.Enum"/>. See <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.IsEnum"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.IsFlagsEnum">
            <summary>
            Gets a value indicating whether <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.UnderlyingOrModelType"/> is for an
            <see cref="T:System.Enum"/> with an associated <see cref="T:System.FlagsAttribute"/>. See
            <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.IsFlagsEnum"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.NullDisplayText">
            <summary>
            Gets or sets the text to display when the model value is <see langword="null"/>.
            See <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.NullDisplayText"/>
            </summary>
            <remarks>
            Setting <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.NullDisplayText"/> also changes <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.NullDisplayTextProvider"/>.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.NullDisplayTextProvider">
            <summary>
            Gets or sets a delegate which is used to get the text to display when the model is <see langword="null"/>.
            See <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.NullDisplayText"/>.
            </summary>
            <remarks>
            Setting <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.NullDisplayTextProvider"/> also changes <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.NullDisplayText"/>.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.Order">
            <summary>
            Gets or sets the order.
            See <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.Order"/>
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.Placeholder">
            <summary>
            Gets or sets a delegate which is used to get a value for the
            model's placeholder text. See <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.Placeholder"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.ShowForDisplay">
            <summary>
            Gets or sets a value indicating whether or not to include in the model value in display.
            See <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.ShowForDisplay"/>
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.ShowForEdit">
            <summary>
            Gets or sets a value indicating whether or not to include in the model value in an editor.
            See <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.ShowForEdit"/>
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.SimpleDisplayProperty">
            <summary>
            Gets or sets a the property name of a model property to use for display.
            See <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.SimpleDisplayProperty"/>
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata.TemplateHint">
            <summary>
            Gets or sets a hint for location of a display or editor template.
            See <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.TemplateHint"/>
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadataProviderContext">
            <summary>
            A context for and <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IDisplayMetadataProvider"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadataProviderContext.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity,Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadataProviderContext"/>.
            </summary>
            <param name="key">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity"/> for the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/>.</param>
            <param name="attributes">The attributes for the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadataProviderContext.Attributes">
            <summary>
            Gets the attributes.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadataProviderContext.DisplayMetadata">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadataProviderContext.Key">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadataProviderContext.PropertyAttributes">
            <summary>
            Gets the property attributes.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadataProviderContext.TypeAttributes">
            <summary>
            Gets the type attributes.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ExcludeBindingMetadataProvider">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IBindingMetadataProvider"/> which configures <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.IsBindingAllowed"/> to
            <c>false</c> for matching types.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ExcludeBindingMetadataProvider.#ctor(System.Type)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ExcludeBindingMetadataProvider"/> for the given <paramref name="type"/>.
            </summary>
            <param name="type">
            The <see cref="T:System.Type"/>. All properties with this <see cref="T:System.Type"/> will have
            <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.IsBindingAllowed"/> set to <c>false</c>.
            </param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ExcludeBindingMetadataProvider.CreateBindingMetadata(Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.BindingMetadataProviderContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IBindingMetadataProvider">
            <summary>
            Provides <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.BindingMetadata"/> for a <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IBindingMetadataProvider.CreateBindingMetadata(Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.BindingMetadataProviderContext)">
            <summary>
            Sets the values for properties of <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.BindingMetadataProviderContext.BindingMetadata"/>.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.BindingMetadataProviderContext"/>.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ICompositeMetadataDetailsProvider">
            <summary>
            A composite <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IMetadataDetailsProvider"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IDisplayMetadataProvider">
            <summary>
            Provides <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadata"/> for a <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IDisplayMetadataProvider.CreateDisplayMetadata(Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadataProviderContext)">
            <summary>
            Sets the values for properties of <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadataProviderContext.DisplayMetadata"/>.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadataProviderContext"/>.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IMetadataDetailsProvider">
            <summary>
            Marker interface for a provider of metadata details about model objects. Implementations should
            implement one or more of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IBindingMetadataProvider"/>, <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IDisplayMetadataProvider"/>,
            and <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IValidationMetadataProvider"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IValidationMetadataProvider">
            <summary>
            Provides <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ValidationMetadata"/> for a <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DefaultModelMetadata"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IValidationMetadataProvider.CreateValidationMetadata(Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ValidationMetadataProviderContext)">
            <summary>
            Gets the values for properties of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ValidationMetadata"/>.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ValidationMetadataProviderContext"/>.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.MetadataDetailsProviderExtensions">
            <summary>
            Extension methods for <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IMetadataDetailsProvider"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.MetadataDetailsProviderExtensions.RemoveType``1(System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IMetadataDetailsProvider})">
            <summary>
            Removes all metadata details providers of the specified type.
            </summary>
            <param name="list">The list of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IMetadataDetailsProvider"/>s.</param>
            <typeparam name="TMetadataDetailsProvider">The type to remove.</typeparam>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.MetadataDetailsProviderExtensions.RemoveType(System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IMetadataDetailsProvider},System.Type)">
            <summary>
            Removes all metadata details providers of the specified type.
            </summary>
            <param name="list">The list of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IMetadataDetailsProvider"/>s.</param>
            <param name="type">The type to remove.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.SystemTextJsonValidationMetadataProvider">
            <summary>
            An implementation of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IDisplayMetadataProvider"/> and <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IValidationMetadataProvider"/> for
            the System.Text.Json.Serialization attribute classes.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.SystemTextJsonValidationMetadataProvider.#ctor">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.SystemTextJsonValidationMetadataProvider"/> with the default <see cref="P:System.Text.Json.JsonNamingPolicy.CamelCase"/>
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.SystemTextJsonValidationMetadataProvider.#ctor(System.Text.Json.JsonNamingPolicy)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.SystemTextJsonValidationMetadataProvider"/> with an optional <see cref="T:System.Text.Json.JsonNamingPolicy"/>
            </summary>
            <param name="namingPolicy">The <see cref="T:System.Text.Json.JsonNamingPolicy"/> to be used to configure the metadata provider.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.SystemTextJsonValidationMetadataProvider.CreateDisplayMetadata(Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.DisplayMetadataProviderContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.SystemTextJsonValidationMetadataProvider.CreateValidationMetadata(Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ValidationMetadataProviderContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ValidationMetadata">
            <summary>
            Validation metadata details for a <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ValidationMetadata.IsRequired">
            <summary>
            Gets or sets a value indicating whether or not the model is a required value. Will be ignored
            if the model metadata being created is not a property. If <c>null</c> then
            <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.IsRequired"/> will be computed based on the model <see cref="T:System.Type"/>.
            See <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.IsRequired"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ValidationMetadata.PropertyValidationFilter">
            <summary>
            Gets or sets an <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IPropertyValidationFilter"/> implementation that indicates whether this model
            should be validated. See <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.PropertyValidationFilter"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ValidationMetadata.ValidateChildren">
            <summary>
            Gets or sets a value that indicates whether children of the model should be validated. If <c>null</c>
            then <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.ValidateChildren"/> will be <c>true</c> if either of
            <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.IsComplexType"/> or <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.IsEnumerableType"/> is <c>true</c>;
            <c>false</c> otherwise.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ValidationMetadata.ValidatorMetadata">
            <summary>
            Gets a list of metadata items for validators.
            </summary>
            <remarks>
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IValidationMetadataProvider"/> implementations should store metadata items
            in this list, to be consumed later by an <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidatorProvider"/>.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ValidationMetadata.HasValidators">
            <summary>
            Gets a value that indicates if the model has validators .
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ValidationMetadata.PropertyHasValidators">
            <summary>
            Gets or sets a value that determines if validators can be constructed using metadata on properties.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ValidationMetadata.ValidationModelName">
            <summary>
            Gets or sets a model name that will be used in <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationEntry"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ValidationMetadataProviderContext">
            <summary>
            A context for an <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IValidationMetadataProvider"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ValidationMetadataProviderContext.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity,Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ValidationMetadataProviderContext"/>.
            </summary>
            <param name="key">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity"/> for the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/>.</param>
            <param name="attributes">The attributes for the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ValidationMetadataProviderContext.Attributes">
            <summary>
            Gets the attributes.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ValidationMetadataProviderContext.Key">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelMetadataIdentity"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ValidationMetadataProviderContext.ParameterAttributes">
            <summary>
            Gets the parameter attributes.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ValidationMetadataProviderContext.PropertyAttributes">
            <summary>
            Gets the property attributes.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ValidationMetadataProviderContext.TypeAttributes">
            <summary>
            Gets the type attributes.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ValidationMetadataProviderContext.ValidationMetadata">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ValidationMetadata"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientValidatorCache">
            <summary>
            Cache for <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IClientModelValidator"/>s.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientValidatorCache.GetValidators(Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IClientModelValidatorProvider)">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IClientModelValidator"/> for the metadata from the cache, using the validatorProvider to create when needed.
            </summary>
            <param name="metadata">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/> being validated.</param>
            <param name="validatorProvider">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IClientModelValidatorProvider"/> which will be used to create validators when needed.</param>
            <returns>The list of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IClientModelValidator"/>s.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.CompositeClientModelValidatorProvider">
            <summary>
            Aggregate of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IClientModelValidatorProvider"/>s that delegates to its underlying providers.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.CompositeClientModelValidatorProvider.#ctor(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IClientModelValidatorProvider})">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.CompositeClientModelValidatorProvider"/>.
            </summary>
            <param name="providers">
            A collection of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IClientModelValidatorProvider"/> instances.
            </param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.CompositeClientModelValidatorProvider.ValidatorProviders">
            <summary>
            Gets a list of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IClientModelValidatorProvider"/> instances.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.CompositeClientModelValidatorProvider.CreateValidators(Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientValidatorProviderContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.CompositeModelValidatorProvider">
            <summary>
            Aggregate of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidatorProvider"/>s that delegates to its underlying providers.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.CompositeModelValidatorProvider.#ctor(System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidatorProvider})">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.CompositeModelValidatorProvider"/>.
            </summary>
            <param name="providers">
            A collection of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidatorProvider"/> instances.
            </param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.CompositeModelValidatorProvider.ValidatorProviders">
            <summary>
            Gets the list of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidatorProvider"/> instances.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.CompositeModelValidatorProvider.CreateValidators(Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidatorProviderContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.DefaultCollectionValidationStrategy">
             <summary>
             The default implementation of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IValidationStrategy"/> for a collection.
             </summary>
             <remarks>
             This implementation handles cases like:
             <example>
                 Model: IList&lt;Student&gt;
                 Query String: ?students[0].Age=8&amp;students[1].Age=9
            
                 In this case the elements of the collection are identified in the input data set by an incrementing
                 integer index.
             </example>
            
             or:
            
             <example>
                 Model: IDictionary&lt;string, int&gt;
                 Query String: ?students[0].Key=Joey&amp;students[0].Value=8
            
                 In this case the dictionary is treated as a collection of key-value pairs, and the elements of the
                 collection are identified in the input data set by an incrementing integer index.
             </example>
            
             Using this key format, the enumerator enumerates model objects of type matching
             <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.ElementMetadata"/>. The indices of the elements in the collection are used to
             compute the model prefix keys.
             </remarks>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.DefaultCollectionValidationStrategy.Instance">
            <summary>
            Gets an instance of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.DefaultCollectionValidationStrategy"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.DefaultCollectionValidationStrategy.GetChildren(Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.DefaultComplexObjectValidationStrategy">
            <summary>
            The default implementation of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IValidationStrategy"/> for a complex object.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.DefaultComplexObjectValidationStrategy.Instance">
            <summary>
            Gets an instance of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.DefaultComplexObjectValidationStrategy"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.DefaultComplexObjectValidationStrategy.GetChildren(Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.DefaultModelValidatorProvider">
            <summary>
            A default <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidatorProvider"/>.
            </summary>
            <remarks>
            The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.DefaultModelValidatorProvider"/> provides validators from <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidator"/>
            instances in <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.ValidatorMetadata"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.DefaultModelValidatorProvider.CreateValidators(Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidatorProviderContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.DefaultObjectValidator">
            <summary>
            The default implementation of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.DefaultObjectValidator.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider,System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidatorProvider},Microsoft.AspNetCore.Mvc.MvcOptions)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.DefaultObjectValidator"/>.
            </summary>
            <param name="modelMetadataProvider">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider"/>.</param>
            <param name="validatorProviders">The list of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidatorProvider"/>.</param>
            <param name="mvcOptions">Accessor to <see cref="T:Microsoft.AspNetCore.Mvc.MvcOptions"/>.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ExplicitIndexCollectionValidationStrategy">
             <summary>
             An implementation of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IValidationStrategy"/> for a collection bound using 'explicit indexing'
             style keys.
             </summary>
             <remarks>
             This implementation handles cases like:
             <example>
                 Model: IList&lt;Student&gt;
                 Query String: ?students.index=Joey,Katherine&amp;students[Joey].Age=8&amp;students[Katherine].Age=9
            
                 In this case, 'Joey' and 'Katherine' need to be used in the model prefix keys, but cannot be inferred
                 form inspecting the collection. These prefixes are captured during model binding, and mapped to
                 the corresponding ordinal index of a model object in the collection. The enumerator returned from this
                 class will yield two 'Student' objects with corresponding keys 'students[Joey]' and 'students[Katherine]'.
             </example>
            
             Using this key format, the enumerator enumerates model objects of type matching
             <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.ElementMetadata"/>. The keys captured during model binding are mapped to the elements
             in the collection to compute the model prefix keys.
             </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ExplicitIndexCollectionValidationStrategy.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ExplicitIndexCollectionValidationStrategy"/>.
            </summary>
            <param name="elementKeys">The keys of collection elements that were used during model binding.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ExplicitIndexCollectionValidationStrategy.ElementKeys">
            <summary>
            Gets the keys of collection elements that were used during model binding.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ExplicitIndexCollectionValidationStrategy.GetChildren(Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IMetadataBasedModelValidatorProvider">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidatorProvider" /> that provides <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidator"/> instances
            exclusively using values in <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.ValidatorMetadata"/> or the model type.
            <para>
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IMetadataBasedModelValidatorProvider" /> can be used to statically determine if a given
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/> instance can incur any validation. The value for <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.HasValidators"/>
            can be calculated if all instances in <see cref="P:Microsoft.AspNetCore.Mvc.MvcOptions.ModelValidatorProviders"/> are <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IMetadataBasedModelValidatorProvider" />.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IMetadataBasedModelValidatorProvider.HasValidators(System.Type,System.Collections.Generic.IList{System.Object})">
            <summary>
            Gets a value that determines if the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidatorProvider"/> can
            produce any validators given the <paramref name="modelType"/> and <paramref name="modelType"/>.
            </summary>
            <param name="modelType">The <see cref="T:System.Type"/> of the model.</param>
            <param name="validatorMetadata">The list of metadata items for validators. <seealso cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ValidationMetadata.ValidatorMetadata"/>.</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator">
            <summary>
            Provides methods to validate an object graph.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator.Validate(Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationStateDictionary,System.String,System.Object)">
            <summary>
            Validates the provided object.
            </summary>
            <param name="actionContext">The <see cref="T:Microsoft.AspNetCore.Mvc.ActionContext"/> associated with the current request.</param>
            <param name="validationState">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationStateDictionary"/>. May be null.</param>
            <param name="prefix">
            The model prefix. Used to map the model object to entries in <paramref name="validationState"/>.
            </param>
            <param name="model">The model object.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidatorProviderExtensions">
            <summary>
            Extension methods for <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidatorProvider"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidatorProviderExtensions.RemoveType``1(System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidatorProvider})">
            <summary>
            Removes all model validator providers of the specified type.
            </summary>
            <param name="list">This list of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidatorProvider"/>s.</param>
            <typeparam name="TModelValidatorProvider">The type to remove.</typeparam>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidatorProviderExtensions.RemoveType(System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidatorProvider},System.Type)">
            <summary>
            Removes all model validator providers of the specified type.
            </summary>
            <param name="list">This list of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidatorProvider"/>s.</param>
            <param name="type">The type to remove.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ShortFormDictionaryValidationStrategy`2">
             <summary>
             An implementation of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IValidationStrategy"/> for a dictionary bound with 'short form' style keys.
             </summary>
             <typeparam name="TKey">The <see cref="T:System.Type"/> of the keys of the model dictionary.</typeparam>
             <typeparam name="TValue">The <see cref="T:System.Type"/> of the values of the model dictionary.</typeparam>
             <remarks>
             This implementation handles cases like:
             <example>
                 Model: IDictionary&lt;string, Student&gt;
                 Query String: ?students[Joey].Age=8&amp;students[Katherine].Age=9
            
                 In this case, 'Joey' and 'Katherine' are the keys of the dictionary, used to bind two 'Student'
                 objects. The enumerator returned from this class will yield two 'Student' objects with corresponding
                 keys 'students[Joey]' and 'students[Katherine]'
             </example>
            
             Using this key format, the enumerator enumerates model objects of type <typeparamref name="TValue"/>. The
             keys of the dictionary are not validated as they must be simple types.
             </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ShortFormDictionaryValidationStrategy`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,`0}},Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ShortFormDictionaryValidationStrategy`2"/>.
            </summary>
            <param name="keyMappings">
            The mapping from <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/> key to dictionary key.
            </param>
            <param name="valueMetadata">
            The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/> associated with <typeparamref name="TValue"/>.
            </param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ShortFormDictionaryValidationStrategy`2.KeyMappings">
            <summary>
            Gets the mapping from <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/> key to dictionary key.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ShortFormDictionaryValidationStrategy`2.GetChildren(Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidateNeverAttribute">
            <summary>
            Indicates that a property or parameter should be excluded from validation.
            When applied to a property, the validation system excludes that property.
            When applied to a parameter, the validation system excludes that parameter.
            When applied to a type, the validation system excludes all properties within that type.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidateNeverAttribute.ShouldValidateEntry(Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationEntry,Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationEntry)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor">
            <summary>
            A visitor implementation that interprets <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationStateDictionary"/> to traverse
            a model object graph and perform validation.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.#ctor(Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidatorProvider,Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidatorCache,Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider,Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationStateDictionary)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor"/>.
            </summary>
            <param name="actionContext">The <see cref="T:Microsoft.AspNetCore.Mvc.ActionContext"/> associated with the current request.</param>
            <param name="validatorProvider">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidatorProvider"/>.</param>
            <param name="validatorCache">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidatorCache"/> that provides a list of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidator"/>s.</param>
            <param name="metadataProvider">The provider used for reading metadata for the model type.</param>
            <param name="validationState">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationStateDictionary"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.ValidatorProvider">
            <summary>
            The model validator provider.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.MetadataProvider">
            <summary>
            The model metadata provider.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.Cache">
            <summary>
            The validator cache.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.Context">
            <summary>
            The action context.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.ModelState">
            <summary>
            The model state.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.ValidationState">
            <summary>
            The validation state.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.Container">
            <summary>
            The container.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.Key">
            <summary>
            The key.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.Model">
            <summary>
            The model.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.Metadata">
            <summary>
            The model metadata.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.Strategy">
            <summary>
            The validation strategy.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.MaxValidationDepth">
            <summary>
            Gets or sets the maximum depth to constrain the validation visitor when validating.
            <para>
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor"/> traverses the object graph of the model being validated. For models
            that are very deep or are infinitely recursive, validation may result in stack overflow.
            </para>
            <para>
            When not <see langword="null"/>, <see cref="M:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.Visit(Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.String,System.Object)"/> will throw if
            current traversal depth exceeds the specified value.
            </para>
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.ValidateComplexTypesIfChildValidationFails">
            <summary>
            Indicates whether validation of a complex type should be performed if validation fails for any of its children. The default behavior is false.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.Validate(Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.String,System.Object)">
            <summary>
            Validates a object.
            </summary>
            <param name="metadata">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/> associated with the model.</param>
            <param name="key">The model prefix key.</param>
            <param name="model">The model object.</param>
            <returns><c>true</c> if the object is valid, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.Validate(Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.String,System.Object,System.Boolean)">
            <summary>
            Validates a object.
            </summary>
            <param name="metadata">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/> associated with the model.</param>
            <param name="key">The model prefix key.</param>
            <param name="model">The model object.</param>
            <param name="alwaysValidateAtTopLevel">If <c>true</c>, applies validation rules even if the top-level value is <c>null</c>.</param>
            <returns><c>true</c> if the object is valid, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.Validate(Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.String,System.Object,System.Boolean,System.Object)">
            <summary>
            Validates a object.
            </summary>
            <param name="metadata">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/> associated with the model.</param>
            <param name="key">The model prefix key.</param>
            <param name="model">The model object.</param>
            <param name="alwaysValidateAtTopLevel">If <c>true</c>, applies validation rules even if the top-level value is <c>null</c>.</param>
            <param name="container">The model container.</param>
            <returns><c>true</c> if the object is valid, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.ValidateNode">
            <summary>
            Validates a single node in a model object graph.
            </summary>
            <returns><c>true</c> if the node is valid, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.Visit(Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.String,System.Object)">
            <summary>
            Validate something in a model.
            </summary>
            <param name="metadata">The model metadata.</param>
            <param name="key">The key to validate.</param>
            <param name="model">The model to validate.</param>
            <see langword="true"/> if the specified model key is valid, otherwise <see langword="false"/>.
            <returns>Whether the the specified model key is valid.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.VisitComplexType(Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IValidationStrategy)">
            <summary>
            Validate complex types, this covers everything VisitSimpleType does not i.e. both enumerations and complex types.
            </summary>
            <param name="defaultStrategy">The default validation strategy to use.</param>
            <returns><see langword="true" /> if valid, otherwise <see langword="false" />.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.VisitSimpleType">
            <summary>
            Validate a simple type.
            </summary>
            <returns>True if valid.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.VisitChildren(Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IValidationStrategy)">
            <summary>
            Validate all the child nodes using the specified strategy.
            </summary>
            <param name="strategy">The validation strategy.</param>
            <returns><see langword="true" /> if all children are valid, otherwise <see langword="false" />.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.SuppressValidation(System.String)">
            <summary>
            Supress validation for a given key.
            </summary>
            <param name="key">The key to supress.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.GetValidationEntry(System.Object)">
            <summary>
            Get the validation entry for the model.
            </summary>
            <param name="model">The model.</param>
            <returns>The validation state entry for the model.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.StateManager">
            <summary>
            State manager used for by <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.StateManager.Recurse(Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor,System.String,Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Object,Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IValidationStrategy)">
            <summary>
            Set up a state manager from a visitor.
            </summary>
            <param name="visitor">The visitor.</param>
            <param name="key">The key.</param>
            <param name="metadata">The metadata.</param>
            <param name="model">The model.</param>
            <param name="strategy">The strategy.</param>
            <returns>A StateManager setup for recursion.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.StateManager.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor,System.Object)">
            <summary>
            Initialize a new <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.StateManager"/>.
            </summary>
            <param name="visitor">The visitor.</param>
            <param name="newModel">The model to validate.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.StateManager.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidatorCache">
            <summary>
            A cache for <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidator"/>
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidatorCache.GetValidators(Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidatorProvider)">
            <summary>
            Get the validators for a model.
            </summary>
            <param name="metadata">The model metadata.</param>
            <param name="validatorProvider">The validator provider.</param>
            <returns>A list of model validators.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes">
            <summary>
            Provides access to the combined list of attributes associated with a <see cref="T:System.Type"/>, property, or parameter.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes.#ctor(System.Collections.Generic.IReadOnlyList{System.Object})">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes.#ctor(System.Collections.Generic.IEnumerable{System.Object},System.Collections.Generic.IEnumerable{System.Object},System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes"/>.
            </summary>
            <param name="typeAttributes">
            If this instance represents a type, the set of attributes for that type.
            If this instance represents a property, the set of attributes for the property's <see cref="T:System.Type"/>.
            Otherwise, <c>null</c>.
            </param>
            <param name="propertyAttributes">
            If this instance represents a property, the set of attributes for that property.
            Otherwise, <c>null</c>.
            </param>
            <param name="parameterAttributes">
            If this instance represents a parameter, the set of attributes for that parameter.
            Otherwise, <c>null</c>.
            </param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes.Attributes">
            <summary>
            Gets the set of all attributes. If this instance represents the attributes for a property, the attributes
            on the property definition are before those on the property's <see cref="T:System.Type"/>. If this instance
            represents the attributes for a parameter, the attributes on the parameter definition are before those on
            the parameter's <see cref="T:System.Type"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes.PropertyAttributes">
            <summary>
            Gets the set of attributes on the property, or <c>null</c> if this instance does not represent the attributes
            for a property.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes.ParameterAttributes">
            <summary>
            Gets the set of attributes on the parameter, or <c>null</c> if this instance does not represent the attributes
            for a parameter.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes.TypeAttributes">
            <summary>
            Gets the set of attributes on the <see cref="T:System.Type"/>. If this instance represents a property, then
            <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes.TypeAttributes"/> contains attributes retrieved from <see cref="P:System.Reflection.PropertyInfo.PropertyType"/>.
            If this instance represents a parameter, then contains attributes retrieved from
            <see cref="P:System.Reflection.ParameterInfo.ParameterType"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes.GetAttributesForProperty(System.Type,System.Reflection.PropertyInfo)">
            <summary>
            Gets the attributes for the given <paramref name="property"/>.
            </summary>
            <param name="type">The <see cref="T:System.Type"/> in which caller found <paramref name="property"/>.
            </param>
            <param name="property">A <see cref="T:System.Reflection.PropertyInfo"/> for which attributes need to be resolved.
            </param>
            <returns>
            A <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes"/> instance with the attributes of the property and its <see cref="T:System.Type"/>.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes.GetAttributesForProperty(System.Type,System.Reflection.PropertyInfo,System.Type)">
            <summary>
            Gets the attributes for the given <paramref name="property"/> with the specified <paramref name="modelType"/>.
            </summary>
            <param name="containerType">The <see cref="T:System.Type"/> in which caller found <paramref name="property"/>.
            </param>
            <param name="property">A <see cref="T:System.Reflection.PropertyInfo"/> for which attributes need to be resolved.
            </param>
            <param name="modelType">The model type</param>
            <returns>
            A <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes"/> instance with the attributes of the property and its <see cref="T:System.Type"/>.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes.GetAttributesForType(System.Type)">
            <summary>
            Gets the attributes for the given <paramref name="type"/>.
            </summary>
            <param name="type">The <see cref="T:System.Type"/> for which attributes need to be resolved.
            </param>
            <returns>A <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes"/> instance with the attributes of the <see cref="T:System.Type"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes.GetAttributesForParameter(System.Reflection.ParameterInfo)">
            <summary>
            Gets the attributes for the given <paramref name="parameterInfo"/>.
            </summary>
            <param name="parameterInfo">
            The <see cref="T:System.Reflection.ParameterInfo"/> for which attributes need to be resolved.
            </param>
            <returns>
            A <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes"/> instance with the attributes of the parameter and its <see cref="T:System.Type"/>.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes.GetAttributesForParameter(System.Reflection.ParameterInfo,System.Type)">
            <summary>
            Gets the attributes for the given <paramref name="parameterInfo"/> with the specified <paramref name="modelType"/>.
            </summary>
            <param name="parameterInfo">
            The <see cref="T:System.Reflection.ParameterInfo"/> for which attributes need to be resolved.
            </param>
            <param name="modelType">The model type.</param>
            <returns>
            A <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelAttributes"/> instance with the attributes of the parameter and its <see cref="T:System.Type"/>.
            </returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactory">
            <summary>
            A factory for <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder"/> instances.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactory.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider,Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Mvc.MvcOptions},System.IServiceProvider)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactory"/>.
            </summary>
            <param name="metadataProvider">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider"/>.</param>
            <param name="options">The <see cref="T:Microsoft.Extensions.Options.IOptions`1"/> for <see cref="T:Microsoft.AspNetCore.Mvc.MvcOptions"/>.</param>
            <param name="serviceProvider">The <see cref="T:System.IServiceProvider"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactory.CreateBinder(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactoryContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactoryContext">
            <summary>
            A context object for <see cref="M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactory.CreateBinder(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactoryContext)"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactoryContext.BindingInfo">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.BindingInfo"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactoryContext.Metadata">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderFactoryContext.CacheToken">
            <summary>
            Gets or sets the cache token. If <c>non-null</c> the resulting <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder"/>
            will be cached.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderProviderExtensions">
            <summary>
            Extension methods for <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderProvider"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderProviderExtensions.RemoveType``1(System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderProvider})">
            <summary>
            Removes all model binder providers of the specified type.
            </summary>
            <param name="list">The list of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderProvider"/>s.</param>
            <typeparam name="TModelBinderProvider">The type to remove.</typeparam>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBinderProviderExtensions.RemoveType(System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderProvider},System.Type)">
            <summary>
            Removes all model binder providers of the specified type.
            </summary>
            <param name="list">The list of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderProvider"/>s.</param>
            <param name="type">The type to remove.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingHelper.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider,Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator)">
            <summary>
            Updates the specified <paramref name="model"/> instance using the specified
            <paramref name="modelBinderFactory"/> and the specified <paramref name="valueProvider"/> and executes
            validation using the specified <paramref name="objectModelValidator"/>.
            </summary>
            <typeparam name="TModel">The type of the model object.</typeparam>
            <param name="model">The model instance to update and validate.</param>
            <param name="prefix">The prefix to use when looking up values in the <paramref name="valueProvider"/>.
            </param>
            <param name="actionContext">The <see cref="T:Microsoft.AspNetCore.Mvc.ActionContext"/> for the current executing request.</param>
            <param name="metadataProvider">The provider used for reading metadata for the model type.</param>
            <param name="modelBinderFactory">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory"/> used for binding.</param>
            <param name="valueProvider">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider"/> used for looking up values.</param>
            <param name="objectModelValidator">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator"/> used for validating the
            bound values.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that on completion returns <c>true</c> if the update is successful</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingHelper.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider,Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>
            Updates the specified <paramref name="model"/> instance using the specified <paramref name="modelBinderFactory"/>
            and the specified <paramref name="valueProvider"/> and executes validation using the specified
            <paramref name="objectModelValidator"/>.
            </summary>
            <typeparam name="TModel">The type of the model object.</typeparam>
            <param name="model">The model instance to update and validate.</param>
            <param name="prefix">The prefix to use when looking up values in the <paramref name="valueProvider"/>.
            </param>
            <param name="actionContext">The <see cref="T:Microsoft.AspNetCore.Mvc.ActionContext"/> for the current executing request.</param>
            <param name="metadataProvider">The provider used for reading metadata for the model type.</param>
            <param name="modelBinderFactory">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory"/> used for binding.</param>
            <param name="valueProvider">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider"/> used for looking up values.</param>
            <param name="objectModelValidator">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator"/> used for validating the
            bound values.</param>
            <param name="includeExpressions">Expression(s) which represent top level properties
            which need to be included for the current model.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that on completion returns <c>true</c> if the update is successful</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingHelper.TryUpdateModelAsync``1(``0,System.String,Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider,Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})">
            <summary>
            Updates the specified <paramref name="model"/> instance using the specified <paramref name="modelBinderFactory"/>
            and the specified <paramref name="valueProvider"/> and executes validation using the specified
            <paramref name="objectModelValidator"/>.
            </summary>
            <typeparam name="TModel">The type of the model object.</typeparam>
            <param name="model">The model instance to update and validate.</param>
            <param name="prefix">The prefix to use when looking up values in the <paramref name="valueProvider"/>.
            </param>
            <param name="actionContext">The <see cref="T:Microsoft.AspNetCore.Mvc.ActionContext"/> for the current executing request.</param>
            <param name="metadataProvider">The provider used for reading metadata for the model type.</param>
            <param name="modelBinderFactory">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory"/> used for binding.</param>
            <param name="valueProvider">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider"/> used for looking up values.</param>
            <param name="objectModelValidator">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator"/> used for validating the
            bound values.</param>
            <param name="propertyFilter">
            A predicate which can be used to filter properties(for inclusion/exclusion) at runtime.
            </param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that on completion returns <c>true</c> if the update is successful</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingHelper.TryUpdateModelAsync(System.Object,System.Type,System.String,Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider,Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator)">
            <summary>
            Updates the specified <paramref name="model"/> instance using the specified <paramref name="modelBinderFactory"/>
            and the specified <paramref name="valueProvider"/> and executes validation using the specified
            <paramref name="objectModelValidator"/>.
            </summary>
            <param name="model">The model instance to update and validate.</param>
            <param name="modelType">The type of model instance to update and validate.</param>
            <param name="prefix">The prefix to use when looking up values in the <paramref name="valueProvider"/>.
            </param>
            <param name="actionContext">The <see cref="T:Microsoft.AspNetCore.Mvc.ActionContext"/> for the current executing request.</param>
            <param name="metadataProvider">The provider used for reading metadata for the model type.</param>
            <param name="modelBinderFactory">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory"/> used for binding.</param>
            <param name="valueProvider">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider"/> used for looking up values.</param>
            <param name="objectModelValidator">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator"/> used for validating the
            bound values.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that on completion returns <c>true</c> if the update is successful</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingHelper.TryUpdateModelAsync(System.Object,System.Type,System.String,Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider,Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator,System.Func{Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Boolean})">
            <summary>
            Updates the specified <paramref name="model"/> instance using the specified <paramref name="modelBinderFactory"/>
            and the specified <paramref name="valueProvider"/> and executes validation using the specified
            <paramref name="objectModelValidator"/>.
            </summary>
            <param name="model">The model instance to update and validate.</param>
            <param name="modelType">The type of model instance to update and validate.</param>
            <param name="prefix">The prefix to use when looking up values in the <paramref name="valueProvider"/>.
            </param>
            <param name="actionContext">The <see cref="T:Microsoft.AspNetCore.Mvc.ActionContext"/> for the current executing request.</param>
            <param name="metadataProvider">The provider used for reading metadata for the model type.</param>
            <param name="modelBinderFactory">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory"/> used for binding.</param>
            <param name="valueProvider">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider"/> used for looking up values.</param>
            <param name="objectModelValidator">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator"/> used for validating the
            bound values.</param>
            <param name="propertyFilter">A predicate which can be used to
            filter properties(for inclusion/exclusion) at runtime.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that on completion returns <c>true</c> if the update is successful</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingHelper.GetPropertyFilterExpression``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>
            Creates an expression for a predicate to limit the set of properties used in model binding.
            </summary>
            <typeparam name="TModel">The model type.</typeparam>
            <param name="expressions">Expressions identifying the properties to allow for binding.</param>
            <returns>An expression which can be used with <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IPropertyFilterProvider"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingHelper.ClearValidationStateForModel(System.Type,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider,System.String)">
            <summary>
            Clears <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/> entries for <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/>.
            </summary>
            <param name="modelType">The <see cref="T:System.Type"/> of the model.</param>
            <param name="modelState">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/> associated with the model.</param>
            <param name="metadataProvider">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider"/>.</param>
            <param name="modelKey">The entry to clear. </param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingHelper.ClearValidationStateForModel(Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.String)">
            <summary>
            Clears <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/> entries for <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/>.
            </summary>
            <param name="modelMetadata">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/>.</param>
            <param name="modelState">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/> associated with the model.</param>
            <param name="modelKey">The entry to clear. </param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingHelper.CanGetCompatibleCollection``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)">
            <summary>
            Gets an indication whether <see cref="M:GetCompatibleCollection{T}"/> is likely to return a usable
            non-<c>null</c> value.
            </summary>
            <typeparam name="T">The element type of the <see cref="T:System.Collections.Generic.ICollection`1"/> required.</typeparam>
            <param name="bindingContext">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext"/>.</param>
            <returns>
            <c>true</c> if <see cref="M:GetCompatibleCollection{T}"/> is likely to return a usable non-<c>null</c>
            value; <c>false</c> otherwise.
            </returns>
            <remarks>"Usable" in this context means the property can be set or its value reused.</remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingHelper.GetCompatibleCollection``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)">
            <summary>
            Creates an <see cref="T:System.Collections.Generic.ICollection`1"/> instance compatible with <paramref name="bindingContext"/>'s
            <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.ModelType"/>.
            </summary>
            <typeparam name="T">The element type of the <see cref="T:System.Collections.Generic.ICollection`1"/> required.</typeparam>
            <param name="bindingContext">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext"/>.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.ICollection`1"/> instance compatible with <paramref name="bindingContext"/>'s
            <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.ModelType"/>.
            </returns>
            <remarks>
            Should not be called if <see cref="M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingHelper.CanGetCompatibleCollection``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)"/> returned <c>false</c>.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingHelper.GetCompatibleCollection``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext,System.Int32)">
            <summary>
            Creates an <see cref="T:System.Collections.Generic.ICollection`1"/> instance compatible with <paramref name="bindingContext"/>'s
            <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.ModelType"/>.
            </summary>
            <typeparam name="T">The element type of the <see cref="T:System.Collections.Generic.ICollection`1"/> required.</typeparam>
            <param name="bindingContext">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext"/>.</param>
            <param name="capacity">
            Capacity for use when creating a <see cref="T:System.Collections.Generic.List`1"/> instance. Not used when creating another type.
            </param>
            <returns>
            An <see cref="T:System.Collections.Generic.ICollection`1"/> instance compatible with <paramref name="bindingContext"/>'s
            <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext.ModelType"/>.
            </returns>
            <remarks>
            Should not be called if <see cref="M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingHelper.CanGetCompatibleCollection``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingContext)"/> returned <c>false</c>.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingHelper.ConvertTo``1(System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts the provided <paramref name="value"/> to a value of <see cref="T:System.Type"/> <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">The <see cref="T:System.Type"/> for conversion.</typeparam>
            <param name="value">The value to convert."/></param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> for conversion.</param>
            <returns>
            The converted value or the default value of <typeparamref name="T"/> if the value could not be converted.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelBindingHelper.ConvertTo(System.Object,System.Type,System.Globalization.CultureInfo)">
            <summary>
            Converts the provided <paramref name="value"/> to a value of <see cref="T:System.Type"/> <paramref name="type"/>.
            </summary>
            <param name="value">The value to convert."/></param>
            <param name="type">The <see cref="T:System.Type"/> for conversion.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> for conversion.</param>
            <returns>
            The converted value or <c>null</c> if the value could not be converted.
            </returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadataProviderExtensions">
            <summary>
            Extensions methods for <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadataProviderExtensions.GetMetadataForProperty(Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider,System.Type,System.String)">
            <summary>
            Gets a <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/> for property identified by the provided
            <paramref name="containerType"/> and <paramref name="propertyName"/>.
            </summary>
            <param name="provider">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/>.</param>
            <param name="containerType">The <see cref="T:System.Type"/> for which the property is defined.</param>
            <param name="propertyName">The property name.</param>
            <returns>A <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/> for the property.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelNames">
            <summary>
            Static class for helpers dealing with model names.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelNames.CreateIndexModelName(System.String,System.Int32)">
            <summary>
            Create an index model name from the parent name.
            </summary>
            <param name="parentName">The parent name.</param>
            <param name="index">The index.</param>
            <returns>The index model name.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelNames.CreateIndexModelName(System.String,System.String)">
            <summary>
            Create an index model name from the parent name.
            </summary>
            <param name="parentName">The parent name.</param>
            <param name="index">The index.</param>
            <returns>The index model name.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelNames.CreatePropertyModelName(System.String,System.String)">
            <summary>
            Create a property model name with a prefix.
            </summary>
            <param name="prefix">The prefix to use.</param>
            <param name="propertyName">The property name.</param>
            <returns>The property model name.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.ObjectModelValidator">
            <summary>
            Provides a base <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator"/> implementation for validating an object graph.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.ObjectModelValidator.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider,System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidatorProvider})">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ObjectModelValidator"/>.
            </summary>
            <param name="modelMetadataProvider">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider"/>.</param>
            <param name="validatorProviders">The list of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidatorProvider"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.ObjectModelValidator.Validate(Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationStateDictionary,System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.ObjectModelValidator.Validate(Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationStateDictionary,System.String,System.Object,Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata)">
            <summary>
            Validates the provided object model.
            If <paramref name="model"/> is <see langword="null"/> and the <paramref name="metadata"/>'s
            <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.IsRequired"/> is <see langword="true"/>, will add one or more
            model state errors that <see cref="M:Microsoft.AspNetCore.Mvc.ModelBinding.ObjectModelValidator.Validate(Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationStateDictionary,System.String,System.Object)"/>
            would not.
            </summary>
            <param name="actionContext">The <see cref="T:Microsoft.AspNetCore.Mvc.ActionContext"/>.</param>
            <param name="validationState">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationStateDictionary"/>.</param>
            <param name="prefix">The model prefix key.</param>
            <param name="model">The model object.</param>
            <param name="metadata">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.ObjectModelValidator.Validate(Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationStateDictionary,System.String,System.Object,Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Object)">
            <summary>
            Validates the provided object model.
            If <paramref name="model"/> is <see langword="null"/> and the <paramref name="metadata"/>'s
            <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.IsRequired"/> is <see langword="true"/>, will add one or more
            model state errors that <see cref="M:Microsoft.AspNetCore.Mvc.ModelBinding.ObjectModelValidator.Validate(Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationStateDictionary,System.String,System.Object)"/>
            would not.
            </summary>
            <param name="actionContext">The <see cref="T:Microsoft.AspNetCore.Mvc.ActionContext"/>.</param>
            <param name="validationState">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationStateDictionary"/>.</param>
            <param name="prefix">The model prefix key.</param>
            <param name="model">The model object.</param>
            <param name="metadata">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/>.</param>
            <param name="container">The model container</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.ObjectModelValidator.GetValidationVisitor(Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidatorProvider,Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidatorCache,Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider,Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationStateDictionary)">
            <summary>
            Gets a <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor"/> that traverses the object model graph and performs validation.
            </summary>
            <param name="actionContext">The <see cref="T:Microsoft.AspNetCore.Mvc.ActionContext"/>.</param>
            <param name="validatorProvider">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidatorProvider"/>.</param>
            <param name="validatorCache">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidatorCache"/>.</param>
            <param name="metadataProvider">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider"/>.</param>
            <param name="validationState">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationStateDictionary"/>.</param>
            <returns>A <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor"/> which traverses the object model graph.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.ParameterBinder">
            <summary>
            Binds and validates models specified by a <see cref="T:Microsoft.AspNetCore.Mvc.Abstractions.ParameterDescriptor"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.ParameterBinder.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider,Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory,Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator,Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Mvc.MvcOptions},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ParameterBinder"/>.
            </summary>
            <param name="modelMetadataProvider">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider"/>.</param>
            <param name="modelBinderFactory">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderFactory"/>.</param>
            <param name="validator">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IObjectModelValidator"/>.</param>
            <param name="mvcOptions">The <see cref="T:Microsoft.AspNetCore.Mvc.MvcOptions"/> accessor.</param>
            <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/>.</param>
            <remarks>The <paramref name="mvcOptions"/> parameter is currently ignored.</remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.ParameterBinder.Logger">
            <summary>
            The <see cref="T:Microsoft.Extensions.Logging.ILogger"/> used for logging in this binder.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.ParameterBinder.BindModelAsync(Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,Microsoft.AspNetCore.Mvc.Abstractions.ParameterDescriptor,Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Object)">
            <summary>
            Binds a model specified by <paramref name="parameter"/> using <paramref name="value"/> as the initial value.
            </summary>
            <param name="actionContext">The <see cref="T:Microsoft.AspNetCore.Mvc.ActionContext"/>.</param>
            <param name="modelBinder">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder"/>.</param>
            <param name="valueProvider">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider"/>.</param>
            <param name="parameter">The <see cref="T:Microsoft.AspNetCore.Mvc.Abstractions.ParameterDescriptor"/></param>
            <param name="metadata">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/>.</param>
            <param name="value">The initial model value.</param>
            <returns>The result of model binding.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.ParameterBinder.BindModelAsync(Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder,Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider,Microsoft.AspNetCore.Mvc.Abstractions.ParameterDescriptor,Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Object,System.Object)">
            <summary>
            Binds a model specified by <paramref name="parameter"/> using <paramref name="value"/> as the initial value.
            </summary>
            <param name="actionContext">The <see cref="T:Microsoft.AspNetCore.Mvc.ActionContext"/>.</param>
            <param name="modelBinder">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder"/>.</param>
            <param name="valueProvider">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider"/>.</param>
            <param name="parameter">The <see cref="T:Microsoft.AspNetCore.Mvc.Abstractions.ParameterDescriptor"/></param>
            <param name="metadata">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/>.</param>
            <param name="value">The initial model value.</param>
            <param name="container">The container for the model.</param>
            <returns>The result of model binding.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.PrefixContainer">
            <summary>
            This is a container for prefix values. It normalizes all the values into dotted-form and then stores
            them in a sorted array. All queries for prefixes are also normalized to dotted-form, and searches
            for ContainsPrefix are done with a binary search.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.PrefixContainer.#ctor(System.Collections.Generic.ICollection{System.String})">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.PrefixContainer"/>.
            </summary>
            <param name="values">The values for the container.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.PrefixContainer.ContainsPrefix(System.String)">
            <summary>
            Checks if a prefix is in the container.
            </summary>
            <param name="prefix">The prefix to check.</param>
            <returns>True if the prefix is present.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.PrefixContainer.GetKeysFromPrefix(System.String)">
            <summary>
            Gets the keys from a prefix.
            </summary>
            <remarks>
            Given "foo.bar", "foo.hello", "something.other", foo[abc].baz and asking for prefix "foo" will return:
            - "bar"/"foo.bar"
            - "hello"/"foo.hello"
            - "abc"/"foo[abc]"
            </remarks>
            <param name="prefix">The prefix to enumerate.</param>
            <returns>The keys for the prefix.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.QueryStringValueProvider">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider"/> adapter for data stored in an <see cref="T:Microsoft.AspNetCore.Http.IQueryCollection"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.QueryStringValueProvider.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource,Microsoft.AspNetCore.Http.IQueryCollection,System.Globalization.CultureInfo)">
            <summary>
            Creates a value provider for <see cref="T:Microsoft.AspNetCore.Http.IQueryCollection"/>.
            </summary>
            <param name="bindingSource">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource"/> for the data.</param>
            <param name="values">The key value pairs to wrap.</param>
            <param name="culture">The culture to return with ValueProviderResult instances.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.QueryStringValueProvider.Culture">
            <summary>
            The culture for the provider.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.QueryStringValueProvider.PrefixContainer">
            <summary>
            The <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.QueryStringValueProvider.PrefixContainer"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.QueryStringValueProvider.ContainsPrefix(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.QueryStringValueProvider.GetKeysFromPrefix(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.QueryStringValueProvider.GetValue(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.QueryStringValueProviderFactory">
            <summary>
            A <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory"/> that creates <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider"/> instances that
            read values from the request query-string.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.QueryStringValueProviderFactory.CreateValueProviderAsync(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderFactoryContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.RouteValueProvider">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider"/> adapter for data stored in an <see cref="T:Microsoft.AspNetCore.Routing.RouteValueDictionary"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.RouteValueProvider.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource,Microsoft.AspNetCore.Routing.RouteValueDictionary)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.RouteValueProvider"/>.
            </summary>
            <param name="bindingSource">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource"/> of the data.</param>
            <param name="values">The values.</param>
            <remarks>Sets <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.RouteValueProvider.Culture"/> to <see cref="P:System.Globalization.CultureInfo.InvariantCulture" />.</remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.RouteValueProvider.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource,Microsoft.AspNetCore.Routing.RouteValueDictionary,System.Globalization.CultureInfo)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.RouteValueProvider"/>.
            </summary>
            <param name="bindingSource">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.BindingSource"/> of the data.</param>
            <param name="values">The values.</param>
            <param name="culture">The culture for route value.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.RouteValueProvider.PrefixContainer">
            <summary>
            The prefix container.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.RouteValueProvider.Culture">
            <summary>
            The culture to use.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.RouteValueProvider.ContainsPrefix(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.RouteValueProvider.GetValue(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.RouteValueProviderFactory">
            <summary>
            A <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory"/> for creating <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.RouteValueProvider"/> instances.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.RouteValueProviderFactory.CreateValueProviderAsync(Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderFactoryContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.SuppressChildValidationMetadataProvider">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IValidationMetadataProvider"/> which configures <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.ValidateChildren"/> to
            <c>false</c> for matching types.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.SuppressChildValidationMetadataProvider.#ctor(System.Type)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.SuppressChildValidationMetadataProvider"/> for the given <paramref name="type"/>.
            </summary>
            <param name="type">
            The <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.SuppressChildValidationMetadataProvider.Type"/>. This <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.SuppressChildValidationMetadataProvider.Type"/> and all assignable values will have
            <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.ValidateChildren"/> set to <c>false</c>.
            </param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.SuppressChildValidationMetadataProvider.#ctor(System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.SuppressChildValidationMetadataProvider"/> for the given <paramref name="fullTypeName"/>.
            </summary>
            <param name="fullTypeName">
            The type full name. This type and all of its subclasses will have
            <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.ValidateChildren"/> set to <c>false</c>.
            </param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.SuppressChildValidationMetadataProvider.Type">
            <summary>
            Gets the <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.SuppressChildValidationMetadataProvider.Type"/> for which to suppress validation of children.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.SuppressChildValidationMetadataProvider.FullTypeName">
            <summary>
            Gets the full name of a type for which to suppress validation of children.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.SuppressChildValidationMetadataProvider.CreateValidationMetadata(Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ValidationMetadataProviderContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeException">
            <summary>
            The <see cref="T:System.Exception"/> that is added to model state when a model binder for the body of the request is
            unable to understand the request content type header.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeException.#ctor(System.String)">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeException"/> with the specified
            exception <paramref name="message"/>.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter">
            <summary>
            A filter that scans for <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeException"/> in the
            <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/> and short-circuits the pipeline
            with an Unsupported Media Type (415) response.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter.Order">
            <summary>
            Gets or sets the filter order. <see cref="P:Microsoft.AspNetCore.Mvc.Filters.IOrderedFilter.Order"/>.
            <para>
            Defaults to <c>-3000</c> to ensure it executes before <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter"/>.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderFactoryExtensions">
            <summary>
            Extension methods for <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderFactoryExtensions.RemoveType``1(System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory})">
            <summary>
            Removes all value provider factories of the specified type.
            </summary>
            <param name="list">The list of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory"/>.</param>
            <typeparam name="TValueProviderFactory">The type to remove.</typeparam>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.ValueProviderFactoryExtensions.RemoveType(System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory},System.Type)">
            <summary>
            Removes all value provider factories of the specified type.
            </summary>
            <param name="list">The list of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory"/>.</param>
            <param name="type">The type to remove.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelMetadataTypeAttribute">
            <summary>
            This attribute specifies the metadata class to associate with a data model class.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelMetadataTypeAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.ModelMetadataTypeAttribute" /> class.
            </summary>
            <param name="type">The type of metadata class that is associated with a data model class.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ModelMetadataTypeAttribute.MetadataType">
            <summary>
            Gets the type of metadata class that is associated with a data model class.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelMetadataTypeAttribute`1">
            <inheritdoc />
            <typeparam name="T">The type of metadata class that is associated with a data model class.</typeparam>
            <remarks>
            This is a derived generic variant of the <see cref="T:Microsoft.AspNetCore.Mvc.ModelMetadataTypeAttribute"/>
            which does not allow multiple instances on a single target.
            Ensure that only one instance of either attribute is provided on the target.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelMetadataTypeAttribute`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.ModelMetadataTypeAttribute" /> class.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.MvcOptions">
            <summary>
            Provides programmatic configuration for the MVC framework.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.MvcOptions.#ctor">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.MvcOptions"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.MvcOptions.EnableEndpointRouting">
            <summary>
            Gets or sets a value that determines if routing should use endpoints internally, or if legacy routing
            logic should be used. Endpoint routing is used to match HTTP requests to MVC actions, and to generate
            URLs with <see cref="T:Microsoft.AspNetCore.Mvc.IUrlHelper"/>.
            </summary>
            <value>
            The default value is <see langword="true"/>.
            </value>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.MvcOptions.AllowEmptyInputInBodyModelBinding">
            <summary>
            Gets or sets the flag which decides whether body model binding (for example, on an
            action method parameter with <see cref="T:Microsoft.AspNetCore.Mvc.FromBodyAttribute"/>) should treat empty
            input as valid. <see langword="false"/> by default.
            </summary>
            <example>
            When <see langword="false"/>, actions that model bind the request body (for example,
            using <see cref="T:Microsoft.AspNetCore.Mvc.FromBodyAttribute"/>) will register an error in the
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/> if the incoming request body is empty.
            </example>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.MvcOptions.CacheProfiles">
            <summary>
            Gets a Dictionary of CacheProfile Names, <see cref="T:Microsoft.AspNetCore.Mvc.CacheProfile"/> which are pre-defined settings for
            response caching.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.MvcOptions.Conventions">
            <summary>
            Gets a list of <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelConvention"/> instances that will be applied to
            the <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel"/> when discovering actions.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.MvcOptions.Filters">
            <summary>
            Gets a collection of <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IFilterMetadata"/> which are used to construct filters that
            apply to all actions.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.MvcOptions.FormatterMappings">
            <summary>
            Used to specify mapping between the URL Format and corresponding media type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.MvcOptions.InputFormatters">
            <summary>
            Gets a list of <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.IInputFormatter"/>s that are used by this application.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.MvcOptions.SuppressImplicitRequiredAttributeForNonNullableReferenceTypes">
            <summary>
            Gets or sets a value that determines if the inference of <see cref="T:System.ComponentModel.DataAnnotations.RequiredAttribute"/> for
            properties and parameters of non-nullable reference types is suppressed. If <c>false</c>
            (the default), then all non-nullable reference types will behave as-if <c>[Required]</c> has
            been applied. If <c>true</c>, this behavior will be suppressed; nullable reference types and
            non-nullable reference types will behave the same for the purposes of validation.
            </summary>
            <remarks>
            <para>
            This option controls whether MVC model binding and validation treats nullable and non-nullable
            reference types differently.
            </para>
            <para>
            By default, MVC will treat a non-nullable reference type parameters and properties as-if
            <c>[Required]</c> has been applied, resulting in validation errors when no value was bound.
            </para>
            <para>
            MVC does not support non-nullable reference type annotations on type arguments and type parameter
            constraints. The framework will not infer any validation attributes for generic-typed properties
            or collection elements.
            </para>
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.MvcOptions.SuppressInputFormatterBuffering">
            <summary>
            Gets or sets a value that determines if buffering is disabled for input formatters that
            synchronously read from the HTTP request body.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.MvcOptions.SuppressOutputFormatterBuffering">
            <summary>
            Gets or sets the flag that determines if buffering is disabled for output formatters that
            synchronously write to the HTTP response body.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.MvcOptions.EnableActionInvokers">
            <summary>
            Gets or sets the flag that determines if MVC should use action invoker extensibility. This will allow
            custom <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.IActionInvokerFactory"/> and <see cref="T:Microsoft.AspNetCore.Mvc.Abstractions.IActionInvokerProvider"/> execute during the request pipeline.
            </summary>
            <remarks>This only applies when <see cref="P:Microsoft.AspNetCore.Mvc.MvcOptions.EnableEndpointRouting"/> is true.</remarks>
            <value>Defaults to <see langword="false" /> indicating that action invokers are unused by default.</value>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.MvcOptions.MaxModelValidationErrors">
            <summary>
            Gets or sets the maximum number of validation errors that are allowed by this application before further
            errors are ignored.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.MvcOptions.ModelBinderProviders">
            <summary>
            Gets a list of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinderProvider"/>s used by this application.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.MvcOptions.ModelBindingMessageProvider">
            <summary>
            Gets the default <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.ModelBindingMessageProvider"/>. Changes here are copied to the
            <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.ModelBindingMessageProvider"/> property of all <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/>
            instances unless overridden in a custom <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IBindingMetadataProvider"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.MvcOptions.ModelMetadataDetailsProviders">
            <summary>
            Gets a list of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IMetadataDetailsProvider"/> instances that will be used to
            create <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/> instances.
            </summary>
            <remarks>
            A provider should implement one or more of the following interfaces, depending on what
            kind of details are provided:
            <ul>
            <li><see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IBindingMetadataProvider"/></li>
            <li><see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IDisplayMetadataProvider"/></li>
            <li><see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Metadata.IValidationMetadataProvider"/></li>
            </ul>
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.MvcOptions.ModelValidatorProviders">
            <summary>
            Gets a list of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IModelValidatorProvider"/>s used by this application.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.MvcOptions.OutputFormatters">
            <summary>
            Gets a list of <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter"/>s that are used by this application.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.MvcOptions.RespectBrowserAcceptHeader">
            <summary>
            Gets or sets the flag which causes content negotiation to ignore Accept header
            when it contains the media type <c>*/*</c>. <see langword="false"/> by default.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.MvcOptions.ReturnHttpNotAcceptable">
            <summary>
            Gets or sets the flag which decides whether an HTTP 406 Not Acceptable response
            will be returned if no formatter has been selected to format the response.
            <see langword="false"/> by default.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.MvcOptions.ValueProviderFactories">
            <summary>
            Gets a list of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProviderFactory"/> used by this application.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.MvcOptions.SslPort">
            <summary>
            Gets or sets the SSL port that is used by this application when <see cref="T:Microsoft.AspNetCore.Mvc.RequireHttpsAttribute"/>
            is used. If not set the port won't be specified in the secured URL e.g. https://localhost/path.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.MvcOptions.RequireHttpsPermanent">
            <summary>
            Gets or sets the default value for the Permanent property of <see cref="T:Microsoft.AspNetCore.Mvc.RequireHttpsAttribute"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.MvcOptions.MaxValidationDepth">
            <summary>
            Gets or sets the maximum depth to constrain the validation visitor when validating. Set to <see langword="null" />
            to disable this feature.
            <para>
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor"/> traverses the object graph of the model being validated. For models
            that are very deep or are infinitely recursive, validation may result in stack overflow.
            </para>
            <para>
            When not <see langword="null"/>, <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor"/> will throw if
            traversing an object exceeds the maximum allowed validation depth.
            </para>
            </summary>
            <value>
            The default value is <c>32</c>.
            </value>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.MvcOptions.ValidateComplexTypesIfChildValidationFails">
            <summary>
            Gets or sets a value that determines whether the validation visitor will perform validation of a complex type
            if validation fails for any of its children.
            <seealso cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ValidationVisitor.ValidateComplexTypesIfChildValidationFails"/>
            </summary>
            <value>
            The default value is <see langword="false"/>.
            </value>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.MvcOptions.SuppressAsyncSuffixInActionNames">
            <summary>
            Gets or sets a value that determines if MVC will remove the suffix "Async" applied to
            controller action names.
            <para>
            <see cref="P:Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor.ActionName"/> is used to construct the route to the action as
            well as in view lookup. When <see langword="true"/>, MVC will trim the suffix "Async" applied
            to action method names.
            For example, the action name for <c>ProductsController.ListProductsAsync</c> will be
            canonicalized as <c>ListProducts.</c>. Consequently, it will be routeable at
            <c>/Products/ListProducts</c> with views looked up at <c>/Views/Products/ListProducts.cshtml</c>.
            </para>
            <para>
            This option does not affect values specified using <see cref="T:Microsoft.AspNetCore.Mvc.ActionNameAttribute"/>.
            </para>
            </summary>
            <value>
            The default value is <see langword="true"/>.
            </value>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.MvcOptions.MaxModelBindingCollectionSize">
            <summary>
            Gets or sets the maximum size of a complex collection to model bind. When this limit is reached, the model
            binding system will throw an <see cref="T:System.InvalidOperationException"/>.
            </summary>
            <remarks>
            <para>
            When binding a collection, some element binders may succeed unconditionally and model binding may run out
            of memory. This limit constrains such unbounded collection growth; it is a safeguard against incorrect
            model binders and models.
            </para>
            <para>
            This limit does not <em>correct</em> the bound model. The <see cref="T:System.InvalidOperationException"/> instead
            informs the developer of an issue in their model or model binder. The developer must correct that issue.
            </para>
            <para>
            This limit does not apply to collections of simple types. When
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinder`1"/> relies entirely on <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IValueProvider"/>s, it cannot
            create collections larger than the available data.
            </para>
            <para>
            A very high value for this option (<c>int.MaxValue</c> for example) effectively removes the limit and is
            not recommended.
            </para>
            </remarks>
            <value>The default value is <c>1024</c>, matching <see cref="F:Microsoft.AspNetCore.WebUtilities.FormReader.DefaultValueCountLimit"/>.</value>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.MvcOptions.MaxModelBindingRecursionDepth">
            <summary>
            Gets or sets the maximum recursion depth of the model binding system. The
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.DefaultModelBindingContext"/> will throw an <see cref="T:System.InvalidOperationException"/> if more than
            this number of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelBinder"/>s are on the stack. That is, an attempt to recurse beyond this
            level will fail.
            </summary>
            <remarks>
            <para>
            For some self-referential models, some binders may succeed unconditionally and model binding may result in
            stack overflow. This limit constrains such unbounded recursion; it is a safeguard against incorrect model
            binders and models. This limit also protects against very deep model type hierarchies lacking
            self-references.
            </para>
            <para>
            This limit does not <em>correct</em> the bound model. The <see cref="T:System.InvalidOperationException"/> instead
            informs the developer of an issue in their model. The developer must correct that issue.
            </para>
            <para>
            A very high value for this option (<c>int.MaxValue</c> for example) effectively removes the limit and is
            not recommended.
            </para>
            </remarks>
            <value>The default value is <c>32</c>, matching the default <see cref="P:Microsoft.AspNetCore.Mvc.MvcOptions.MaxValidationDepth"/> value.</value>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.MvcOptions.MaxIAsyncEnumerableBufferLimit">
            <summary>
            Gets or sets the most number of entries of an <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> that
            that <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor"/> will buffer.
            <para>
            When <see cref="P:Microsoft.AspNetCore.Mvc.ObjectResult.Value" /> is an instance of <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/>,
            <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor"/> will eagerly read the enumeration and add to a synchronous collection
            prior to invoking the selected formatter.
            This property determines the most number of entries that the executor is allowed to buffer.
            </para>
            </summary>
            <value>Defaults to <c>8192</c>.</value>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.NoContentResult">
            <summary>
            A <see cref="T:Microsoft.AspNetCore.Mvc.StatusCodeResult"/> that when executed will produce a 204 No Content response.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.NoContentResult.#ctor">
            <summary>
            Initializes a new <see cref="T:Microsoft.AspNetCore.Mvc.NoContentResult"/> instance.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.NonActionAttribute">
            <summary>
            Indicates that a controller method is not an action method.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.NonControllerAttribute">
            <summary>
            Indicates that the type and any derived types that this attribute is applied to
            is not considered a controller by the default controller discovery mechanism.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.NonViewComponentAttribute">
            <summary>
            Indicates that the type and any derived types that this attribute is applied to
            is not considered a view component by the default view component discovery mechanism.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.NotFoundObjectResult">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ObjectResult"/> that when executed will produce a Not Found (404) response.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.NotFoundObjectResult.#ctor(System.Object)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.NotFoundObjectResult"/> instance.
            </summary>
            <param name="value">The value to format in the entity body.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.NotFoundResult">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.Mvc.StatusCodeResult"/> that when
            executed will produce a Not Found (404) response.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.NotFoundResult.#ctor">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.NotFoundResult"/> instance.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ObjectResult">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ActionResult"/> that on execution will write an object to the response
            using mechanisms provided by the host.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ObjectResult.#ctor(System.Object)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ObjectResult"/> instance with the provided <paramref name="value"/>.
            </summary>
            <param name="value"></param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ObjectResult.Value">
            <summary>
            The object result.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ObjectResult.Formatters">
            <summary>
            The collection of <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.IOutputFormatter"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ObjectResult.ContentTypes">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ObjectResult.DeclaredType">
            <summary>
            Gets or sets the declared type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ObjectResult.StatusCode">
            <summary>
            Gets or sets the HTTP status code.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ObjectResult.ExecuteResultAsync(Microsoft.AspNetCore.Mvc.ActionContext)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ObjectResult.OnFormatting(Microsoft.AspNetCore.Mvc.ActionContext)">
            <summary>
            This method is called before the formatter writes to the output stream.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.OkObjectResult">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ObjectResult"/> that when executed performs content negotiation, formats the entity body, and
            will produce a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status200OK"/> response if negotiation and formatting succeed.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.OkObjectResult.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.OkObjectResult"/> class.
            </summary>
            <param name="value">The content to format into the entity body.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.OkResult">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.StatusCodeResult"/> that when executed will produce an empty
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status200OK"/> response.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.OkResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.OkResult"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.PhysicalFileResult">
            <summary>
            A <see cref="T:Microsoft.AspNetCore.Mvc.FileResult"/> on execution will write a file from disk to the response
            using mechanisms provided by the host.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.PhysicalFileResult.#ctor(System.String,System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.PhysicalFileResult"/> instance with
            the provided <paramref name="fileName"/> and the provided <paramref name="contentType"/>.
            </summary>
            <param name="fileName">The path to the file. The path must be an absolute path.</param>
            <param name="contentType">The Content-Type header of the response.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.PhysicalFileResult.#ctor(System.String,Microsoft.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.PhysicalFileResult"/> instance with
            the provided <paramref name="fileName"/> and the provided <paramref name="contentType"/>.
            </summary>
            <param name="fileName">The path to the file. The path must be an absolute path.</param>
            <param name="contentType">The Content-Type header of the response.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.PhysicalFileResult.FileName">
            <summary>
            Gets or sets the path to the file that will be sent back as the response.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.PhysicalFileResult.ExecuteResultAsync(Microsoft.AspNetCore.Mvc.ActionContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ProducesAttribute">
            <summary>
            A filter that specifies the expected <see cref="T:System.Type"/> the action will return and the supported
            response content types. The <see cref="P:Microsoft.AspNetCore.Mvc.ProducesAttribute.ContentTypes"/> value is used to set
            <see cref="P:Microsoft.AspNetCore.Mvc.ObjectResult.ContentTypes"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ProducesAttribute.#ctor(System.Type)">
            <summary>
            Initializes an instance of <see cref="T:Microsoft.AspNetCore.Mvc.ProducesAttribute"/>.
            </summary>
            <param name="type">The <see cref="P:Microsoft.AspNetCore.Mvc.ProducesAttribute.Type"/> of object that is going to be written in the response.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ProducesAttribute.#ctor(System.String,System.String[])">
            <summary>
            Initializes an instance of <see cref="T:Microsoft.AspNetCore.Mvc.ProducesAttribute"/> with allowed content types.
            </summary>
            <param name="contentType">The allowed content type for a response.</param>
            <param name="additionalContentTypes">Additional allowed content types for a response.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ProducesAttribute.Type">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ProducesAttribute.ContentTypes">
            <summary>
            Gets or sets the supported response content types. Used to set <see cref="P:Microsoft.AspNetCore.Mvc.ObjectResult.ContentTypes"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ProducesAttribute.StatusCode">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ProducesAttribute.Order">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ProducesAttribute.OnResultExecuting(Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ProducesAttribute.OnResultExecuted(Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ProducesAttribute.SetContentTypes(Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ProducesDefaultResponseTypeAttribute">
            <summary>
            A filter that specifies the <see cref="T:System.Type"/> for all HTTP status codes that are not covered by <see cref="T:Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ProducesDefaultResponseTypeAttribute.#ctor">
            <summary>
            Initializes an instance of <see cref="T:Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ProducesDefaultResponseTypeAttribute.#ctor(System.Type)">
            <summary>
            Initializes an instance of <see cref="T:Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute"/>.
            </summary>
            <param name="type">The <see cref="P:Microsoft.AspNetCore.Mvc.ProducesDefaultResponseTypeAttribute.Type"/> of object that is going to be written in the response.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ProducesDefaultResponseTypeAttribute.Type">
            <summary>
            Gets or sets the type of the value returned by an action.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ProducesDefaultResponseTypeAttribute.StatusCode">
            <summary>
            Gets or sets the HTTP status code of the response.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ProducesDefaultResponseTypeAttribute.Microsoft#AspNetCore#Mvc#ApiExplorer#IApiResponseMetadataProvider#SetContentTypes(Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ProducesErrorResponseTypeAttribute">
            <summary>
            Specifies the type returned by default by controllers annotated with <see cref="T:Microsoft.AspNetCore.Mvc.ApiControllerAttribute"/>.
            <para>
            <see cref="P:Microsoft.AspNetCore.Mvc.ProducesErrorResponseTypeAttribute.Type"/> specifies the error model type associated with a <see cref="T:Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute"/>
            for a client error (HTTP Status Code 4xx) when no value is provided. When no value is specified, MVC assumes the
            client error type to be <see cref="T:Microsoft.AspNetCore.Mvc.ProblemDetails"/>, if mapping client errors (<see cref="P:Microsoft.AspNetCore.Mvc.ApiBehaviorOptions.ClientErrorMapping"/>)
            is used.
            </para>
            <para>
            Use this <see cref="T:System.Attribute"/> to configure the default error type if your application uses a custom error type to respond.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ProducesErrorResponseTypeAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ProducesErrorResponseTypeAttribute"/>.
            </summary>
            <param name="type">The error type. Use <see cref="T:System.Void"/> to indicate the absence of a default error type.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ProducesErrorResponseTypeAttribute.Type">
            <summary>
            Gets the default error type.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ProducesAttribute`1">
            <inheritdoc />
            <typeparam name="T">The <see cref="T:System.Type"/> of object that is going to be written in the response.</typeparam>
            <remarks>
            This is a derived generic variant of the <see cref="T:Microsoft.AspNetCore.Mvc.ProducesAttribute"/>.
            Ensure that only one instance of either attribute is provided on the target.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ProducesAttribute`1.#ctor">
            <summary>
            Initializes an instance of <see cref="T:Microsoft.AspNetCore.Mvc.ProducesAttribute"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute">
            <summary>
            A filter that specifies the type of the value and status code returned by the action.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute.#ctor(System.Int32)">
            <summary>
            Initializes an instance of <see cref="T:Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute"/>.
            </summary>
            <param name="statusCode">The HTTP response status code.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute.#ctor(System.Type,System.Int32)">
            <summary>
            Initializes an instance of <see cref="T:Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute"/>.
            </summary>
            <param name="type">The <see cref="P:Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute.Type"/> of object that is going to be written in the response.</param>
            <param name="statusCode">The HTTP response status code.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute.#ctor(System.Type,System.Int32,System.String,System.String[])">
            <summary>
            Initializes an instance of <see cref="T:Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute"/>.
            </summary>
            <param name="type">The <see cref="P:Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute.Type"/> of object that is going to be written in the response.</param>
            <param name="statusCode">The HTTP response status code.</param>
            <param name="contentType">The content type associated with the response.</param>
            <param name="additionalContentTypes">Additional content types supported by the response.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute.Type">
            <summary>
            Gets or sets the type of the value returned by an action.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute.StatusCode">
            <summary>
            Gets or sets the HTTP status code of the response.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute.IsResponseTypeSetByDefault">
             <summary>
             Used to distinguish a `Type` set by default in the constructor versus
             one provided by the user.
            
             When <see langword="false"/>, then <see cref="P:Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute.Type"/> is set by user.
            
             When <see langword="true"/>, then <see cref="P:Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute.Type"/> is set by by
             default in the constructor
             </summary>
             <value></value>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute.Microsoft#AspNetCore#Mvc#ApiExplorer#IApiResponseMetadataProvider#SetContentTypes(Microsoft.AspNetCore.Mvc.Formatters.MediaTypeCollection)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute`1">
            <inheritdoc />
            <typeparam name="T">The <see cref="T:System.Type"/> of object that is going to be written in the response.</typeparam>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute`1.#ctor(System.Int32)">
            <summary>
            Initializes an instance of <see cref="T:Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute"/>.
            </summary>
            <param name="statusCode">The HTTP response status code.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute`1.#ctor(System.Int32,System.String,System.String[])">
            <summary>
            Initializes an instance of <see cref="T:Microsoft.AspNetCore.Mvc.ProducesResponseTypeAttribute"/>.
            </summary>
            <param name="statusCode">The HTTP response status code.</param>
            <param name="contentType">The content type associated with the response.</param>
            <param name="additionalContentTypes">Additional content types supported by the response.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.RedirectResult">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ActionResult"/> that returns a Found (302), Moved Permanently (301), Temporary Redirect (307),
            or Permanent Redirect (308) response with a Location header to the supplied URL.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.RedirectResult.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.RedirectResult"/> class with the values
            provided.
            </summary>
            <param name="url">The local URL to redirect to.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.RedirectResult.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.RedirectResult"/> class with the values
            provided.
            </summary>
            <param name="url">The URL to redirect to.</param>
            <param name="permanent">Specifies whether the redirect should be permanent (301) or temporary (302).</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.RedirectResult.#ctor(System.String,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.RedirectResult"/> class with the values
            provided.
            </summary>
            <param name="url">The URL to redirect to.</param>
            <param name="permanent">Specifies whether the redirect should be permanent (301) or temporary (302).</param>
            <param name="preserveMethod">If set to true, make the temporary redirect (307) or permanent redirect (308) preserve the initial request method.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.RedirectResult.Permanent">
            <summary>
            Gets or sets the value that specifies that the redirect should be permanent if true or temporary if false.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.RedirectResult.PreserveMethod">
            <summary>
            Gets or sets an indication that the redirect preserves the initial request method.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.RedirectResult.Url">
            <summary>
            Gets or sets the URL to redirect to.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.RedirectResult.UrlHelper">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Mvc.IUrlHelper"/> for this result.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.RedirectResult.ExecuteResultAsync(Microsoft.AspNetCore.Mvc.ActionContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.RedirectToActionResult">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ActionResult"/> that returns a Found (302), Moved Permanently (301), Temporary Redirect (307),
            or Permanent Redirect (308) response with a Location header.
            Targets a controller action.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.RedirectToActionResult.#ctor(System.String,System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToActionResult"/> with the values
            provided.
            </summary>
            <param name="actionName">The name of the action to use for generating the URL.</param>
            <param name="controllerName">The name of the controller to use for generating the URL.</param>
            <param name="routeValues">The route data to use for generating the URL.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.RedirectToActionResult.#ctor(System.String,System.String,System.Object,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToActionResult"/> with the values
            provided.
            </summary>
            <param name="actionName">The name of the action to use for generating the URL.</param>
            <param name="controllerName">The name of the controller to use for generating the URL.</param>
            <param name="routeValues">The route data to use for generating the URL.</param>
            <param name="fragment">The fragment to add to the URL.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.RedirectToActionResult.#ctor(System.String,System.String,System.Object,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToActionResult"/> with the values
            provided.
            </summary>
            <param name="actionName">The name of the action to use for generating the URL.</param>
            <param name="controllerName">The name of the controller to use for generating the URL.</param>
            <param name="routeValues">The route data to use for generating the URL.</param>
            <param name="permanent">If set to true, makes the redirect permanent (301). Otherwise a temporary redirect is used (302).</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.RedirectToActionResult.#ctor(System.String,System.String,System.Object,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToActionResult"/> with the values
            provided.
            </summary>
            <param name="actionName">The name of the action to use for generating the URL.</param>
            <param name="controllerName">The name of the controller to use for generating the URL.</param>
            <param name="routeValues">The route data to use for generating the URL.</param>
            <param name="permanent">If set to true, makes the redirect permanent (301). Otherwise a temporary redirect is used (302).</param>
            <param name="preserveMethod">If set to true, make the temporary redirect (307) or permanent redirect (308) preserve the initial request method.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.RedirectToActionResult.#ctor(System.String,System.String,System.Object,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToActionResult"/> with the values
            provided.
            </summary>
            <param name="actionName">The name of the action to use for generating the URL.</param>
            <param name="controllerName">The name of the controller to use for generating the URL.</param>
            <param name="routeValues">The route data to use for generating the URL.</param>
            <param name="permanent">If set to true, makes the redirect permanent (301). Otherwise a temporary redirect is used (302).</param>
            <param name="fragment">The fragment to add to the URL.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.RedirectToActionResult.#ctor(System.String,System.String,System.Object,System.Boolean,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToActionResult"/> with the values
            provided.
            </summary>
            <param name="actionName">The name of the action to use for generating the URL.</param>
            <param name="controllerName">The name of the controller to use for generating the URL.</param>
            <param name="routeValues">The route data to use for generating the URL.</param>
            <param name="permanent">If set to true, makes the redirect permanent (301). Otherwise a temporary redirect is used (302).</param>
            <param name="preserveMethod">If set to true, make the temporary redirect (307) and permanent redirect (308) preserve the initial request method.</param>
            <param name="fragment">The fragment to add to the URL.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.RedirectToActionResult.UrlHelper">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Mvc.IUrlHelper" /> used to generate URLs.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.RedirectToActionResult.ActionName">
            <summary>
            Gets or sets the name of the action to use for generating the URL.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.RedirectToActionResult.ControllerName">
            <summary>
            Gets or sets the name of the controller to use for generating the URL.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.RedirectToActionResult.RouteValues">
            <summary>
            Gets or sets the route data to use for generating the URL.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.RedirectToActionResult.Permanent">
            <summary>
            Gets or sets an indication that the redirect is permanent.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.RedirectToActionResult.PreserveMethod">
            <summary>
            Gets or sets an indication that the redirect preserves the initial request method.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.RedirectToActionResult.Fragment">
            <summary>
            Gets or sets the fragment to add to the URL.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.RedirectToActionResult.ExecuteResultAsync(Microsoft.AspNetCore.Mvc.ActionContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.RedirectToPageResult">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ActionResult"/> that returns a Found (302)
            or Moved Permanently (301) response with a Location header.
            Targets a registered route.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.RedirectToPageResult.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToPageResult"/> with the values
            provided.
            </summary>
            <param name="pageName">The page to redirect to.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.RedirectToPageResult.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToPageResult"/> with the values
            provided.
            </summary>
            <param name="pageName">The page to redirect to.</param>
            <param name="pageHandler">The page handler to redirect to.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.RedirectToPageResult.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToPageResult"/> with the values
            provided.
            </summary>
            <param name="pageName">The page to redirect to.</param>
            <param name="routeValues">The parameters for the route.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.RedirectToPageResult.#ctor(System.String,System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToPageResult"/> with the values
            provided.
            </summary>
            <param name="pageName">The page to redirect to.</param>
            <param name="pageHandler">The page handler to redirect to.</param>
            <param name="routeValues">The parameters for the route.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.RedirectToPageResult.#ctor(System.String,System.String,System.Object,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToPageResult"/> with the values
            provided.
            </summary>
            <param name="pageName">The name of the page.</param>
            <param name="pageHandler">The page handler to redirect to.</param>
            <param name="routeValues">The parameters for the page.</param>
            <param name="permanent">If set to true, makes the redirect permanent (301). Otherwise a temporary redirect is used (302).</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.RedirectToPageResult.#ctor(System.String,System.String,System.Object,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToPageResult"/> with the values provided.
            </summary>
            <param name="pageName">The name of the page.</param>
            <param name="pageHandler">The page handler to redirect to.</param>
            <param name="routeValues">The parameters for the page.</param>
            <param name="permanent">If set to true, makes the redirect permanent (301). Otherwise a temporary redirect is used (302).</param>
            <param name="preserveMethod">If set to true, make the temporary redirect (307) or permanent redirect (308) preserve the initial request method.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.RedirectToPageResult.#ctor(System.String,System.String,System.Object,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToPageResult"/> with the values
            provided.
            </summary>
            <param name="pageName">The name of the page.</param>
            <param name="pageHandler">The page handler to redirect to.</param>
            <param name="routeValues">The parameters for the route.</param>
            <param name="fragment">The fragment to add to the URL.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.RedirectToPageResult.#ctor(System.String,System.String,System.Object,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToPageResult"/> with the values
            provided.
            </summary>
            <param name="pageName">The name of the page.</param>
            <param name="pageHandler">The page handler to redirect to.</param>
            <param name="routeValues">The parameters for the page.</param>
            <param name="permanent">If set to true, makes the redirect permanent (301). Otherwise a temporary redirect is used (302).</param>
            <param name="fragment">The fragment to add to the URL.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.RedirectToPageResult.#ctor(System.String,System.String,System.Object,System.Boolean,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToPageResult"/> with the values
            provided.
            </summary>
            <param name="pageName">The name of the page.</param>
            <param name="pageHandler">The page handler to redirect to.</param>
            <param name="routeValues">The parameters for the page.</param>
            <param name="permanent">If set to true, makes the redirect permanent (301). Otherwise a temporary redirect is used (302).</param>
            <param name="preserveMethod">If set to true, make the temporary redirect (307) or permanent redirect (308) preserve the initial request method.</param>
            <param name="fragment">The fragment to add to the URL.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.RedirectToPageResult.UrlHelper">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Mvc.IUrlHelper" /> used to generate URLs.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.RedirectToPageResult.PageName">
            <summary>
            Gets or sets the name of the page to route to.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.RedirectToPageResult.PageHandler">
            <summary>
            Gets or sets the page handler to redirect to.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.RedirectToPageResult.RouteValues">
            <summary>
            Gets or sets the route data to use for generating the URL.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.RedirectToPageResult.Permanent">
            <summary>
            Gets or sets an indication that the redirect is permanent.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.RedirectToPageResult.PreserveMethod">
            <summary>
            Gets or sets an indication that the redirect preserves the initial request method.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.RedirectToPageResult.Fragment">
            <summary>
            Gets or sets the fragment to add to the URL.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.RedirectToPageResult.Protocol">
            <summary>
            Gets or sets the protocol for the URL, such as "http" or "https".
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.RedirectToPageResult.Host">
            <summary>
            Gets or sets the host name of the URL.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.RedirectToPageResult.ExecuteResultAsync(Microsoft.AspNetCore.Mvc.ActionContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.RedirectToRouteResult">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ActionResult"/> that returns a Found (302), Moved Permanently (301), Temporary Redirect (307),
            or Permanent Redirect (308) response with a Location header.
            Targets a registered route.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.RedirectToRouteResult.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToRouteResult"/> with the values
            provided.
            </summary>
            <param name="routeValues">The parameters for the route.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.RedirectToRouteResult.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToRouteResult"/> with the values
            provided.
            </summary>
            <param name="routeName">The name of the route.</param>
            <param name="routeValues">The parameters for the route.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.RedirectToRouteResult.#ctor(System.String,System.Object,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToRouteResult"/> with the values
            provided.
            </summary>
            <param name="routeName">The name of the route.</param>
            <param name="routeValues">The parameters for the route.</param>
            <param name="permanent">If set to true, makes the redirect permanent (301). Otherwise a temporary redirect is used (302).</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.RedirectToRouteResult.#ctor(System.String,System.Object,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToRouteResult"/> with the values
            provided.
            </summary>
            <param name="routeName">The name of the route.</param>
            <param name="routeValues">The parameters for the route.</param>
            <param name="permanent">If set to true, makes the redirect permanent (301). Otherwise a temporary redirect is used (302).</param>
            <param name="preserveMethod">If set to true, make the temporary redirect (307) or permanent redirect (308) preserve the initial request method.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.RedirectToRouteResult.#ctor(System.String,System.Object,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToRouteResult"/> with the values
            provided.
            </summary>
            <param name="routeName">The name of the route.</param>
            <param name="routeValues">The parameters for the route.</param>
            <param name="fragment">The fragment to add to the URL.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.RedirectToRouteResult.#ctor(System.String,System.Object,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToRouteResult"/> with the values
            provided.
            </summary>
            <param name="routeName">The name of the route.</param>
            <param name="routeValues">The parameters for the route.</param>
            <param name="permanent">If set to true, makes the redirect permanent (301). Otherwise a temporary redirect is used (302).</param>
            <param name="fragment">The fragment to add to the URL.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.RedirectToRouteResult.#ctor(System.String,System.Object,System.Boolean,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.RedirectToRouteResult"/> with the values
            provided.
            </summary>
            <param name="routeName">The name of the route.</param>
            <param name="routeValues">The parameters for the route.</param>
            <param name="permanent">If set to true, makes the redirect permanent (301). Otherwise a temporary redirect is used (302).</param>
            <param name="preserveMethod">If set to true, make the temporary redirect (307) or permanent redirect (308) preserve the initial request method.</param>
            <param name="fragment">The fragment to add to the URL.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.RedirectToRouteResult.UrlHelper">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Mvc.IUrlHelper" /> used to generate URLs.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.RedirectToRouteResult.RouteName">
            <summary>
            Gets or sets the name of the route to use for generating the URL.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.RedirectToRouteResult.RouteValues">
            <summary>
            Gets or sets the route data to use for generating the URL.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.RedirectToRouteResult.Permanent">
            <summary>
            Gets or sets an indication that the redirect is permanent.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.RedirectToRouteResult.PreserveMethod">
            <summary>
            Gets or sets an indication that the redirect preserves the initial request method.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.RedirectToRouteResult.Fragment">
            <summary>
            Gets or sets the fragment to add to the URL.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.RedirectToRouteResult.ExecuteResultAsync(Microsoft.AspNetCore.Mvc.ActionContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.RequestFormLimitsAttribute">
            <summary>
            Sets the specified limits to the <see cref="P:Microsoft.AspNetCore.Http.HttpRequest.Form"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.RequestFormLimitsAttribute.Order">
            <summary>
            Gets the order value for determining the order of execution of filters. Filters execute in
            ascending numeric value of the <see cref="P:Microsoft.AspNetCore.Mvc.RequestFormLimitsAttribute.Order"/> property.
            </summary>
            <remarks>
            <para>
            Filters are executed in an ordering determined by an ascending sort of the <see cref="P:Microsoft.AspNetCore.Mvc.RequestFormLimitsAttribute.Order"/> property.
            </para>
            <para>
            The default Order for this attribute is 900 because it must run before ValidateAntiForgeryTokenAttribute and
            after any filter which does authentication or login in order to allow them to behave as expected (ie Unauthenticated or Redirect instead of 400).
            </para>
            <para>
            Look at <see cref="P:Microsoft.AspNetCore.Mvc.Filters.IOrderedFilter.Order"/> for more detailed info.
            </para>
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.RequestFormLimitsAttribute.IsReusable">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.RequestFormLimitsAttribute.BufferBody">
            <summary>
            Enables full request body buffering. Use this if multiple components need to read the raw stream.
            The default value is false.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.RequestFormLimitsAttribute.MemoryBufferThreshold">
            <summary>
            If <see cref="P:Microsoft.AspNetCore.Mvc.RequestFormLimitsAttribute.BufferBody"/> is enabled, this many bytes of the body will be buffered in memory.
            If this threshold is exceeded then the buffer will be moved to a temp file on disk instead.
            This also applies when buffering individual multipart section bodies.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.RequestFormLimitsAttribute.BufferBodyLengthLimit">
            <summary>
            If <see cref="P:Microsoft.AspNetCore.Mvc.RequestFormLimitsAttribute.BufferBody"/> is enabled, this is the limit for the total number of bytes that will
            be buffered. Forms that exceed this limit will throw an <see cref="T:System.IO.InvalidDataException"/> when parsed.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.RequestFormLimitsAttribute.ValueCountLimit">
            <summary>
            A limit for the number of form entries to allow.
            Forms that exceed this limit will throw an <see cref="T:System.IO.InvalidDataException"/> when parsed.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.RequestFormLimitsAttribute.KeyLengthLimit">
            <summary>
            A limit on the length of individual keys. Forms containing keys that exceed this limit will
            throw an <see cref="T:System.IO.InvalidDataException"/> when parsed.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.RequestFormLimitsAttribute.ValueLengthLimit">
            <summary>
            A limit on the length of individual form values. Forms containing values that exceed this
            limit will throw an <see cref="T:System.IO.InvalidDataException"/> when parsed.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.RequestFormLimitsAttribute.MultipartBoundaryLengthLimit">
            <summary>
            A limit for the length of the boundary identifier. Forms with boundaries that exceed this
            limit will throw an <see cref="T:System.IO.InvalidDataException"/> when parsed.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.RequestFormLimitsAttribute.MultipartHeadersCountLimit">
            <summary>
            A limit for the number of headers to allow in each multipart section. Headers with the same name will
            be combined. Form sections that exceed this limit will throw an <see cref="T:System.IO.InvalidDataException"/>
            when parsed.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.RequestFormLimitsAttribute.MultipartHeadersLengthLimit">
            <summary>
            A limit for the total length of the header keys and values in each multipart section.
            Form sections that exceed this limit will throw an <see cref="T:System.IO.InvalidDataException"/> when parsed.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.RequestFormLimitsAttribute.MultipartBodyLengthLimit">
            <summary>
            A limit for the length of each multipart body. Forms sections that exceed this limit will throw an
            <see cref="T:System.IO.InvalidDataException"/> when parsed.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.RequestFormLimitsAttribute.CreateInstance(System.IServiceProvider)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.RequestSizeLimitAttribute">
            <summary>
            Sets the request body size limit to the specified size.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.RequestSizeLimitAttribute.#ctor(System.Int64)">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.RequestSizeLimitAttribute"/>.
            </summary>
            <param name="bytes">The request body size limit.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.RequestSizeLimitAttribute.Order">
            <summary>
            Gets the order value for determining the order of execution of filters. Filters execute in
            ascending numeric value of the <see cref="P:Microsoft.AspNetCore.Mvc.RequestSizeLimitAttribute.Order"/> property.
            </summary>
            <remarks>
            <para>
            Filters are executed in an ordering determined by an ascending sort of the <see cref="P:Microsoft.AspNetCore.Mvc.RequestSizeLimitAttribute.Order"/> property.
            </para>
            <para>
            The default Order for this attribute is 900 because it must run before ValidateAntiForgeryTokenAttribute and
            after any filter which does authentication or login in order to allow them to behave as expected (ie Unauthenticated or Redirect instead of 400).
            </para>
            <para>
            Look at <see cref="P:Microsoft.AspNetCore.Mvc.Filters.IOrderedFilter.Order"/> for more detailed info.
            </para>
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.RequestSizeLimitAttribute.IsReusable">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.RequestSizeLimitAttribute.CreateInstance(System.IServiceProvider)">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.RequestSizeLimitAttribute.Microsoft#AspNetCore#Http#Metadata#IRequestSizeLimitMetadata#MaxRequestBodySize">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.RequireHttpsAttribute">
            <summary>
            An authorization filter that confirms requests are received over HTTPS.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.RequireHttpsAttribute.Permanent">
            <summary>
            Specifies whether a permanent redirect, <c>301 Moved Permanently</c>,
            should be used instead of a temporary redirect, <c>302 Found</c>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.RequireHttpsAttribute.Order">
            <inheritdoc />
            <value>Default is <c>int.MinValue + 50</c> to run this <see cref="T:Microsoft.AspNetCore.Mvc.Filters.IAuthorizationFilter"/> early.</value>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.RequireHttpsAttribute.OnAuthorization(Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext)">
            <summary>
            Called early in the filter pipeline to confirm request is authorized. Confirms requests are received over
            HTTPS. Takes no action for HTTPS requests. Otherwise if it was a GET request, sets
            <see cref="P:Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext.Result"/> to a result which will redirect the client to the HTTPS
            version of the request URI. Otherwise, sets <see cref="P:Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext.Result"/> to a result
            which will set the status code to <c>403</c> (Forbidden).
            </summary>
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.RequireHttpsAttribute.HandleNonHttpsRequest(Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext)">
            <summary>
            Called from <see cref="M:Microsoft.AspNetCore.Mvc.RequireHttpsAttribute.OnAuthorization(Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext)"/> if the request is not received over HTTPS. Expectation is
            <see cref="P:Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext.Result"/> will not be <c>null</c> after this method returns.
            </summary>
            <param name="filterContext">The <see cref="T:Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext"/> to update.</param>
            <remarks>
            If it was a GET request, default implementation sets <see cref="P:Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext.Result"/> to a
            result which will redirect the client to the HTTPS version of the request URI. Otherwise, default
            implementation sets <see cref="P:Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext.Result"/> to a result which will set the status
            code to <c>403</c> (Forbidden).
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ResponseCacheAttribute">
            <summary>
            Specifies the parameters necessary for setting appropriate headers in response caching.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ResponseCacheAttribute.Duration">
            <summary>
            Gets or sets the duration in seconds for which the response is cached.
            This sets "max-age" in "Cache-control" header.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ResponseCacheAttribute.Location">
            <summary>
            Gets or sets the location where the data from a particular URL must be cached.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ResponseCacheAttribute.NoStore">
            <summary>
            Gets or sets the value which determines whether the data should be stored or not.
            When set to <see langword="true"/>, it sets "Cache-control" header to "no-store".
            Ignores the "Location" parameter for values other than "None".
            Ignores the "duration" parameter.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ResponseCacheAttribute.VaryByHeader">
            <summary>
            Gets or sets the value for the Vary response header.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ResponseCacheAttribute.VaryByQueryKeys">
            <summary>
            Gets or sets the query keys to vary by.
            </summary>
            <remarks>
            <see cref="P:Microsoft.AspNetCore.Mvc.ResponseCacheAttribute.VaryByQueryKeys"/> requires the response cache middleware.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ResponseCacheAttribute.CacheProfileName">
            <summary>
            Gets or sets the value of the cache profile name.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ResponseCacheAttribute.Order">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ResponseCacheAttribute.IsReusable">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ResponseCacheAttribute.GetCacheProfile(Microsoft.AspNetCore.Mvc.MvcOptions)">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Mvc.CacheProfile"/> for this attribute.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ResponseCacheAttribute.CreateInstance(System.IServiceProvider)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ResponseCacheLocation">
            <summary>
            Determines the value for the "Cache-control" header in the response.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.ResponseCacheLocation.Any">
            <summary>
            Cached in both proxies and client.
            Sets "Cache-control" header to "public".
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.ResponseCacheLocation.Client">
            <summary>
            Cached only in the client.
            Sets "Cache-control" header to "private".
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.ResponseCacheLocation.None">
            <summary>
            "Cache-control" and "Pragma" headers are set to "no-cache".
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.RouteAttribute">
            <summary>
            Specifies an attribute route on a controller.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.RouteAttribute.#ctor(System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.RouteAttribute"/> with the given route template.
            </summary>
            <param name="template">The route template. May not be null.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.RouteAttribute.Template">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.RouteAttribute.Order">
            <summary>
            Gets the route order. The order determines the order of route execution. Routes with a lower order
            value are tried first. If an action defines a route by providing an <see cref="T:Microsoft.AspNetCore.Mvc.Routing.IRouteTemplateProvider"/>
            with a non <c>null</c> order, that order is used instead of this value. If neither the action nor the
            controller defines an order, a default value of 0 is used.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.RouteAttribute.Microsoft#AspNetCore#Mvc#Routing#IRouteTemplateProvider#Order">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.RouteAttribute.Name">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Routing.AttributeRoute.GetVirtualPath(Microsoft.AspNetCore.Routing.VirtualPathContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Routing.AttributeRoute.RouteAsync(Microsoft.AspNetCore.Routing.RouteContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Routing.AttributeRouting.CreateAttributeMegaRoute(System.IServiceProvider)">
            <summary>
            Creates an attribute route using the provided services and provided target router.
            </summary>
            <param name="services">The application services.</param>
            <returns>An attribute route.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Routing.DynamicRouteValueTransformer">
             <summary>
             Provides an abstraction for dynamically manipulating route value to select a controller action or page.
             </summary>
             <remarks>
             <para>
             <see cref="T:Microsoft.AspNetCore.Mvc.Routing.DynamicRouteValueTransformer"/> can be used with
             <see cref="M:Microsoft.AspNetCore.Builder.ControllerEndpointRouteBuilderExtensions.MapDynamicControllerRoute``1(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String)" />
             or <c>MapDynamicPageRoute</c> to implement custom logic that selects a controller action or page.
             </para>
             <para>
             The route values returned from a <see cref="M:Microsoft.AspNetCore.Mvc.Routing.DynamicRouteValueTransformer.TransformAsync(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Routing.RouteValueDictionary)"/> implementation
             will be used to select an action based on matching of the route values. All actions that match the route values
             will be considered as candidates, and may be further disambiguated by
             <see cref="M:Microsoft.AspNetCore.Mvc.Routing.DynamicRouteValueTransformer.FilterAsync(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Routing.RouteValueDictionary,System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Http.Endpoint})" /> as well as
             <see cref="T:Microsoft.AspNetCore.Routing.Matching.IEndpointSelectorPolicy" /> implementations such as <see cref="T:Microsoft.AspNetCore.Routing.Matching.HttpMethodMatcherPolicy" />.
             </para>
             <para>
             Operations on a <see cref="T:Microsoft.AspNetCore.Mvc.Routing.DynamicRouteValueTransformer" /> instance will be called for each dynamic endpoint
             in the following sequence:
            
             <list type="bullet">
               <item><description><see cref="P:Microsoft.AspNetCore.Mvc.Routing.DynamicRouteValueTransformer.State" /> is set</description></item>
               <item><description><see cref="M:Microsoft.AspNetCore.Mvc.Routing.DynamicRouteValueTransformer.TransformAsync(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Routing.RouteValueDictionary)"/></description></item>
               <item><description><see cref="M:Microsoft.AspNetCore.Mvc.Routing.DynamicRouteValueTransformer.FilterAsync(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Routing.RouteValueDictionary,System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Http.Endpoint})" /></description></item>
             </list>
            
             Implementations that are registered with the service collection as transient may safely use class
             members to persist state across these operations.
             </para>
             <para>
             Implementations <see cref="T:Microsoft.AspNetCore.Mvc.Routing.DynamicRouteValueTransformer" /> should be registered with the service
             collection as type <see cref="T:Microsoft.AspNetCore.Mvc.Routing.DynamicRouteValueTransformer" />. Implementations can use any service
             lifetime. Implementations that make use of <see cref="P:Microsoft.AspNetCore.Mvc.Routing.DynamicRouteValueTransformer.State" /> must be registered as transient.
             </para>
             </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Routing.DynamicRouteValueTransformer.State">
            <summary>
            Gets or sets a state value. An arbitrary value passed to the transformer from where it was registered.
            </summary>
            <remarks>
            Implementations that make use of <see cref="P:Microsoft.AspNetCore.Mvc.Routing.DynamicRouteValueTransformer.State" /> must be registered as transient with the service
            collection.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Routing.DynamicRouteValueTransformer.TransformAsync(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Routing.RouteValueDictionary)">
            <summary>
            Creates a set of transformed route values that will be used to select an action.
            </summary>
            <param name="httpContext">The <see cref="T:Microsoft.AspNetCore.Http.HttpContext" /> associated with the current request.</param>
            <param name="values">The route values associated with the current match. Implementations should not modify <paramref name="values"/>.</param>
            <returns>Returns a set of new route values, else null to indicate there was no match.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Routing.DynamicRouteValueTransformer.FilterAsync(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Routing.RouteValueDictionary,System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Http.Endpoint})">
            <summary>
            Filters the set of endpoints that were chosen as a result of lookup based on the route values returned by
            <see cref="M:Microsoft.AspNetCore.Mvc.Routing.DynamicRouteValueTransformer.TransformAsync(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Routing.RouteValueDictionary)" />.
            </summary>
            <param name="httpContext">The <see cref="T:Microsoft.AspNetCore.Http.HttpContext" /> associated with the current request.</param>
            <param name="values">The route values returned from <see cref="M:Microsoft.AspNetCore.Mvc.Routing.DynamicRouteValueTransformer.TransformAsync(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Routing.RouteValueDictionary)" />.</param>
            <param name="endpoints">
            The endpoints that were chosen as a result of lookup based on the route values returned by
            <see cref="M:Microsoft.AspNetCore.Mvc.Routing.DynamicRouteValueTransformer.TransformAsync(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Routing.RouteValueDictionary)" />.
            </param>
            <returns>Asynchronously returns a list of endpoints to apply to the matches collection.</returns>
            <remarks>
            <para>
            Implementations of <see cref="M:Microsoft.AspNetCore.Mvc.Routing.DynamicRouteValueTransformer.FilterAsync(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Routing.RouteValueDictionary,System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Http.Endpoint})" /> may further
            refine the list of endpoints chosen based on route value matching by returning a new list of endpoints based on
            <paramref name="endpoints" />.
            </para>
            <para>
            <see cref="M:Microsoft.AspNetCore.Mvc.Routing.DynamicRouteValueTransformer.FilterAsync(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Routing.RouteValueDictionary,System.Collections.Generic.IReadOnlyList{Microsoft.AspNetCore.Http.Endpoint})" /> will not be called in the case
            where zero endpoints were matched based on route values.
            </para>
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Routing.EndpointRoutingUrlHelper">
            <summary>
            An implementation of <see cref="T:Microsoft.AspNetCore.Mvc.IUrlHelper"/> that uses <see cref="T:Microsoft.AspNetCore.Routing.LinkGenerator"/> to build URLs
            for ASP.NET MVC within an application.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Routing.EndpointRoutingUrlHelper.#ctor(Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Routing.LinkGenerator,Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.Mvc.Routing.EndpointRoutingUrlHelper})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.Routing.EndpointRoutingUrlHelper"/> class using the specified
            <paramref name="actionContext"/>.
            </summary>
            <param name="actionContext">The <see cref="T:Microsoft.AspNetCore.Mvc.ActionContext"/> for the current request.</param>
            <param name="linkGenerator">The <see cref="T:Microsoft.AspNetCore.Routing.LinkGenerator"/> used to generate the link.</param>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Routing.EndpointRoutingUrlHelper.Action(Microsoft.AspNetCore.Mvc.Routing.UrlActionContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Routing.EndpointRoutingUrlHelper.RouteUrl(Microsoft.AspNetCore.Mvc.Routing.UrlRouteContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Routing.HttpMethodAttribute">
            <summary>
            Identifies an action that supports a given set of HTTP methods.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Routing.HttpMethodAttribute.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.Routing.HttpMethodAttribute"/> with the given
            set of HTTP methods.
            <param name="httpMethods">The set of supported HTTP methods. May not be null.</param>
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Routing.HttpMethodAttribute.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.Routing.HttpMethodAttribute"/> with the given
            set of HTTP methods an the given route template.
            </summary>
            <param name="httpMethods">The set of supported methods. May not be null.</param>
            <param name="template">The route template.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Routing.HttpMethodAttribute.HttpMethods">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Routing.HttpMethodAttribute.Template">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Routing.HttpMethodAttribute.Order">
            <summary>
            Gets the route order. The order determines the order of route execution. Routes with a lower
            order value are tried first. When a route doesn't specify a value, it gets the value of the
            <see cref="P:Microsoft.AspNetCore.Mvc.RouteAttribute.Order"/> or a default value of 0 if the <see cref="T:Microsoft.AspNetCore.Mvc.RouteAttribute"/>
            doesn't define a value on the controller.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Routing.HttpMethodAttribute.Microsoft#AspNetCore#Mvc#Routing#IRouteTemplateProvider#Order">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Routing.HttpMethodAttribute.Name">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Routing.IActionHttpMethodProvider">
            <summary>
            Interface that exposes a list of http methods that are supported by an provider.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Routing.IActionHttpMethodProvider.HttpMethods">
            <summary>
            The list of http methods this action provider supports.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Routing.IRequestDelegateFactory">
            <summary>
            Internal interfaces that allows us to optimize the request execution path based on ActionDescriptor
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Routing.IRouteTemplateProvider">
            <summary>
            Interface for attributes which can supply a route template for attribute routing.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Routing.IRouteTemplateProvider.Template">
            <summary>
            The route template. May be <see langword="null"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Routing.IRouteTemplateProvider.Order">
            <summary>
            Gets the route order. The order determines the order of route execution. Routes with a lower
            order value are tried first. When a route doesn't specify a value, it gets a default value of 0.
            A null value for the Order property means that the user didn't specify an explicit order for the
            route.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Routing.IRouteTemplateProvider.Name">
            <summary>
            Gets the route name. The route name can be used to generate a link using a specific route, instead
             of relying on selection of a route based on the given set of route values.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Routing.IRouteValueProvider">
             <summary>
             <para>
             A metadata interface which specifies a route value which is required for the action selector to
             choose an action. When applied to an action using attribute routing, the route value will be added
             to the <see cref="P:Microsoft.AspNetCore.Routing.RouteData.Values"/> when the action is selected.
             </para>
             <para>
             When an <see cref="T:Microsoft.AspNetCore.Mvc.Routing.IRouteValueProvider"/> is used to provide a new route value to an action, all
             actions in the application must also have a value associated with that key, or have an implicit value
             of <c>null</c>. See remarks for more details.
             </para>
             </summary>
             <remarks>
             <para>
             The typical scheme for action selection in an MVC application is that an action will require the
             matching values for its <see cref="P:Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor.ControllerName"/> and
             <see cref="P:Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor.ActionName"/>
             </para>
             <example>
             For an action like <c>MyApp.Controllers.HomeController.Index()</c>, in order to be selected, the
             <see cref="P:Microsoft.AspNetCore.Routing.RouteData.Values"/> must contain the values
             {
                 "action": "Index",
                 "controller": "Home"
             }
             </example>
             <para>
             If areas are in use in the application (see <see cref="T:Microsoft.AspNetCore.Mvc.AreaAttribute"/> which implements
             <see cref="T:Microsoft.AspNetCore.Mvc.Routing.IRouteValueProvider"/>) then all actions are consider either in an area by having a
             non-<c>null</c> area value (specified by <see cref="T:Microsoft.AspNetCore.Mvc.AreaAttribute"/> or another
             <see cref="T:Microsoft.AspNetCore.Mvc.Routing.IRouteValueProvider"/>) or are considered 'outside' of areas by having the value <c>null</c>.
             </para>
             <example>
             Consider an application with two controllers, each with an <c>Index</c> action method:
                 - <c>MyApp.Controllers.HomeController.Index()</c>
                 - <c>MyApp.Areas.Blog.Controllers.HomeController.Index()</c>
             where <c>MyApp.Areas.Blog.Controllers.HomeController</c> has an area attribute
             <c>[Area("Blog")]</c>.
            
             For <see cref="P:Microsoft.AspNetCore.Routing.RouteData.Values"/> like:
             {
                 "action": "Index",
                 "controller": "Home"
             }
            
             <c>MyApp.Controllers.HomeController.Index()</c> will be selected.
             <c>MyApp.Area.Blog.Controllers.HomeController.Index()</c> is not considered eligible because the
             <see cref="P:Microsoft.AspNetCore.Routing.RouteData.Values"/> does not contain the value 'Blog' for 'area'.
            
             For <see cref="P:Microsoft.AspNetCore.Routing.RouteData.Values"/> like:
             {
                 "area": "Blog",
                 "action": "Index",
                 "controller": "Home"
             }
            
             <c>MyApp.Area.Blog.Controllers.HomeController.Index()</c> will be selected.
             <c>MyApp.Controllers.HomeController.Index()</c> is not considered eligible because the route values
             contain a value for 'area'. <c>MyApp.Controllers.HomeController.Index()</c> cannot match any value
             for 'area' other than <c>null</c>.
             </example>
             </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Routing.IRouteValueProvider.RouteKey">
            <summary>
            The route value key.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Routing.IRouteValueProvider.RouteValue">
            <summary>
            The route value. If <c>null</c> or empty, requires the route value associated with <see cref="P:Microsoft.AspNetCore.Mvc.Routing.IRouteValueProvider.RouteKey"/>
            to be missing or <c>null</c>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Routing.IUrlHelperFactory">
            <summary>
            A factory for creating <see cref="T:Microsoft.AspNetCore.Mvc.IUrlHelper"/> instances.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Routing.IUrlHelperFactory.GetUrlHelper(Microsoft.AspNetCore.Mvc.ActionContext)">
            <summary>
            Gets an <see cref="T:Microsoft.AspNetCore.Mvc.IUrlHelper"/> for the request associated with <paramref name="context"/>.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.ActionContext"/> associated with the current request.</param>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IUrlHelper"/> for the request associated with <paramref name="context"/></returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Routing.KnownRouteValueConstraint">
            <summary>
            A <see cref="T:Microsoft.AspNetCore.Routing.IRouteConstraint"/> that represents a known route value.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Routing.KnownRouteValueConstraint.#ctor(Microsoft.AspNetCore.Mvc.Infrastructure.IActionDescriptorCollectionProvider)">
            <summary>
            Initializes an instance of <see cref="T:Microsoft.AspNetCore.Mvc.Routing.KnownRouteValueConstraint"/>.
            </summary>
            <param name="actionDescriptorCollectionProvider">The <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.IActionDescriptorCollectionProvider"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Routing.KnownRouteValueConstraint.Match(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Routing.IRouter,System.String,Microsoft.AspNetCore.Routing.RouteValueDictionary,Microsoft.AspNetCore.Routing.RouteDirection)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Routing.NormalizedRouteValue.GetNormalizedRouteValue(Microsoft.AspNetCore.Mvc.ActionContext,System.String)">
            <summary>
            Gets the case-normalized route value for the specified route <paramref name="key"/>.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.ActionContext"/>.</param>
            <param name="key">The route key to lookup.</param>
            <returns>The value corresponding to the key.</returns>
            <remarks>
            The casing of a route value in <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.RouteData"/> is determined by the client.
            This making constructing paths for view locations in a case sensitive file system unreliable. Using the
            <see cref="P:Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor.RouteValues"/> to get route values
            produces consistently cased results.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Routing.RouteValueAttribute">
            <summary>
            <para>
            An attribute which specifies a required route value for an action or controller.
            </para>
            <para>
            When placed on an action, the route data of a request must match the expectations of the required route data
            in order for the action to be selected. All other actions without a route value for the given key cannot be
            selected unless the route data of the request does omits a value matching the key.
            See <see cref="T:Microsoft.AspNetCore.Mvc.Routing.IRouteValueProvider"/> for more details and examples.
            </para>
            <para>
            When placed on a controller, unless overridden by the action, the constraint applies to all
            actions defined by the controller.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Routing.RouteValueAttribute.#ctor(System.String,System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.Routing.RouteValueAttribute"/>.
            </summary>
            <param name="routeKey">The route value key.</param>
            <param name="routeValue">The expected route value.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Routing.RouteValueAttribute.RouteKey">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Routing.RouteValueAttribute.RouteValue">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Routing.UrlHelper">
            <summary>
            An implementation of <see cref="T:Microsoft.AspNetCore.Mvc.IUrlHelper"/> that contains methods to
            build URLs for ASP.NET MVC within an application.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Routing.UrlHelper.#ctor(Microsoft.AspNetCore.Mvc.ActionContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.Routing.UrlHelper"/> class using the specified
            <paramref name="actionContext"/>.
            </summary>
            <param name="actionContext">The <see cref="T:Microsoft.AspNetCore.Mvc.ActionContext"/> for the current request.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Routing.UrlHelper.HttpContext">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/> associated with the current request.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Routing.UrlHelper.Router">
            <summary>
            Gets the top-level <see cref="T:Microsoft.AspNetCore.Routing.IRouter"/> associated with the current request. Generally an
            <see cref="T:Microsoft.AspNetCore.Routing.IRouteCollection"/> implementation.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Routing.UrlHelper.Action(Microsoft.AspNetCore.Mvc.Routing.UrlActionContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Routing.UrlHelper.RouteUrl(Microsoft.AspNetCore.Mvc.Routing.UrlRouteContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Routing.UrlHelper.GetVirtualPathData(System.String,Microsoft.AspNetCore.Routing.RouteValueDictionary)">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Routing.VirtualPathData"/> for the specified <paramref name="routeName"/> and route
            <paramref name="values"/>.
            </summary>
            <param name="routeName">The name of the route that is used to generate the <see cref="T:Microsoft.AspNetCore.Routing.VirtualPathData"/>.
            </param>
            <param name="values">
            The <see cref="T:Microsoft.AspNetCore.Routing.RouteValueDictionary"/>. The <see cref="P:Microsoft.AspNetCore.Mvc.Routing.UrlHelper.Router"/> uses these values, in combination with
            <see cref="P:Microsoft.AspNetCore.Mvc.Routing.UrlHelperBase.AmbientValues"/>, to generate the URL.
            </param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Routing.VirtualPathData"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Routing.UrlHelper.GenerateUrl(System.String,System.String,Microsoft.AspNetCore.Routing.VirtualPathData,System.String)">
            <summary>
            Generates the URL using the specified components.
            </summary>
            <param name="protocol">The protocol for the URL, such as "http" or "https".</param>
            <param name="host">The host name for the URL.</param>
            <param name="pathData">The <see cref="T:Microsoft.AspNetCore.Routing.VirtualPathData"/>.</param>
            <param name="fragment">The fragment for the URL.</param>
            <returns>The generated URL.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Routing.UrlHelperBase">
            <summary>
            An abstraction for <see cref="T:Microsoft.AspNetCore.Mvc.IUrlHelper" />.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Routing.UrlHelperBase.#ctor(Microsoft.AspNetCore.Mvc.ActionContext)">
            <summary>
            Initializes an instance of a <see cref="T:Microsoft.AspNetCore.Mvc.Routing.UrlHelperBase"/>
            </summary>
            <param name="actionContext">The <see cref="P:Microsoft.AspNetCore.Mvc.Routing.UrlHelperBase.ActionContext"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Routing.UrlHelperBase.AmbientValues">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Routing.RouteValueDictionary"/> associated with the current request.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Routing.UrlHelperBase.ActionContext">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Routing.UrlHelperBase.IsLocalUrl(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Routing.UrlHelperBase.Content(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Routing.UrlHelperBase.Link(System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Routing.UrlHelperBase.Action(Microsoft.AspNetCore.Mvc.Routing.UrlActionContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Routing.UrlHelperBase.RouteUrl(Microsoft.AspNetCore.Mvc.Routing.UrlRouteContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Routing.UrlHelperBase.GetValuesDictionary(System.Object)">
            <summary>
            Gets a <see cref="T:Microsoft.AspNetCore.Routing.RouteValueDictionary"/> using the specified values.
            </summary>
            <param name="values">The values to use.</param>
            <returns>A <see cref="T:Microsoft.AspNetCore.Routing.RouteValueDictionary"/> with the specified values.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Routing.UrlHelperBase.GenerateUrl(System.String,System.String,System.String,System.String)">
            <summary>
            Generate a url using the specified values.
            </summary>
            <param name="protocol">The protocol.</param>
            <param name="host">The host.</param>
            <param name="virtualPath">The virtual path.</param>
            <param name="fragment">The fragment.</param>
            <returns>The generated url</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Routing.UrlHelperBase.GenerateUrl(System.String,System.String,System.String)">
            <summary>
            Generates a URI from the provided components.
            </summary>
            <param name="protocol">The URI scheme/protocol.</param>
            <param name="host">The URI host.</param>
            <param name="path">The URI path and remaining portions (path, query, and fragment).</param>
            <returns>
            An absolute URI if the <paramref name="protocol"/> or <paramref name="host"/> is specified, otherwise generates a
            URI with an absolute path.
            </returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Routing.UrlHelperFactory">
            <summary>
            A default implementation of <see cref="T:Microsoft.AspNetCore.Mvc.Routing.IUrlHelperFactory"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Routing.UrlHelperFactory.GetUrlHelper(Microsoft.AspNetCore.Mvc.ActionContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.SerializableError">
            <summary>
            Defines a serializable container for storing ModelState information.
            This information is stored as key/value pairs.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.SerializableError.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.SerializableError"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.SerializableError.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.SerializableError"/>.
            </summary>
            <param name="modelState"><see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/> containing the validation errors.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ServiceFilterAttribute">
            <summary>
            A filter that finds another filter in an <see cref="T:System.IServiceProvider"/>.
            </summary>
            <remarks>
            <para>
            Primarily used in <see cref="M:FilterCollection.AddService"/> calls.
            </para>
            <para>
            Similar to the <see cref="T:Microsoft.AspNetCore.Mvc.TypeFilterAttribute"/> in that both use constructor injection. Use
            <see cref="T:Microsoft.AspNetCore.Mvc.TypeFilterAttribute"/> instead if the filter is not itself a service.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ServiceFilterAttribute.#ctor(System.Type)">
            <summary>
            Instantiates a new <see cref="T:Microsoft.AspNetCore.Mvc.ServiceFilterAttribute"/> instance.
            </summary>
            <param name="type">The <see cref="T:System.Type"/> of filter to find.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ServiceFilterAttribute.Order">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ServiceFilterAttribute.ServiceType">
            <summary>
            Gets the <see cref="T:System.Type"/> of filter to find.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ServiceFilterAttribute.IsReusable">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ServiceFilterAttribute.CreateInstance(System.IServiceProvider)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ServiceFilterAttribute`1">
            <inheritdoc />
            <typeparam name="TFilter">The <see cref="T:System.Type"/> of filter to find.</typeparam>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ServiceFilterAttribute`1.#ctor">
            <summary>
            Instantiates a new <see cref="T:Microsoft.AspNetCore.Mvc.ServiceFilterAttribute"/> instance.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.SignInResult">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ActionResult"/> that on execution invokes <see cref="M:HttpContext.SignInAsync"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.SignInResult.#ctor(System.Security.Claims.ClaimsPrincipal)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.SignInResult"/> with the
            default authentication scheme.
            </summary>
            <param name="principal">The claims principal containing the user claims.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.SignInResult.#ctor(System.String,System.Security.Claims.ClaimsPrincipal)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.SignInResult"/> with the
            specified authentication scheme.
            </summary>
            <param name="authenticationScheme">The authentication scheme to use when signing in the user.</param>
            <param name="principal">The claims principal containing the user claims.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.SignInResult.#ctor(System.Security.Claims.ClaimsPrincipal,Microsoft.AspNetCore.Authentication.AuthenticationProperties)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.SignInResult"/> with the
            default authentication scheme and <paramref name="properties"/>.
            </summary>
            <param name="principal">The claims principal containing the user claims.</param>
            <param name="properties"><see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationProperties"/> used to perform the sign-in operation.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.SignInResult.#ctor(System.String,System.Security.Claims.ClaimsPrincipal,Microsoft.AspNetCore.Authentication.AuthenticationProperties)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.SignInResult"/> with the
            specified authentication scheme and <paramref name="properties"/>.
            </summary>
            <param name="authenticationScheme">The authentication schemes to use when signing in the user.</param>
            <param name="principal">The claims principal containing the user claims.</param>
            <param name="properties"><see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationProperties"/> used to perform the sign-in operation.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.SignInResult.AuthenticationScheme">
            <summary>
            Gets or sets the authentication scheme that is used to perform the sign-in operation.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.SignInResult.Principal">
            <summary>
            Gets or sets the <see cref="T:System.Security.Claims.ClaimsPrincipal"/> containing the user claims.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.SignInResult.Properties">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationProperties"/> used to perform the sign-in operation.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.SignInResult.ExecuteResultAsync(Microsoft.AspNetCore.Mvc.ActionContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.SignOutResult">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ActionResult"/> that on execution invokes <see cref="M:HttpContext.SignOutAsync"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.SignOutResult.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.SignOutResult"/> with the default sign out scheme.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.SignOutResult.#ctor(Microsoft.AspNetCore.Authentication.AuthenticationProperties)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.SignOutResult"/> with the default sign out scheme.
            specified authentication scheme and <paramref name="properties"/>.
            </summary>
            <param name="properties"><see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationProperties"/> used to perform the sign-out operation.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.SignOutResult.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.SignOutResult"/> with the
            specified authentication scheme.
            </summary>
            <param name="authenticationScheme">The authentication scheme to use when signing out the user.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.SignOutResult.#ctor(System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.SignOutResult"/> with the
            specified authentication schemes.
            </summary>
            <param name="authenticationSchemes">The authentication schemes to use when signing out the user.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.SignOutResult.#ctor(System.String,Microsoft.AspNetCore.Authentication.AuthenticationProperties)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.SignOutResult"/> with the
            specified authentication scheme and <paramref name="properties"/>.
            </summary>
            <param name="authenticationScheme">The authentication schemes to use when signing out the user.</param>
            <param name="properties"><see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationProperties"/> used to perform the sign-out operation.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.SignOutResult.#ctor(System.Collections.Generic.IList{System.String},Microsoft.AspNetCore.Authentication.AuthenticationProperties)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.SignOutResult"/> with the
            specified authentication schemes and <paramref name="properties"/>.
            </summary>
            <param name="authenticationSchemes">The authentication scheme to use when signing out the user.</param>
            <param name="properties"><see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationProperties"/> used to perform the sign-out operation.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.SignOutResult.AuthenticationSchemes">
            <summary>
            Gets or sets the authentication schemes that are challenged.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.SignOutResult.Properties">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationProperties"/> used to perform the sign-out operation.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.SignOutResult.ExecuteResultAsync(Microsoft.AspNetCore.Mvc.ActionContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.SignOutResult.Microsoft#AspNetCore#Http#IResult#ExecuteAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.StatusCodeResult">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.Mvc.ActionResult"/> that when executed will
            produce an HTTP response with the given response status code.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.StatusCodeResult.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.StatusCodeResult"/> class
            with the given <paramref name="statusCode"/>.
            </summary>
            <param name="statusCode">The HTTP status code of the response.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.StatusCodeResult.StatusCode">
            <summary>
            Gets the HTTP status code.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.StatusCodeResult.ExecuteResult(Microsoft.AspNetCore.Mvc.ActionContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.TypeFilterAttribute">
            <summary>
            A filter that creates another filter of type <see cref="P:Microsoft.AspNetCore.Mvc.TypeFilterAttribute.ImplementationType"/>, retrieving missing constructor
            arguments from dependency injection if available there.
            </summary>
            <remarks>
            <para>
            Primarily used in <see cref="M:FilterCollection.Add"/> calls.
            </para>
            <para>
            Similar to the <see cref="T:Microsoft.AspNetCore.Mvc.ServiceFilterAttribute"/> in that both use constructor injection. Use
            <see cref="T:Microsoft.AspNetCore.Mvc.ServiceFilterAttribute"/> instead if the filter is itself a service.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.TypeFilterAttribute.#ctor(System.Type)">
            <summary>
            Instantiates a new <see cref="T:Microsoft.AspNetCore.Mvc.TypeFilterAttribute"/> instance.
            </summary>
            <param name="type">The <see cref="T:System.Type"/> of filter to create.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.TypeFilterAttribute.Arguments">
            <summary>
            Gets or sets the non-service arguments to pass to the <see cref="P:Microsoft.AspNetCore.Mvc.TypeFilterAttribute.ImplementationType"/> constructor.
            </summary>
            <remarks>
            Service arguments are found in the dependency injection container i.e. this filter supports constructor
            injection in addition to passing the given <see cref="P:Microsoft.AspNetCore.Mvc.TypeFilterAttribute.Arguments"/>.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.TypeFilterAttribute.ImplementationType">
            <summary>
            Gets the <see cref="T:System.Type"/> of filter to create.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.TypeFilterAttribute.Order">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.TypeFilterAttribute.IsReusable">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.TypeFilterAttribute.CreateInstance(System.IServiceProvider)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.TypeFilterAttribute`1">
            <inheritdoc />
            <typeparam name="TFilter">The <see cref="T:System.Type"/> of filter to create.</typeparam>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.TypeFilterAttribute`1.#ctor">
            <summary>
            Instantiates a new <see cref="T:Microsoft.AspNetCore.Mvc.TypeFilterAttribute"/> instance.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.UnauthorizedObjectResult">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ObjectResult"/> that when executed will produce a Unauthorized (401) response.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.UnauthorizedObjectResult.#ctor(System.Object)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.UnauthorizedObjectResult"/> instance.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.UnauthorizedResult">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.Mvc.UnauthorizedResult"/> that when
            executed will produce an Unauthorized (401) response.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.UnauthorizedResult.#ctor">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.UnauthorizedResult"/> instance.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.UnprocessableEntityObjectResult">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ObjectResult"/> that when executed will produce a Unprocessable Entity (422) response.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.UnprocessableEntityObjectResult.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.UnprocessableEntityObjectResult"/> instance.
            </summary>
            <param name="modelState"><see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/> containing the validation errors.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.UnprocessableEntityObjectResult.#ctor(System.Object)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.UnprocessableEntityObjectResult"/> instance.
            </summary>
            <param name="error">Contains errors to be returned to the client.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.UnprocessableEntityResult">
            <summary>
            A <see cref="T:Microsoft.AspNetCore.Mvc.StatusCodeResult"/> that when
            executed will produce a Unprocessable Entity (422) response.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.UnprocessableEntityResult.#ctor">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.UnprocessableEntityResult"/> instance.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.UnsupportedMediaTypeResult">
            <summary>
            A <see cref="T:Microsoft.AspNetCore.Mvc.StatusCodeResult"/> that when
            executed will produce a UnsupportedMediaType (415) response.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.UnsupportedMediaTypeResult.#ctor">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.UnsupportedMediaTypeResult"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.UrlHelperExtensions">
            <summary>
            Static class for url helper extension methods.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.UrlHelperExtensions.Action(Microsoft.AspNetCore.Mvc.IUrlHelper)">
            <summary>
            Generates a URL with a path for an action method.
            </summary>
            <param name="helper">The <see cref="T:Microsoft.AspNetCore.Mvc.IUrlHelper"/>.</param>
            <returns>The generated URL.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.UrlHelperExtensions.Action(Microsoft.AspNetCore.Mvc.IUrlHelper,System.String)">
            <summary>
            Generates a URL with a path for an action method, which contains the specified
            <paramref name="action"/> name.
            </summary>
            <param name="helper">The <see cref="T:Microsoft.AspNetCore.Mvc.IUrlHelper"/>.</param>
            <param name="action">The name of the action method.</param>
            <returns>The generated URL.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.UrlHelperExtensions.Action(Microsoft.AspNetCore.Mvc.IUrlHelper,System.String,System.Object)">
            <summary>
            Generates a URL with a path for an action method, which contains the specified
            <paramref name="action"/> name and route <paramref name="values"/>.
            </summary>
            <param name="helper">The <see cref="T:Microsoft.AspNetCore.Mvc.IUrlHelper"/>.</param>
            <param name="action">The name of the action method.</param>
            <param name="values">An object that contains route values.</param>
            <returns>The generated URL.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.UrlHelperExtensions.Action(Microsoft.AspNetCore.Mvc.IUrlHelper,System.String,System.String)">
            <summary>
            Generates a URL with a path for an action method, which contains the specified
            <paramref name="action"/> and <paramref name="controller"/> names.
            </summary>
            <param name="helper">The <see cref="T:Microsoft.AspNetCore.Mvc.IUrlHelper"/>.</param>
            <param name="action">The name of the action method.</param>
            <param name="controller">The name of the controller.</param>
            <returns>The generated URL.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.UrlHelperExtensions.Action(Microsoft.AspNetCore.Mvc.IUrlHelper,System.String,System.String,System.Object)">
            <summary>
            Generates a URL with a path for an action method, which contains the specified
            <paramref name="action"/> name, <paramref name="controller"/> name, and route <paramref name="values"/>.
            </summary>
            <param name="helper">The <see cref="T:Microsoft.AspNetCore.Mvc.IUrlHelper"/>.</param>
            <param name="action">The name of the action method.</param>
            <param name="controller">The name of the controller.</param>
            <param name="values">An object that contains route values.</param>
            <returns>The generated URL.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.UrlHelperExtensions.Action(Microsoft.AspNetCore.Mvc.IUrlHelper,System.String,System.String,System.Object,System.String)">
            <summary>
            Generates a URL with a path for an action method, which contains the specified
            <paramref name="action"/> name, <paramref name="controller"/> name, route <paramref name="values"/>, and
            <paramref name="protocol"/> to use. See the remarks section for important security information.
            </summary>
            <param name="helper">The <see cref="T:Microsoft.AspNetCore.Mvc.IUrlHelper"/>.</param>
            <param name="action">The name of the action method.</param>
            <param name="controller">The name of the controller.</param>
            <param name="values">An object that contains route values.</param>
            <param name="protocol">The protocol for the URL, such as "http" or "https".</param>
            <returns>The generated URL.</returns>
            <remarks>
            <para>
            This method uses the value of <see cref="P:Microsoft.AspNetCore.Http.HttpRequest.Host"/> to populate the host section of the generated URI.
            Relying on the value of the current request can allow untrusted input to influence the resulting URI unless
            the <c>Host</c> header has been validated. See the deployment documentation for instructions on how to properly
            validate the <c>Host</c> header in your deployment environment.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.UrlHelperExtensions.Action(Microsoft.AspNetCore.Mvc.IUrlHelper,System.String,System.String,System.Object,System.String,System.String)">
            <summary>
            Generates a URL with a path for an action method, which contains the specified
            <paramref name="action"/> name, <paramref name="controller"/> name, route <paramref name="values"/>,
            <paramref name="protocol"/> to use, and <paramref name="host"/> name.
            Generates an absolute URL if the <paramref name="protocol"/> and <paramref name="host"/> are
            non-<c>null</c>. See the remarks section for important security information.
            </summary>
            <param name="helper">The <see cref="T:Microsoft.AspNetCore.Mvc.IUrlHelper"/>.</param>
            <param name="action">The name of the action method.</param>
            <param name="controller">The name of the controller.</param>
            <param name="values">An object that contains route values.</param>
            <param name="protocol">The protocol for the URL, such as "http" or "https".</param>
            <param name="host">The host name for the URL.</param>
            <returns>The generated URL.</returns>
            <remarks>
            <para>
            The value of <paramref name="host"/> should be a trusted value. Relying on the value of the current request
            can allow untrusted input to influence the resulting URI unless the <c>Host</c> header has been validated.
            See the deployment documentation for instructions on how to properly validate the <c>Host</c> header in
            your deployment environment.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.UrlHelperExtensions.Action(Microsoft.AspNetCore.Mvc.IUrlHelper,System.String,System.String,System.Object,System.String,System.String,System.String)">
            <summary>
            Generates a URL with a path for an action method, which contains the specified
            <paramref name="action"/> name, <paramref name="controller"/> name, route <paramref name="values"/>,
            <paramref name="protocol"/> to use, <paramref name="host"/> name, and <paramref name="fragment"/>.
            Generates an absolute URL if the <paramref name="protocol"/> and <paramref name="host"/> are
            non-<c>null</c>. See the remarks section for important security information.
            </summary>
            <param name="helper">The <see cref="T:Microsoft.AspNetCore.Mvc.IUrlHelper"/>.</param>
            <param name="action">The name of the action method.</param>
            <param name="controller">The name of the controller.</param>
            <param name="values">An object that contains route values.</param>
            <param name="protocol">The protocol for the URL, such as "http" or "https".</param>
            <param name="host">The host name for the URL.</param>
            <param name="fragment">The fragment for the URL.</param>
            <returns>The generated URL.</returns>
            <remarks>
            <para>
            The value of <paramref name="host"/> should be a trusted value. Relying on the value of the current request
            can allow untrusted input to influence the resulting URI unless the <c>Host</c> header has been validated.
            See the deployment documentation for instructions on how to properly validate the <c>Host</c> header in
            your deployment environment.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.UrlHelperExtensions.RouteUrl(Microsoft.AspNetCore.Mvc.IUrlHelper,System.Object)">
            <summary>
            Generates a URL with an absolute path for the specified route <paramref name="values"/>.
            </summary>
            <param name="helper">The <see cref="T:Microsoft.AspNetCore.Mvc.IUrlHelper"/>.</param>
            <param name="values">An object that contains route values.</param>
            <returns>The generated URL.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.UrlHelperExtensions.RouteUrl(Microsoft.AspNetCore.Mvc.IUrlHelper,System.String)">
            <summary>
            Generates a URL with an absolute path for the specified <paramref name="routeName"/>.
            </summary>
            <param name="helper">The <see cref="T:Microsoft.AspNetCore.Mvc.IUrlHelper"/>.</param>
            <param name="routeName">The name of the route that is used to generate URL.</param>
            <returns>The generated URL.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.UrlHelperExtensions.RouteUrl(Microsoft.AspNetCore.Mvc.IUrlHelper,System.String,System.Object)">
            <summary>
            Generates a URL with an absolute path for the specified <paramref name="routeName"/> and route
            <paramref name="values"/>.
            </summary>
            <param name="helper">The <see cref="T:Microsoft.AspNetCore.Mvc.IUrlHelper"/>.</param>
            <param name="routeName">The name of the route that is used to generate URL.</param>
            <param name="values">An object that contains route values.</param>
            <returns>The generated URL.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.UrlHelperExtensions.RouteUrl(Microsoft.AspNetCore.Mvc.IUrlHelper,System.String,System.Object,System.String)">
            <summary>
            Generates a URL with an absolute path for the specified route <paramref name="routeName"/> and route
            <paramref name="values"/>, which contains the specified <paramref name="protocol"/> to use. See the
            remarks section for important security information.
            </summary>
            <param name="helper">The <see cref="T:Microsoft.AspNetCore.Mvc.IUrlHelper"/>.</param>
            <param name="routeName">The name of the route that is used to generate URL.</param>
            <param name="values">An object that contains route values.</param>
            <param name="protocol">The protocol for the URL, such as "http" or "https".</param>
            <returns>The generated URL.</returns>
            <remarks>
            <para>
            This method uses the value of <see cref="P:Microsoft.AspNetCore.Http.HttpRequest.Host"/> to populate the host section of the generated URI.
            Relying on the value of the current request can allow untrusted input to influence the resulting URI unless
            the <c>Host</c> header has been validated. See the deployment documentation for instructions on how to properly
            validate the <c>Host</c> header in your deployment environment.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.UrlHelperExtensions.RouteUrl(Microsoft.AspNetCore.Mvc.IUrlHelper,System.String,System.Object,System.String,System.String)">
            <summary>
            Generates a URL with an absolute path for the specified route <paramref name="routeName"/> and route
            <paramref name="values"/>, which contains the specified <paramref name="protocol"/> to use and
            <paramref name="host"/> name. Generates an absolute URL if
            <see cref="P:Microsoft.AspNetCore.Mvc.Routing.UrlActionContext.Protocol"/> and <see cref="P:Microsoft.AspNetCore.Mvc.Routing.UrlActionContext.Host"/> are non-<c>null</c>.
            See the remarks section for important security information.
            </summary>
            <param name="helper">The <see cref="T:Microsoft.AspNetCore.Mvc.IUrlHelper"/>.</param>
            <param name="routeName">The name of the route that is used to generate URL.</param>
            <param name="values">An object that contains route values.</param>
            <param name="protocol">The protocol for the URL, such as "http" or "https".</param>
            <param name="host">The host name for the URL.</param>
            <returns>The generated URL.</returns>
            <remarks>
            <para>
            The value of <paramref name="host"/> should be a trusted value. Relying on the value of the current request
            can allow untrusted input to influence the resulting URI unless the <c>Host</c> header has been validated.
            See the deployment documentation for instructions on how to properly validate the <c>Host</c> header in
            your deployment environment.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.UrlHelperExtensions.RouteUrl(Microsoft.AspNetCore.Mvc.IUrlHelper,System.String,System.Object,System.String,System.String,System.String)">
            <summary>
            Generates a URL with an absolute path for the specified route <paramref name="routeName"/> and route
            <paramref name="values"/>, which contains the specified <paramref name="protocol"/> to use,
            <paramref name="host"/> name and <paramref name="fragment"/>. Generates an absolute URL if
            <see cref="P:Microsoft.AspNetCore.Mvc.Routing.UrlActionContext.Protocol"/> and <see cref="P:Microsoft.AspNetCore.Mvc.Routing.UrlActionContext.Host"/> are non-<c>null</c>.
            See the remarks section for important security information.
            </summary>
            <param name="helper">The <see cref="T:Microsoft.AspNetCore.Mvc.IUrlHelper"/>.</param>
            <param name="routeName">The name of the route that is used to generate URL.</param>
            <param name="values">An object that contains route values.</param>
            <param name="protocol">The protocol for the URL, such as "http" or "https".</param>
            <param name="host">The host name for the URL.</param>
            <param name="fragment">The fragment for the URL.</param>
            <returns>The generated URL.</returns>
            <remarks>
            <para>
            The value of <paramref name="host"/> should be a trusted value. Relying on the value of the current request
            can allow untrusted input to influence the resulting URI unless the <c>Host</c> header has been validated.
            See the deployment documentation for instructions on how to properly validate the <c>Host</c> header in
            your deployment environment.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.UrlHelperExtensions.Page(Microsoft.AspNetCore.Mvc.IUrlHelper,System.String)">
            <summary>
            Generates a URL with a relative path for the specified <paramref name="pageName"/>.
            </summary>
            <param name="urlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.IUrlHelper"/>.</param>
            <param name="pageName">The page name to generate the url for.</param>
            <returns>The generated URL.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.UrlHelperExtensions.Page(Microsoft.AspNetCore.Mvc.IUrlHelper,System.String,System.String)">
            <summary>
            Generates a URL with a relative path for the specified <paramref name="pageName"/>.
            </summary>
            <param name="urlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.IUrlHelper"/>.</param>
            <param name="pageName">The page name to generate the url for.</param>
            <param name="pageHandler">The handler to generate the url for.</param>
            <returns>The generated URL.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.UrlHelperExtensions.Page(Microsoft.AspNetCore.Mvc.IUrlHelper,System.String,System.Object)">
            <summary>
            Generates a URL with a relative path for the specified <paramref name="pageName"/>.
            </summary>
            <param name="urlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.IUrlHelper"/>.</param>
            <param name="pageName">The page name to generate the url for.</param>
            <param name="values">An object that contains route values.</param>
            <returns>The generated URL.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.UrlHelperExtensions.Page(Microsoft.AspNetCore.Mvc.IUrlHelper,System.String,System.String,System.Object)">
            <summary>
            Generates a URL with a relative path for the specified <paramref name="pageName"/>.
            </summary>
            <param name="urlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.IUrlHelper"/>.</param>
            <param name="pageName">The page name to generate the url for.</param>
            <param name="pageHandler">The handler to generate the url for.</param>
            <param name="values">An object that contains route values.</param>
            <returns>The generated URL.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.UrlHelperExtensions.Page(Microsoft.AspNetCore.Mvc.IUrlHelper,System.String,System.String,System.Object,System.String)">
            <summary>
            Generates a URL with an absolute path for the specified <paramref name="pageName"/>. See the remarks section
            for important security information.
            </summary>
            <param name="urlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.IUrlHelper"/>.</param>
            <param name="pageName">The page name to generate the url for.</param>
            <param name="pageHandler">The handler to generate the url for.</param>
            <param name="values">An object that contains route values.</param>
            <param name="protocol">The protocol for the URL, such as "http" or "https".</param>
            <returns>The generated URL.</returns>
            <remarks>
            <para>
            This method uses the value of <see cref="P:Microsoft.AspNetCore.Http.HttpRequest.Host"/> to populate the host section of the generated URI.
            Relying on the value of the current request can allow untrusted input to influence the resulting URI unless
            the <c>Host</c> header has been validated. See the deployment documentation for instructions on how to properly
            validate the <c>Host</c> header in your deployment environment.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.UrlHelperExtensions.Page(Microsoft.AspNetCore.Mvc.IUrlHelper,System.String,System.String,System.Object,System.String,System.String)">
            <summary>
            Generates a URL with an absolute path for the specified <paramref name="pageName"/>. See the remarks section for
            important security information.
            </summary>
            <param name="urlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.IUrlHelper"/>.</param>
            <param name="pageName">The page name to generate the url for.</param>
            <param name="pageHandler">The handler to generate the url for.</param>
            <param name="values">An object that contains route values.</param>
            <param name="protocol">The protocol for the URL, such as "http" or "https".</param>
            <param name="host">The host name for the URL.</param>
            <returns>The generated URL.</returns>
            <remarks>
            <para>
            The value of <paramref name="host"/> should be a trusted value. Relying on the value of the current request
            can allow untrusted input to influence the resulting URI unless the <c>Host</c> header has been validated.
            See the deployment documentation for instructions on how to properly validate the <c>Host</c> header in
            your deployment environment.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.UrlHelperExtensions.Page(Microsoft.AspNetCore.Mvc.IUrlHelper,System.String,System.String,System.Object,System.String,System.String,System.String)">
            <summary>
            Generates a URL with an absolute path for the specified <paramref name="pageName"/>. See the remarks section for
            important security information.
            </summary>
            <param name="urlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.IUrlHelper"/>.</param>
            <param name="pageName">The page name to generate the url for.</param>
            <param name="pageHandler">The handler to generate the url for.</param>
            <param name="values">An object that contains route values.</param>
            <param name="protocol">The protocol for the URL, such as "http" or "https".</param>
            <param name="host">The host name for the URL.</param>
            <param name="fragment">The fragment for the URL.</param>
            <returns>The generated URL.</returns>
            <remarks>
            <para>
            The value of <paramref name="host"/> should be a trusted value. Relying on the value of the current request
            can allow untrusted input to influence the resulting URI unless the <c>Host</c> header has been validated.
            See the deployment documentation for instructions on how to properly validate the <c>Host</c> header in
            your deployment environment.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.UrlHelperExtensions.ActionLink(Microsoft.AspNetCore.Mvc.IUrlHelper,System.String,System.String,System.Object,System.String,System.String,System.String)">
            <summary>
            Generates an absolute URL for an action method, which contains the specified
            <paramref name="action"/> name, <paramref name="controller"/> name, route <paramref name="values"/>,
            <paramref name="protocol"/> to use, <paramref name="host"/> name, and <paramref name="fragment"/>.
            Generates an absolute URL if the <paramref name="protocol"/> and <paramref name="host"/> are
            non-<c>null</c>. See the remarks section for important security information.
            </summary>
            <param name="helper">The <see cref="T:Microsoft.AspNetCore.Mvc.IUrlHelper"/>.</param>
            <param name="action">The name of the action method. When <see langword="null" />, defaults to the current executing action.</param>
            <param name="controller">The name of the controller. When <see langword="null" />, defaults to the current executing controller.</param>
            <param name="values">An object that contains route values.</param>
            <param name="protocol">The protocol for the URL, such as "http" or "https".</param>
            <param name="host">The host name for the URL.</param>
            <param name="fragment">The fragment for the URL.</param>
            <returns>The generated URL.</returns>
            <remarks>
            <para>
            The value of <paramref name="host"/> should be a trusted value. Relying on the value of the current request
            can allow untrusted input to influence the resulting URI unless the <c>Host</c> header has been validated.
            See the deployment documentation for instructions on how to properly validate the <c>Host</c> header in
            your deployment environment.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.UrlHelperExtensions.PageLink(Microsoft.AspNetCore.Mvc.IUrlHelper,System.String,System.String,System.Object,System.String,System.String,System.String)">
            <summary>
            Generates an absolute URL for a page, which contains the specified
            <paramref name="pageName"/>, <paramref name="pageHandler"/>, route <paramref name="values"/>,
            <paramref name="protocol"/> to use, <paramref name="host"/> name, and <paramref name="fragment"/>.
            Generates an absolute URL if the <paramref name="protocol"/> and <paramref name="host"/> are
            non-<c>null</c>. See the remarks section for important security information.
            </summary>
            <param name="urlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.IUrlHelper"/>.</param>
            <param name="pageName">The page name to generate the url for. When <see langword="null"/>, defaults to the current executing page.</param>
            <param name="pageHandler">The handler to generate the url for. When <see langword="null"/>, defaults to the current executing handler.</param>
            <param name="values">An object that contains route values.</param>
            <param name="protocol">The protocol for the URL, such as "http" or "https".</param>
            <param name="host">The host name for the URL.</param>
            <param name="fragment">The fragment for the URL.</param>
            <returns>The generated URL.</returns>
            <remarks>
            <para>
            The value of <paramref name="host"/> should be a trusted value. Relying on the value of the current request
            can allow untrusted input to influence the resulting URI unless the <c>Host</c> header has been validated.
            See the deployment documentation for instructions on how to properly validate the <c>Host</c> header in
            your deployment environment.
            </para>
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ValidationProblemDetails">
            <summary>
            A <see cref="T:Microsoft.AspNetCore.Mvc.ProblemDetails"/> for validation errors.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ValidationProblemDetails.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ValidationProblemDetails"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ValidationProblemDetails.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ValidationProblemDetails"/> using the specified <paramref name="modelState"/>.
            </summary>
            <param name="modelState"><see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/> containing the validation errors.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ValidationProblemDetails.#ctor(System.Collections.Generic.IDictionary{System.String,System.String[]})">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ValidationProblemDetails"/> using the specified <paramref name="errors"/>.
            </summary>
            <param name="errors">The validation errors.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ValidationProblemDetails.Errors">
            <summary>
            Gets the validation errors associated with this instance of <see cref="T:Microsoft.AspNetCore.Http.HttpValidationProblemDetails"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewFeatures.IKeepTempDataResult">
            <summary>
            A marker interface for <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> types which need to have temp data saved.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.VirtualFileResult">
            <summary>
            A <see cref="T:Microsoft.AspNetCore.Mvc.FileResult" /> that on execution writes the file specified using a virtual path to the response
            using mechanisms provided by the host.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.VirtualFileResult.#ctor(System.String,System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.VirtualFileResult"/> instance with the provided <paramref name="fileName"/>
            and the provided <paramref name="contentType"/>.
            </summary>
            <param name="fileName">The path to the file. The path must be relative/virtual.</param>
            <param name="contentType">The Content-Type header of the response.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.VirtualFileResult.#ctor(System.String,Microsoft.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.VirtualFileResult"/> instance with
            the provided <paramref name="fileName"/> and the
            provided <paramref name="contentType"/>.
            </summary>
            <param name="fileName">The path to the file. The path must be relative/virtual.</param>
            <param name="contentType">The Content-Type header of the response.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.VirtualFileResult.FileName">
            <summary>
            Gets or sets the path to the file that will be sent back as the response.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.VirtualFileResult.FileProvider">
            <summary>
            Gets or sets the <see cref="T:Microsoft.Extensions.FileProviders.IFileProvider"/> used to resolve paths.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.VirtualFileResult.ExecuteResultAsync(Microsoft.AspNetCore.Mvc.ActionContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Builder.ControllerActionEndpointConventionBuilder">
            <summary>
            Builds conventions that will be used for customization of <see cref="T:Microsoft.AspNetCore.Builder.EndpointBuilder"/> instances.
            </summary>
            <remarks>
            This interface is used at application startup to customize endpoints for the application.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Builder.ControllerActionEndpointConventionBuilder.Add(System.Action{Microsoft.AspNetCore.Builder.EndpointBuilder})">
            <summary>
            Adds the specified convention to the builder. Conventions are used to customize <see cref="T:Microsoft.AspNetCore.Builder.EndpointBuilder"/> instances.
            </summary>
            <param name="convention">The convention to add to the builder.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Builder.ControllerActionEndpointConventionBuilder.Finally(System.Action{Microsoft.AspNetCore.Builder.EndpointBuilder})">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Builder.ControllerEndpointRouteBuilderExtensions">
            <summary>
            Contains extension methods for using Controllers with <see cref="T:Microsoft.AspNetCore.Routing.IEndpointRouteBuilder"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Builder.ControllerEndpointRouteBuilderExtensions.MapControllers(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder)">
            <summary>
            Adds endpoints for controller actions to the <see cref="T:Microsoft.AspNetCore.Routing.IEndpointRouteBuilder"/> without specifying any routes.
            </summary>
            <param name="endpoints">The <see cref="T:Microsoft.AspNetCore.Routing.IEndpointRouteBuilder"/>.</param>
            <returns>An <see cref="T:Microsoft.AspNetCore.Builder.ControllerActionEndpointConventionBuilder"/> for endpoints associated with controller actions.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Builder.ControllerEndpointRouteBuilderExtensions.MapDefaultControllerRoute(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder)">
            <summary>
            Adds endpoints for controller actions to the <see cref="T:Microsoft.AspNetCore.Routing.IEndpointRouteBuilder"/> and adds the default route
            <c>{controller=Home}/{action=Index}/{id?}</c>.
            </summary>
            <param name="endpoints">The <see cref="T:Microsoft.AspNetCore.Routing.IEndpointRouteBuilder"/>.</param>
            <returns>
            An <see cref="T:Microsoft.AspNetCore.Builder.ControllerActionEndpointConventionBuilder"/> for endpoints associated with controller actions for this route.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Builder.ControllerEndpointRouteBuilderExtensions.MapControllerRoute(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String,System.String,System.Object,System.Object,System.Object)">
            <summary>
            Adds endpoints for controller actions to the <see cref="T:Microsoft.AspNetCore.Routing.IEndpointRouteBuilder"/> and specifies a route
            with the given <paramref name="name"/>, <paramref name="pattern"/>,
            <paramref name="defaults"/>, <paramref name="constraints"/>, and <paramref name="dataTokens"/>.
            </summary>
            <param name="endpoints">The <see cref="T:Microsoft.AspNetCore.Routing.IEndpointRouteBuilder"/> to add the route to.</param>
            <param name="name">The name of the route.</param>
            <param name="pattern">The URL pattern of the route.</param>
            <param name="defaults">
            An object that contains default values for route parameters. The object's properties represent the
            names and values of the default values.
            </param>
            <param name="constraints">
            An object that contains constraints for the route. The object's properties represent the names and
            values of the constraints.
            </param>
            <param name="dataTokens">
            An object that contains data tokens for the route. The object's properties represent the names and
            values of the data tokens.
            </param>
            <returns>
            An <see cref="T:Microsoft.AspNetCore.Builder.ControllerActionEndpointConventionBuilder"/> for endpoints associated with controller actions for this route.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Builder.ControllerEndpointRouteBuilderExtensions.MapAreaControllerRoute(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String,System.String,System.String,System.Object,System.Object,System.Object)">
            <summary>
            Adds endpoints for controller actions to the <see cref="T:Microsoft.AspNetCore.Routing.IEndpointRouteBuilder"/> and specifies a route
            with the given <paramref name="name"/>, <paramref name="areaName"/>, <paramref name="pattern"/>,
            <paramref name="defaults"/>, <paramref name="constraints"/>, and <paramref name="dataTokens"/>.
            </summary>
            <param name="endpoints">The <see cref="T:Microsoft.AspNetCore.Routing.IEndpointRouteBuilder"/> to add the route to.</param>
            <param name="name">The name of the route.</param>
            <param name="areaName">The area name.</param>
            <param name="pattern">The URL pattern of the route.</param>
            <param name="defaults">
            An object that contains default values for route parameters. The object's properties represent the
            names and values of the default values.
            </param>
            <param name="constraints">
            An object that contains constraints for the route. The object's properties represent the names and
            values of the constraints.
            </param>
            <param name="dataTokens">
            An object that contains data tokens for the route. The object's properties represent the names and
            values of the data tokens.
            </param>
            <returns>
            An <see cref="T:Microsoft.AspNetCore.Builder.ControllerActionEndpointConventionBuilder"/> for endpoints associated with controller actions for this route.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Builder.ControllerEndpointRouteBuilderExtensions.MapFallbackToController(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String,System.String)">
            <summary>
            Adds a specialized <see cref="T:Microsoft.AspNetCore.Routing.RouteEndpoint"/> to the <see cref="T:Microsoft.AspNetCore.Routing.IEndpointRouteBuilder"/> that will match
            requests for non-file-names with the lowest possible priority. The request will be routed to a controller endpoint that
            matches <paramref name="action"/>, and <paramref name="controller"/>.
            </summary>
            <param name="endpoints">The <see cref="T:Microsoft.AspNetCore.Routing.IEndpointRouteBuilder"/> to add the route to.</param>
            <param name="action">The action name.</param>
            <param name="controller">The controller name.</param>
            <remarks>
            <para>
            <see cref="M:Microsoft.AspNetCore.Builder.ControllerEndpointRouteBuilderExtensions.MapFallbackToController(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String,System.String)"/> is intended to handle cases where URL path of
            the request does not contain a file name, and no other endpoint has matched. This is convenient for routing
            requests for dynamic content to a SPA framework, while also allowing requests for non-existent files to
            result in an HTTP 404.
            </para>
            <para>
            <see cref="M:Microsoft.AspNetCore.Builder.ControllerEndpointRouteBuilderExtensions.MapFallbackToController(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String,System.String)"/> registers an endpoint using the pattern
            <c>{*path:nonfile}</c>. The order of the registered endpoint will be <c>int.MaxValue</c>.
            </para>
            <para>
            <see cref="M:Microsoft.AspNetCore.Builder.ControllerEndpointRouteBuilderExtensions.MapFallbackToController(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String,System.String)"/> does not re-execute routing, and will
            not generate route values based on routes defined elsewhere. When using this overload, the <c>path</c> route value
            will be available.
            </para>
            <para>
            <see cref="M:Microsoft.AspNetCore.Builder.ControllerEndpointRouteBuilderExtensions.MapFallbackToController(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String,System.String)"/> does not attempt to disambiguate between
            multiple actions that match the provided <paramref name="action"/> and <paramref name="controller"/>. If multiple
            actions match these values, the result is implementation defined.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Builder.ControllerEndpointRouteBuilderExtensions.MapFallbackToController(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String,System.String,System.String)">
            <summary>
            Adds a specialized <see cref="T:Microsoft.AspNetCore.Routing.RouteEndpoint"/> to the <see cref="T:Microsoft.AspNetCore.Routing.IEndpointRouteBuilder"/> that will match
            requests for non-file-names with the lowest possible priority. The request will be routed to a controller endpoint that
            matches <paramref name="action"/>, and <paramref name="controller"/>.
            </summary>
            <param name="endpoints">The <see cref="T:Microsoft.AspNetCore.Routing.IEndpointRouteBuilder"/> to add the route to.</param>
            <param name="pattern">The route pattern.</param>
            <param name="action">The action name.</param>
            <param name="controller">The controller name.</param>
            <remarks>
            <para>
            <see cref="M:Microsoft.AspNetCore.Builder.ControllerEndpointRouteBuilderExtensions.MapFallbackToController(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String,System.String,System.String)"/> is intended to handle cases
            where URL path of the request does not contain a file name, and no other endpoint has matched. This is convenient
            for routing requests for dynamic content to a SPA framework, while also allowing requests for non-existent files to
            result in an HTTP 404.
            </para>
            <para>
            The order of the registered endpoint will be <c>int.MaxValue</c>.
            </para>
            <para>
            This overload will use the provided <paramref name="pattern"/> verbatim. Use the <c>:nonfile</c> route contraint
            to exclude requests for static files.
            </para>
            <para>
            <see cref="M:Microsoft.AspNetCore.Builder.ControllerEndpointRouteBuilderExtensions.MapFallbackToController(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String,System.String,System.String)"/> does not re-execute routing, and will
            not generate route values based on routes defined elsewhere. When using this overload, the route values provided by matching
            <paramref name="pattern"/> will be available.
            </para>
            <para>
            <see cref="M:Microsoft.AspNetCore.Builder.ControllerEndpointRouteBuilderExtensions.MapFallbackToController(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String,System.String,System.String)"/> does not attempt to disambiguate between
            multiple actions that match the provided <paramref name="action"/> and <paramref name="controller"/>. If multiple
            actions match these values, the result is implementation defined.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Builder.ControllerEndpointRouteBuilderExtensions.MapFallbackToAreaController(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String,System.String,System.String)">
            <summary>
            Adds a specialized <see cref="T:Microsoft.AspNetCore.Routing.RouteEndpoint"/> to the <see cref="T:Microsoft.AspNetCore.Routing.IEndpointRouteBuilder"/> that will match
            requests for non-file-names with the lowest possible priority. The request will be routed to a controller endpoint that
            matches <paramref name="action"/>, <paramref name="controller"/>, and <paramref name="area"/>.
            </summary>
            <param name="endpoints">The <see cref="T:Microsoft.AspNetCore.Routing.IEndpointRouteBuilder"/> to add the route to.</param>
            <param name="action">The action name.</param>
            <param name="controller">The controller name.</param>
            <param name="area">The area name.</param>
            <remarks>
            <para>
            <see cref="M:Microsoft.AspNetCore.Builder.ControllerEndpointRouteBuilderExtensions.MapFallbackToAreaController(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String,System.String,System.String)"/> is intended to handle cases where URL path of
            the request does not contain a file name, and no other endpoint has matched. This is convenient for routing
            requests for dynamic content to a SPA framework, while also allowing requests for non-existent files to
            result in an HTTP 404.
            </para>
            <para>
            <see cref="M:Microsoft.AspNetCore.Builder.ControllerEndpointRouteBuilderExtensions.MapFallbackToAreaController(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String,System.String,System.String)"/> registers an endpoint using the pattern
            <c>{*path:nonfile}</c>. The order of the registered endpoint will be <c>int.MaxValue</c>.
            </para>
            <para>
            <see cref="M:Microsoft.AspNetCore.Builder.ControllerEndpointRouteBuilderExtensions.MapFallbackToAreaController(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String,System.String,System.String)"/> does not re-execute routing, and will
            not generate route values based on routes defined elsewhere. When using this overload, the <c>path</c> route value
            will be available.
            </para>
            <para>
            <see cref="M:Microsoft.AspNetCore.Builder.ControllerEndpointRouteBuilderExtensions.MapFallbackToAreaController(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String,System.String,System.String)"/> does not attempt to disambiguate between
            multiple actions that match the provided <paramref name="action"/>, <paramref name="controller"/>, and <paramref name="area"/>. If multiple
            actions match these values, the result is implementation defined.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Builder.ControllerEndpointRouteBuilderExtensions.MapFallbackToAreaController(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String,System.String,System.String,System.String)">
            <summary>
            Adds a specialized <see cref="T:Microsoft.AspNetCore.Routing.RouteEndpoint"/> to the <see cref="T:Microsoft.AspNetCore.Routing.IEndpointRouteBuilder"/> that will match
            requests for non-file-names with the lowest possible priority. The request will be routed to a controller endpoint that
            matches <paramref name="action"/>, <paramref name="controller"/>, and <paramref name="area"/>.
            </summary>
            <param name="endpoints">The <see cref="T:Microsoft.AspNetCore.Routing.IEndpointRouteBuilder"/> to add the route to.</param>
            <param name="pattern">The route pattern.</param>
            <param name="action">The action name.</param>
            <param name="controller">The controller name.</param>
            <param name="area">The area name.</param>
            <remarks>
            <para>
            <see cref="M:Microsoft.AspNetCore.Builder.ControllerEndpointRouteBuilderExtensions.MapFallbackToAreaController(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String,System.String,System.String,System.String)"/> is intended to handle
            cases where URL path of the request does not contain a file name, and no other endpoint has matched. This is
            convenient for routing requests for dynamic content to a SPA framework, while also allowing requests for non-existent files to
            result in an HTTP 404.
            </para>
            <para>
            The order of the registered endpoint will be <c>int.MaxValue</c>.
            </para>
            <para>
            This overload will use the provided <paramref name="pattern"/> verbatim. Use the <c>:nonfile</c> route contraint
            to exclude requests for static files.
            </para>
            <para>
            <see cref="M:Microsoft.AspNetCore.Builder.ControllerEndpointRouteBuilderExtensions.MapFallbackToAreaController(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String,System.String,System.String,System.String)"/> does not re-execute routing, and will
            not generate route values based on routes defined elsewhere. When using this overload, the route values provided by matching
            <paramref name="pattern"/> will be available.
            </para>
            <para>
            <see cref="M:Microsoft.AspNetCore.Builder.ControllerEndpointRouteBuilderExtensions.MapFallbackToAreaController(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String,System.String,System.String,System.String)"/> does not attempt to disambiguate between
            multiple actions that match the provided <paramref name="action"/>, <paramref name="controller"/>, and <paramref name="area"/>. If multiple
            actions match these values, the result is implementation defined.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Builder.ControllerEndpointRouteBuilderExtensions.MapDynamicControllerRoute``1(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String)">
            <summary>
            Adds a specialized <see cref="T:Microsoft.AspNetCore.Routing.RouteEndpoint"/> to the <see cref="T:Microsoft.AspNetCore.Routing.IEndpointRouteBuilder"/> that will
            attempt to select a controller action using the route values produced by <typeparamref name="TTransformer"/>.
            </summary>
            <param name="endpoints">The <see cref="T:Microsoft.AspNetCore.Routing.IEndpointRouteBuilder"/> to add the route to.</param>
            <param name="pattern">The URL pattern of the route.</param>
            <typeparam name="TTransformer">The type of a <see cref="T:Microsoft.AspNetCore.Mvc.Routing.DynamicRouteValueTransformer"/>.</typeparam>
            <remarks>
            <para>
            This method allows the registration of a <see cref="T:Microsoft.AspNetCore.Routing.RouteEndpoint"/> and <see cref="T:Microsoft.AspNetCore.Mvc.Routing.DynamicRouteValueTransformer"/>
            that combine to dynamically select a controller action using custom logic.
            </para>
            <para>
            The instance of <typeparamref name="TTransformer"/> will be retrieved from the dependency injection container.
            Register <typeparamref name="TTransformer"/> with the desired service lifetime in <c>ConfigureServices</c>.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Builder.ControllerEndpointRouteBuilderExtensions.MapDynamicControllerRoute``1(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String,System.Object)">
            <summary>
            Adds a specialized <see cref="T:Microsoft.AspNetCore.Routing.RouteEndpoint"/> to the <see cref="T:Microsoft.AspNetCore.Routing.IEndpointRouteBuilder"/> that will
            attempt to select a controller action using the route values produced by <typeparamref name="TTransformer"/>.
            </summary>
            <param name="endpoints">The <see cref="T:Microsoft.AspNetCore.Routing.IEndpointRouteBuilder"/> to add the route to.</param>
            <param name="pattern">The URL pattern of the route.</param>
            <param name="state">A state object to provide to the <typeparamref name="TTransformer" /> instance.</param>
            <typeparam name="TTransformer">The type of a <see cref="T:Microsoft.AspNetCore.Mvc.Routing.DynamicRouteValueTransformer"/>.</typeparam>
            <remarks>
            <para>
            This method allows the registration of a <see cref="T:Microsoft.AspNetCore.Routing.RouteEndpoint"/> and <see cref="T:Microsoft.AspNetCore.Mvc.Routing.DynamicRouteValueTransformer"/>
            that combine to dynamically select a controller action using custom logic.
            </para>
            <para>
            The instance of <typeparamref name="TTransformer"/> will be retrieved from the dependency injection container.
            Register <typeparamref name="TTransformer"/> as transient in <c>ConfigureServices</c>. Using the transient lifetime
            is required when using <paramref name="state" />.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Builder.ControllerEndpointRouteBuilderExtensions.MapDynamicControllerRoute``1(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,System.String,System.Object,System.Int32)">
            <summary>
            Adds a specialized <see cref="T:Microsoft.AspNetCore.Routing.RouteEndpoint"/> to the <see cref="T:Microsoft.AspNetCore.Routing.IEndpointRouteBuilder"/> that will
            attempt to select a controller action using the route values produced by <typeparamref name="TTransformer"/>.
            </summary>
            <param name="endpoints">The <see cref="T:Microsoft.AspNetCore.Routing.IEndpointRouteBuilder"/> to add the route to.</param>
            <param name="pattern">The URL pattern of the route.</param>
            <param name="state">A state object to provide to the <typeparamref name="TTransformer" /> instance.</param>
            <param name="order">The matching order for the dynamic route.</param>
            <typeparam name="TTransformer">The type of a <see cref="T:Microsoft.AspNetCore.Mvc.Routing.DynamicRouteValueTransformer"/>.</typeparam>
            <remarks>
            <para>
            This method allows the registration of a <see cref="T:Microsoft.AspNetCore.Routing.RouteEndpoint"/> and <see cref="T:Microsoft.AspNetCore.Mvc.Routing.DynamicRouteValueTransformer"/>
            that combine to dynamically select a controller action using custom logic.
            </para>
            <para>
            The instance of <typeparamref name="TTransformer"/> will be retrieved from the dependency injection container.
            Register <typeparamref name="TTransformer"/> as transient in <c>ConfigureServices</c>. Using the transient lifetime
            is required when using <paramref name="state" />.
            </para>
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.Builder.MvcApplicationBuilderExtensions">
            <summary>
            Extension methods for <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/> to add MVC to the request execution pipeline.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Builder.MvcApplicationBuilderExtensions.UseMvc(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Adds MVC to the <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/> request execution pipeline.
            </summary>
            <param name="app">The <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.</param>
            <returns>A reference to this instance after the operation has completed.</returns>
            <remarks>This method only supports attribute routing. To add conventional routes use
            <see cref="M:Microsoft.AspNetCore.Builder.MvcApplicationBuilderExtensions.UseMvc(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Action{Microsoft.AspNetCore.Routing.IRouteBuilder})"/>.</remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Builder.MvcApplicationBuilderExtensions.UseMvcWithDefaultRoute(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Adds MVC to the <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/> request execution pipeline
            with a default route named 'default' and the following template:
            '{controller=Home}/{action=Index}/{id?}'.
            </summary>
            <param name="app">The <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.</param>
            <returns>A reference to this instance after the operation has completed.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Builder.MvcApplicationBuilderExtensions.UseMvc(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Action{Microsoft.AspNetCore.Routing.IRouteBuilder})">
            <summary>
            Adds MVC to the <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/> request execution pipeline.
            </summary>
            <param name="app">The <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.</param>
            <param name="configureRoutes">A callback to configure MVC routes.</param>
            <returns>A reference to this instance after the operation has completed.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Builder.MvcAreaRouteBuilderExtensions">
            <summary>
            Extension methods for <see cref="T:Microsoft.AspNetCore.Routing.IRouteBuilder"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Builder.MvcAreaRouteBuilderExtensions.MapAreaRoute(Microsoft.AspNetCore.Routing.IRouteBuilder,System.String,System.String,System.String)">
            <summary>
            Adds a route to the <see cref="T:Microsoft.AspNetCore.Routing.IRouteBuilder"/> with the given MVC area with the specified
            <paramref name="name"/>, <paramref name="areaName"/> and <paramref name="template"/>.
            </summary>
            <param name="routeBuilder">The <see cref="T:Microsoft.AspNetCore.Routing.IRouteBuilder"/> to add the route to.</param>
            <param name="name">The name of the route.</param>
            <param name="areaName">The MVC area name.</param>
            <param name="template">The URL pattern of the route.</param>
            <returns>A reference to this instance after the operation has completed.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Builder.MvcAreaRouteBuilderExtensions.MapAreaRoute(Microsoft.AspNetCore.Routing.IRouteBuilder,System.String,System.String,System.String,System.Object)">
            <summary>
            Adds a route to the <see cref="T:Microsoft.AspNetCore.Routing.IRouteBuilder"/> with the given MVC area with the specified
            <paramref name="name"/>, <paramref name="areaName"/>, <paramref name="template"/>, and
            <paramref name="defaults"/>.
            </summary>
            <param name="routeBuilder">The <see cref="T:Microsoft.AspNetCore.Routing.IRouteBuilder"/> to add the route to.</param>
            <param name="name">The name of the route.</param>
            <param name="areaName">The MVC area name.</param>
            <param name="template">The URL pattern of the route.</param>
            <param name="defaults">
            An object that contains default values for route parameters. The object's properties represent the
            names and values of the default values.
            </param>
            <returns>A reference to this instance after the operation has completed.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Builder.MvcAreaRouteBuilderExtensions.MapAreaRoute(Microsoft.AspNetCore.Routing.IRouteBuilder,System.String,System.String,System.String,System.Object,System.Object)">
            <summary>
            Adds a route to the <see cref="T:Microsoft.AspNetCore.Routing.IRouteBuilder"/> with the given MVC area with the specified
            <paramref name="name"/>, <paramref name="areaName"/>, <paramref name="template"/>,
            <paramref name="defaults"/>, and <paramref name="constraints"/>.
            </summary>
            <param name="routeBuilder">The <see cref="T:Microsoft.AspNetCore.Routing.IRouteBuilder"/> to add the route to.</param>
            <param name="name">The name of the route.</param>
            <param name="areaName">The MVC area name.</param>
            <param name="template">The URL pattern of the route.</param>
            <param name="defaults">
            An object that contains default values for route parameters. The object's properties represent the
            names and values of the default values.
            </param>
            <param name="constraints">
            An object that contains constraints for the route. The object's properties represent the names and
            values of the constraints.
            </param>
            <returns>A reference to this instance after the operation has completed.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Builder.MvcAreaRouteBuilderExtensions.MapAreaRoute(Microsoft.AspNetCore.Routing.IRouteBuilder,System.String,System.String,System.String,System.Object,System.Object,System.Object)">
            <summary>
            Adds a route to the <see cref="T:Microsoft.AspNetCore.Routing.IRouteBuilder"/> with the given MVC area with the specified
            <paramref name="name"/>, <paramref name="areaName"/>, <paramref name="template"/>,
            <paramref name="defaults"/>, <paramref name="constraints"/>, and <paramref name="dataTokens"/>.
            </summary>
            <param name="routeBuilder">The <see cref="T:Microsoft.AspNetCore.Routing.IRouteBuilder"/> to add the route to.</param>
            <param name="name">The name of the route.</param>
            <param name="areaName">The MVC area name.</param>
            <param name="template">The URL pattern of the route.</param>
            <param name="defaults">
            An object that contains default values for route parameters. The object's properties represent the
            names and values of the default values.
            </param>
            <param name="constraints">
            An object that contains constraints for the route. The object's properties represent the names and
            values of the constraints.
            </param>
            <param name="dataTokens">
            An object that contains data tokens for the route. The object's properties represent the names and
            values of the data tokens.
            </param>
            <returns>A reference to this instance after the operation has completed.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Routing.ControllerLinkGeneratorExtensions">
            <summary>
            Extension methods for using <see cref="T:Microsoft.AspNetCore.Routing.LinkGenerator"/> to generate links to MVC controllers.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Routing.ControllerLinkGeneratorExtensions.GetPathByAction(Microsoft.AspNetCore.Routing.LinkGenerator,Microsoft.AspNetCore.Http.HttpContext,System.String,System.String,System.Object,System.Nullable{Microsoft.AspNetCore.Http.PathString},Microsoft.AspNetCore.Http.FragmentString,Microsoft.AspNetCore.Routing.LinkOptions)">
            <summary>
            Generates a URI with an absolute path based on the provided values.
            </summary>
            <param name="generator">The <see cref="T:Microsoft.AspNetCore.Routing.LinkGenerator"/>.</param>
            <param name="httpContext">The <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/> associated with the current request.</param>
            <param name="action">
            The action name. Used to resolve endpoints. Optional. If <c>null</c> is provided, the current action route value
            will be used.
            </param>
            <param name="controller">
            The controller name. Used to resolve endpoints. Optional. If <c>null</c> is provided, the current controller route value
            will be used.
            </param>
            <param name="values">The route values. Optional. Used to resolve endpoints and expand parameters in the route template.</param>
            <param name="pathBase">
            An optional URI path base. Prepended to the path in the resulting URI. If not provided, the value of <see cref="P:Microsoft.AspNetCore.Http.HttpRequest.PathBase"/> will be used.
            </param>
            <param name="fragment">A URI fragment. Optional. Appended to the resulting URI.</param>
            <param name="options">
            An optional <see cref="T:Microsoft.AspNetCore.Routing.LinkOptions"/>. Settings on provided object override the settings with matching
            names from <c>RouteOptions</c>.
            </param>
            <returns>A URI with an absolute path, or <c>null</c> if a URI cannot be created.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Routing.ControllerLinkGeneratorExtensions.GetPathByAction(Microsoft.AspNetCore.Routing.LinkGenerator,System.String,System.String,System.Object,Microsoft.AspNetCore.Http.PathString,Microsoft.AspNetCore.Http.FragmentString,Microsoft.AspNetCore.Routing.LinkOptions)">
            <summary>
            Generates a URI with an absolute path based on the provided values.
            </summary>
            <param name="generator">The <see cref="T:Microsoft.AspNetCore.Routing.LinkGenerator"/>.</param>
            <param name="action">The action name. Used to resolve endpoints.</param>
            <param name="controller">The controller name. Used to resolve endpoints.</param>
            <param name="values">The route values. Optional. Used to resolve endpoints and expand parameters in the route template.</param>
            <param name="pathBase">An optional URI path base. Prepended to the path in the resulting URI.</param>
            <param name="fragment">A URI fragment. Optional. Appended to the resulting URI.</param>
            <param name="options">
            An optional <see cref="T:Microsoft.AspNetCore.Routing.LinkOptions"/>. Settings on provided object override the settings with matching
            names from <c>RouteOptions</c>.
            </param>
            <returns>A URI with an absolute path, or <c>null</c> if a URI cannot be created.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Routing.ControllerLinkGeneratorExtensions.GetUriByAction(Microsoft.AspNetCore.Routing.LinkGenerator,Microsoft.AspNetCore.Http.HttpContext,System.String,System.String,System.Object,System.String,System.Nullable{Microsoft.AspNetCore.Http.HostString},System.Nullable{Microsoft.AspNetCore.Http.PathString},Microsoft.AspNetCore.Http.FragmentString,Microsoft.AspNetCore.Routing.LinkOptions)">
            <summary>
            Generates an absolute URI based on the provided values.
            </summary>
            <param name="generator">The <see cref="T:Microsoft.AspNetCore.Routing.LinkGenerator"/>.</param>
            <param name="httpContext">The <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/> associated with the current request.</param>
            <param name="action">
            The action name. Used to resolve endpoints. Optional. If <c>null</c> is provided, the current action route value
            will be used.
            </param>
            <param name="controller">
            The controller name. Used to resolve endpoints. Optional. If <c>null</c> is provided, the current controller route value
            will be used.
            </param>
            <param name="values">The route values. Optional. Used to resolve endpoints and expand parameters in the route template.</param>
            <param name="scheme">
            The URI scheme, applied to the resulting URI. Optional. If not provided, the value of <see cref="P:Microsoft.AspNetCore.Http.HttpRequest.Scheme"/> will be used.
            </param>
            <param name="host">
            The URI host/authority, applied to the resulting URI. Optional. If not provided, the value <see cref="P:Microsoft.AspNetCore.Http.HttpRequest.Host"/> will be used.
            </param>
            <param name="pathBase">
            An optional URI path base. Prepended to the path in the resulting URI. If not provided, the value of <see cref="P:Microsoft.AspNetCore.Http.HttpRequest.PathBase"/> will be used.
            </param>
            <param name="fragment">A URI fragment. Optional. Appended to the resulting URI.</param>
            <param name="options">
            An optional <see cref="T:Microsoft.AspNetCore.Routing.LinkOptions"/>. Settings on provided object override the settings with matching
            names from <c>RouteOptions</c>.
            </param>
            <returns>A absolute URI, or <c>null</c> if a URI cannot be created.</returns>
            <remarks>
            <para>
            The value of <paramref name="host" /> should be a trusted value. Relying on the value of the current request
            can allow untrusted input to influence the resulting URI unless the <c>Host</c> header has been validated.
            See the deployment documentation for instructions on how to properly validate the <c>Host</c> header in
            your deployment environment.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Routing.ControllerLinkGeneratorExtensions.GetUriByAction(Microsoft.AspNetCore.Routing.LinkGenerator,System.String,System.String,System.Object,System.String,Microsoft.AspNetCore.Http.HostString,Microsoft.AspNetCore.Http.PathString,Microsoft.AspNetCore.Http.FragmentString,Microsoft.AspNetCore.Routing.LinkOptions)">
            <summary>
            Generates an absolute URI based on the provided values.
            </summary>
            <param name="generator">The <see cref="T:Microsoft.AspNetCore.Routing.LinkGenerator"/>.</param>
            <param name="action">The action name. Used to resolve endpoints.</param>
            <param name="controller">The controller name. Used to resolve endpoints.</param>
            <param name="values">The route values. May be null. Used to resolve endpoints and expand parameters in the route template.</param>
            <param name="scheme">The URI scheme, applied to the resulting URI.</param>
            <param name="host">The URI host/authority, applied to the resulting URI.</param>
            <param name="pathBase">An optional URI path base. Prepended to the path in the resulting URI.</param>
            <param name="fragment">A URI fragment. Optional. Appended to the resulting URI.</param>
            <param name="options">
            An optional <see cref="T:Microsoft.AspNetCore.Routing.LinkOptions"/>. Settings on provided object override the settings with matching
            names from <c>RouteOptions</c>.
            </param>
            <returns>A absolute URI, or <c>null</c> if a URI cannot be created.</returns>
            <remarks>
            <para>
            The value of <paramref name="host" /> should be a trusted value. Relying on the value of the current request
            can allow untrusted input to influence the resulting URI unless the <c>Host</c> header has been validated.
            See the deployment documentation for instructions on how to properly validate the <c>Host</c> header in
            your deployment environment.
            </para>
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.Routing.PageLinkGeneratorExtensions">
            <summary>
            Extension methods for using <see cref="T:Microsoft.AspNetCore.Routing.LinkGenerator"/> to generate links to Razor Pages.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Routing.PageLinkGeneratorExtensions.GetPathByPage(Microsoft.AspNetCore.Routing.LinkGenerator,Microsoft.AspNetCore.Http.HttpContext,System.String,System.String,System.Object,System.Nullable{Microsoft.AspNetCore.Http.PathString},Microsoft.AspNetCore.Http.FragmentString,Microsoft.AspNetCore.Routing.LinkOptions)">
            <summary>
            Generates a URI with an absolute path based on the provided values.
            </summary>
            <param name="generator">The <see cref="T:Microsoft.AspNetCore.Routing.LinkGenerator"/>.</param>
            <param name="httpContext">The <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/> associated with the current request.</param>
            <param name="page">
            The page name. Used to resolve endpoints. Optional. If <c>null</c> is provided, the current page route value
            will be used.
            </param>
            <param name="handler">
            The page handler name. Used to resolve endpoints. Optional.
            </param>
            <param name="values">The route values. Optional. Used to resolve endpoints and expand parameters in the route template.</param>
            <param name="pathBase">
            An optional URI path base. Prepended to the path in the resulting URI. If not provided, the value of <see cref="P:Microsoft.AspNetCore.Http.HttpRequest.PathBase"/> will be used.
            </param>
            <param name="fragment">A URI fragment. Optional. Appended to the resulting URI.</param>
            <param name="options">
            An optional <see cref="T:Microsoft.AspNetCore.Routing.LinkOptions"/>. Settings on provided object override the settings with matching
            names from <c>RouteOptions</c>.
            </param>
            <returns>A URI with an absolute path, or <c>null</c> if a URI cannot be created.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Routing.PageLinkGeneratorExtensions.GetPathByPage(Microsoft.AspNetCore.Routing.LinkGenerator,System.String,System.String,System.Object,Microsoft.AspNetCore.Http.PathString,Microsoft.AspNetCore.Http.FragmentString,Microsoft.AspNetCore.Routing.LinkOptions)">
            <summary>
            Generates a URI with an absolute path based on the provided values.
            </summary>
            <param name="generator">The <see cref="T:Microsoft.AspNetCore.Routing.LinkGenerator"/>.</param>
            <param name="page">
            The page name. Used to resolve endpoints.
            </param>
            <param name="handler">
            The page handler name. Used to resolve endpoints. Optional.
            </param>
            <param name="values">The route values. Optional. Used to resolve endpoints and expand parameters in the route template.</param>
            <param name="pathBase">An optional URI path base. Prepended to the path in the resulting URI.</param>
            <param name="fragment">A URI fragment. Optional. Appended to the resulting URI.</param>
            <param name="options">
            An optional <see cref="T:Microsoft.AspNetCore.Routing.LinkOptions"/>. Settings on provided object override the settings with matching
            names from <c>RouteOptions</c>.
            </param>
            <returns>A URI with an absolute path, or <c>null</c> if a URI cannot be created.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Routing.PageLinkGeneratorExtensions.GetUriByPage(Microsoft.AspNetCore.Routing.LinkGenerator,Microsoft.AspNetCore.Http.HttpContext,System.String,System.String,System.Object,System.String,System.Nullable{Microsoft.AspNetCore.Http.HostString},System.Nullable{Microsoft.AspNetCore.Http.PathString},Microsoft.AspNetCore.Http.FragmentString,Microsoft.AspNetCore.Routing.LinkOptions)">
            <summary>
            Generates an absolute URI based on the provided values.
            </summary>
            <param name="generator">The <see cref="T:Microsoft.AspNetCore.Routing.LinkGenerator"/>.</param>
            <param name="httpContext">The <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/> associated with the current request.</param>
            <param name="page">
            The page name. Used to resolve endpoints. Optional. If <c>null</c> is provided, the current page route value
            will be used.
            </param>
            <param name="handler">
            The page handler name. Used to resolve endpoints. Optional.
            </param>
            <param name="values">The route values. Optional. Used to resolve endpoints and expand parameters in the route template.</param>
            <param name="scheme">
            The URI scheme, applied to the resulting URI. Optional. If not provided, the value of <see cref="P:Microsoft.AspNetCore.Http.HttpRequest.Scheme"/> will be used.
            </param>
            <param name="host">
            The URI host/authority, applied to the resulting URI. Optional. If not provided, the value <see cref="P:Microsoft.AspNetCore.Http.HttpRequest.Host"/> will be used.
            </param>
            <param name="pathBase">
            An optional URI path base. Prepended to the path in the resulting URI. If not provided, the value of <see cref="P:Microsoft.AspNetCore.Http.HttpRequest.PathBase"/> will be used.
            </param>
            <param name="fragment">A URI fragment. Optional. Appended to the resulting URI.</param>
            <param name="options">
            An optional <see cref="T:Microsoft.AspNetCore.Routing.LinkOptions"/>. Settings on provided object override the settings with matching
            names from <c>RouteOptions</c>.
            </param>
            <returns>A absolute URI, or <c>null</c> if a URI cannot be created.</returns>
            <remarks>
            <para>
            The value of <paramref name="host" /> should be a trusted value. Relying on the value of the current request
            can allow untrusted input to influence the resulting URI unless the <c>Host</c> header has been validated.
            See the deployment documentation for instructions on how to properly validate the <c>Host</c> header in
            your deployment environment.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Routing.PageLinkGeneratorExtensions.GetUriByPage(Microsoft.AspNetCore.Routing.LinkGenerator,System.String,System.String,System.Object,System.String,Microsoft.AspNetCore.Http.HostString,Microsoft.AspNetCore.Http.PathString,Microsoft.AspNetCore.Http.FragmentString,Microsoft.AspNetCore.Routing.LinkOptions)">
            <summary>
            Generates an absolute URI based on the provided values.
            </summary>
            <param name="generator">The <see cref="T:Microsoft.AspNetCore.Routing.LinkGenerator"/>.</param>
            <param name="page">The page name. Used to resolve endpoints.</param>
            <param name="handler">The page handler name. May be null.</param>
            <param name="values">The route values. May be null. Used to resolve endpoints and expand parameters in the route template.</param>
            <param name="scheme">The URI scheme, applied to the resulting URI.</param>
            <param name="host">The URI host/authority, applied to the resulting URI.</param>
            <param name="pathBase">An optional URI path base. Prepended to the path in the resulting URI.</param>
            <param name="fragment">A URI fragment. Optional. Appended to the resulting URI.</param>
            <param name="options">
            An optional <see cref="T:Microsoft.AspNetCore.Routing.LinkOptions"/>. Settings on provided object override the settings with matching
            names from <c>RouteOptions</c>.
            </param>
            <returns>A absolute URI, or <c>null</c> if a URI cannot be created.</returns>
            <remarks>
            <para>
            The value of <paramref name="host" /> should be a trusted value. Relying on the value of the current request
            can allow untrusted input to influence the resulting URI unless the <c>Host</c> header has been validated.
            See the deployment documentation for instructions on how to properly validate the <c>Host</c> header in
            your deployment environment.
            </para>
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.Internal.ChunkingCookieManager">
            <summary>
            This handles cookies that are limited by per cookie length. It breaks down long cookies for responses, and reassembles them
            from requests.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Internal.ChunkingCookieManager.DefaultChunkSize">
            <summary>
            The default maximum size of characters in a cookie to send back to the client.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Internal.ChunkingCookieManager.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Internal.ChunkingCookieManager"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Internal.ChunkingCookieManager.ChunkSize">
             <summary>
             The maximum size of cookie to send back to the client. If a cookie exceeds this size it will be broken down into multiple
             cookies. Set this value to null to disable this behavior. The default is 4050 characters, which is supported by all
             common browsers.
            
             Note that browsers may also have limits on the total size of all cookies per domain, and on the number of cookies per domain.
             </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Internal.ChunkingCookieManager.ThrowForPartialCookies">
            <summary>
            Throw if not all chunks of a cookie are available on a request for re-assembly.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Internal.ChunkingCookieManager.GetRequestCookie(Microsoft.AspNetCore.Http.HttpContext,System.String)">
            <summary>
            Get the reassembled cookie. Non chunked cookies are returned normally.
            Cookies with missing chunks just have their "chunks-XX" header returned.
            </summary>
            <param name="context"></param>
            <param name="key"></param>
            <returns>The reassembled cookie, if any, or null.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Internal.ChunkingCookieManager.AppendResponseCookie(Microsoft.AspNetCore.Http.HttpContext,System.String,System.String,Microsoft.AspNetCore.Http.CookieOptions)">
            <summary>
            Appends a new response cookie to the Set-Cookie header. If the cookie is larger than the given size limit
            then it will be broken down into multiple cookies as follows:
            Set-Cookie: CookieName=chunks-3; path=/
            Set-Cookie: CookieNameC1=Segment1; path=/
            Set-Cookie: CookieNameC2=Segment2; path=/
            Set-Cookie: CookieNameC3=Segment3; path=/
            </summary>
            <param name="context"></param>
            <param name="key"></param>
            <param name="value"></param>
            <param name="options"></param>
        </member>
        <member name="M:Microsoft.AspNetCore.Internal.ChunkingCookieManager.DeleteCookie(Microsoft.AspNetCore.Http.HttpContext,System.String,Microsoft.AspNetCore.Http.CookieOptions)">
            <summary>
            Deletes the cookie with the given key by setting an expired state. If a matching chunked cookie exists on
            the request, delete each chunk.
            </summary>
            <param name="context"></param>
            <param name="key"></param>
            <param name="options"></param>
        </member>
        <member name="T:Microsoft.AspNetCore.Internal.RangeHelper">
            <summary>
            Provides a parser for the Range Header in an <see cref="P:Microsoft.AspNetCore.Http.HttpContext.Request"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Internal.RangeHelper.ParseRange(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Http.Headers.RequestHeaders,System.Int64,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Returns the normalized form of the requested range if the Range Header in the <see cref="P:Microsoft.AspNetCore.Http.HttpContext.Request"/> is valid.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/> associated with the request.</param>
            <param name="requestHeaders">The <see cref="T:Microsoft.AspNetCore.Http.Headers.RequestHeaders"/> associated with the given <paramref name="context"/>.</param>
            <param name="length">The total length of the file representation requested.</param>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/>.</param>
            <returns>A boolean value which represents if the <paramref name="requestHeaders"/> contain a single valid
            range request. A <see cref="T:Microsoft.Net.Http.Headers.RangeItemHeaderValue"/> which represents the normalized form of the
            range parsed from the <paramref name="requestHeaders"/> or <c>null</c> if it cannot be normalized.</returns>
            <remark>If the Range header exists but cannot be parsed correctly, or if the provided length is 0, then the range request cannot be satisfied (status 416).
            This results in (<c>true</c>,<c>null</c>) return values.</remark>
        </member>
        <member name="M:Microsoft.AspNetCore.Internal.ResponseContentTypeHelper.ResolveContentTypeAndEncoding(System.String,System.String,System.ValueTuple{System.String,System.Text.Encoding},System.Func{System.String,System.Text.Encoding},System.String@,System.Text.Encoding@)">
            <summary>
            Gets the content type and encoding that need to be used for the response.
            The priority for selecting the content type is:
            1. ContentType property set on the action result
            2. <see cref="P:Microsoft.AspNetCore.Http.HttpResponse.ContentType"/> property set on <see cref="T:Microsoft.AspNetCore.Http.HttpResponse"/>
            3. Default content type set on the action result
            </summary>
            <remarks>
            The user supplied content type is not modified and is used as is. For example, if user
            sets the content type to be "text/plain" without any encoding, then the default content type's
            encoding is used to write the response and the ContentType header is set to be "text/plain" without any
            "charset" information.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.Http.Headers.ReadOnlyMediaTypeHeaderValue">
            <summary>
            A media type value.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Headers.ReadOnlyMediaTypeHeaderValue.#ctor(System.String)">
            <summary>
            Initializes a <see cref="T:Microsoft.AspNetCore.Http.Headers.ReadOnlyMediaTypeHeaderValue"/> instance.
            </summary>
            <param name="mediaType">The <see cref="T:System.String"/> with the media type.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Headers.ReadOnlyMediaTypeHeaderValue.#ctor(Microsoft.Extensions.Primitives.StringSegment)">
            <summary>
            Initializes a <see cref="T:Microsoft.AspNetCore.Http.Headers.ReadOnlyMediaTypeHeaderValue"/> instance.
            </summary>
            <param name="mediaType">The <see cref="T:Microsoft.Extensions.Primitives.StringSegment"/> with the media type.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Headers.ReadOnlyMediaTypeHeaderValue.#ctor(System.String,System.Int32,System.Nullable{System.Int32})">
            <summary>
            Initializes a <see cref="T:Microsoft.AspNetCore.Http.Headers.ReadOnlyMediaTypeHeaderValue.MediaTypeParameterParser"/> instance.
            </summary>
            <param name="mediaType">The <see cref="T:System.String"/> with the media type.</param>
            <param name="offset">The offset in the <paramref name="mediaType"/> where the parsing starts.</param>
            <param name="length">The length of the media type to parse if provided.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.Headers.ReadOnlyMediaTypeHeaderValue.Type">
            <summary>
            Gets the type of the <see cref="T:Microsoft.AspNetCore.Http.Headers.ReadOnlyMediaTypeHeaderValue"/>.
            </summary>
            <example>
            For the media type <c>"application/json"</c>, this property gives the value <c>"application"</c>.
            </example>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.Headers.ReadOnlyMediaTypeHeaderValue.MatchesAllTypes">
            <summary>
            Gets whether this <see cref="T:Microsoft.AspNetCore.Http.Headers.ReadOnlyMediaTypeHeaderValue"/> matches all types.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.Headers.ReadOnlyMediaTypeHeaderValue.SubType">
            <summary>
            Gets the subtype of the <see cref="T:Microsoft.AspNetCore.Http.Headers.ReadOnlyMediaTypeHeaderValue"/>.
            </summary>
            <example>
            For the media type <c>"application/vnd.example+json"</c>, this property gives the value
            <c>"vnd.example+json"</c>.
            </example>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.Headers.ReadOnlyMediaTypeHeaderValue.SubTypeWithoutSuffix">
            <summary>
            Gets the subtype of the <see cref="T:Microsoft.AspNetCore.Http.Headers.ReadOnlyMediaTypeHeaderValue"/>, excluding any structured syntax suffix.
            </summary>
            <example>
            For the media type <c>"application/vnd.example+json"</c>, this property gives the value
            <c>"vnd.example"</c>.
            </example>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.Headers.ReadOnlyMediaTypeHeaderValue.SubTypeSuffix">
            <summary>
            Gets the structured syntax suffix of the <see cref="T:Microsoft.AspNetCore.Http.Headers.ReadOnlyMediaTypeHeaderValue"/> if it has one.
            </summary>
            <example>
            For the media type <c>"application/vnd.example+json"</c>, this property gives the value
            <c>"json"</c>.
            </example>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.Headers.ReadOnlyMediaTypeHeaderValue.MatchesAllSubTypes">
            <summary>
            Gets whether this <see cref="T:Microsoft.AspNetCore.Http.Headers.ReadOnlyMediaTypeHeaderValue"/> matches all subtypes.
            </summary>
            <example>
            For the media type <c>"application/*"</c>, this property is <c>true</c>.
            </example>
            <example>
            For the media type <c>"application/json"</c>, this property is <c>false</c>.
            </example>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.Headers.ReadOnlyMediaTypeHeaderValue.MatchesAllSubTypesWithoutSuffix">
            <summary>
            Gets whether this <see cref="T:Microsoft.AspNetCore.Http.Headers.ReadOnlyMediaTypeHeaderValue"/> matches all subtypes, ignoring any structured syntax suffix.
            </summary>
            <example>
            For the media type <c>"application/*+json"</c>, this property is <c>true</c>.
            </example>
            <example>
            For the media type <c>"application/vnd.example+json"</c>, this property is <c>false</c>.
            </example>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.Headers.ReadOnlyMediaTypeHeaderValue.Encoding">
            <summary>
            Gets the <see cref="T:System.Text.Encoding"/> of the <see cref="T:Microsoft.AspNetCore.Http.Headers.ReadOnlyMediaTypeHeaderValue"/> if it has one.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.Headers.ReadOnlyMediaTypeHeaderValue.Charset">
            <summary>
            Gets the charset parameter of the <see cref="T:Microsoft.AspNetCore.Http.Headers.ReadOnlyMediaTypeHeaderValue"/> if it has one.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.Headers.ReadOnlyMediaTypeHeaderValue.HasWildcard">
            <summary>
            Determines whether the current <see cref="T:Microsoft.AspNetCore.Http.Headers.ReadOnlyMediaTypeHeaderValue"/> contains a wildcard.
            </summary>
            <returns>
            <c>true</c> if this <see cref="T:Microsoft.AspNetCore.Http.Headers.ReadOnlyMediaTypeHeaderValue"/> contains a wildcard; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Headers.ReadOnlyMediaTypeHeaderValue.IsSubsetOf(Microsoft.AspNetCore.Http.Headers.ReadOnlyMediaTypeHeaderValue)">
            <summary>
            Determines whether the current <see cref="T:Microsoft.AspNetCore.Http.Headers.ReadOnlyMediaTypeHeaderValue"/> is a subset of the <paramref name="set"/>
            <see cref="T:Microsoft.AspNetCore.Http.Headers.ReadOnlyMediaTypeHeaderValue"/>.
            </summary>
            <param name="set">The set <see cref="T:Microsoft.AspNetCore.Http.Headers.ReadOnlyMediaTypeHeaderValue"/>.</param>
            <returns>
            <c>true</c> if this <see cref="T:Microsoft.AspNetCore.Http.Headers.ReadOnlyMediaTypeHeaderValue"/> is a subset of <paramref name="set"/>; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Headers.ReadOnlyMediaTypeHeaderValue.GetParameter(System.String)">
            <summary>
            Gets the parameter <paramref name="parameterName"/> of the media type.
            </summary>
            <param name="parameterName">The name of the parameter to retrieve.</param>
            <returns>
            The <see cref="T:Microsoft.Extensions.Primitives.StringSegment"/>for the given <paramref name="parameterName"/> if found; otherwise
            <c>null</c>.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Headers.ReadOnlyMediaTypeHeaderValue.GetParameter(Microsoft.Extensions.Primitives.StringSegment)">
            <summary>
            Gets the parameter <paramref name="parameterName"/> of the media type.
            </summary>
            <param name="parameterName">The name of the parameter to retrieve.</param>
            <returns>
            The <see cref="T:Microsoft.Extensions.Primitives.StringSegment"/>for the given <paramref name="parameterName"/> if found; otherwise
            <c>null</c>.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Headers.ReadOnlyMediaTypeHeaderValue.TryGetLastParameter(Microsoft.Extensions.Primitives.StringSegment,Microsoft.Extensions.Primitives.StringSegment@)">
            <summary>
            Gets the last parameter <paramref name="parameterName"/> of the media type.
            </summary>
            <param name="parameterName">The name of the parameter to retrieve.</param>
            <param name="parameterValue">The value for the last parameter</param>
            <returns>
            <see langword="true"/> if parsing succeeded.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Headers.ReadOnlyMediaTypeHeaderValue.GetEncoding(System.String)">
            <summary>
            Get an encoding for a mediaType.
            </summary>
            <param name="mediaType">The mediaType.</param>
            <returns>The encoding.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Headers.ReadOnlyMediaTypeHeaderValue.GetEncoding(Microsoft.Extensions.Primitives.StringSegment)">
            <summary>
            Get an encoding for a mediaType.
            </summary>
            <param name="mediaType">The mediaType.</param>
            <returns>The encoding.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Http.Metadata.AcceptsMetadata">
            <summary>
            Metadata that specifies the supported request content types.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Metadata.AcceptsMetadata.#ctor(System.String[])">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.AspNetCore.Http.Metadata.AcceptsMetadata"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Metadata.AcceptsMetadata.#ctor(System.Type,System.Boolean,System.String[])">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.AspNetCore.Http.Metadata.AcceptsMetadata"/> with a type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.Metadata.AcceptsMetadata.ContentTypes">
            <summary>
            Gets the supported request content types.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.Metadata.AcceptsMetadata.RequestType">
            <summary>
            Gets the type being read from the request.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.Metadata.AcceptsMetadata.IsOptional">
            <summary>
            Gets a value that determines if the request body is optional.
            </summary>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.ApplicationModelConventionExtensions">
            <summary>
            Contains the extension methods for <see cref="P:Microsoft.AspNetCore.Mvc.MvcOptions.Conventions"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ApplicationModelConventionExtensions.RemoveType``1(System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelConvention})">
            <summary>
            Removes all application model conventions of the specified type.
            </summary>
            <param name="list">The list of <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelConvention"/>s.</param>
            <typeparam name="TApplicationModelConvention">The type to remove.</typeparam>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ApplicationModelConventionExtensions.RemoveType(System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelConvention},System.Type)">
            <summary>
            Removes all application model conventions of the specified type.
            </summary>
            <param name="list">The list of <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelConvention"/>s.</param>
            <param name="type">The type to remove.</param>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ApplicationModelConventionExtensions.Add(System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelConvention},Microsoft.AspNetCore.Mvc.ApplicationModels.IControllerModelConvention)">
            <summary>
            Adds a <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.IControllerModelConvention"/> to all the controllers in the application.
            </summary>
            <param name="conventions">The list of <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelConvention"/>
            in <see cref="T:Microsoft.AspNetCore.Mvc.MvcOptions"/>.</param>
            <param name="controllerModelConvention">The <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.IControllerModelConvention"/> which needs to be
            added.</param>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ApplicationModelConventionExtensions.Add(System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelConvention},Microsoft.AspNetCore.Mvc.ApplicationModels.IActionModelConvention)">
            <summary>
            Adds a <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.IActionModelConvention"/> to all the actions in the application.
            </summary>
            <param name="conventions">The list of <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelConvention"/>
            in <see cref="T:Microsoft.AspNetCore.Mvc.MvcOptions"/>.</param>
            <param name="actionModelConvention">The <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.IActionModelConvention"/> which needs to be
            added.</param>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ApplicationModelConventionExtensions.Add(System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelConvention},Microsoft.AspNetCore.Mvc.ApplicationModels.IParameterModelConvention)">
            <summary>
            Adds a <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.IParameterModelConvention"/> to all the parameters in the application.
            </summary>
            <param name="conventions">The list of <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelConvention"/>
            in <see cref="T:Microsoft.AspNetCore.Mvc.MvcOptions"/>.</param>
            <param name="parameterModelConvention">The <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.IParameterModelConvention"/> which needs to be
            added.</param>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ApplicationModelConventionExtensions.Add(System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelConvention},Microsoft.AspNetCore.Mvc.ApplicationModels.IParameterModelBaseConvention)">
            <summary>
            Adds a <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.IParameterModelBaseConvention"/> to all properties and parameters in the application.
            </summary>
            <param name="conventions">The list of <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.IApplicationModelConvention"/>
            in <see cref="T:Microsoft.AspNetCore.Mvc.MvcOptions"/>.</param>
            <param name="parameterModelConvention">The <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.IParameterModelBaseConvention"/> which needs to be
            added.</param>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ApplicationModelConventionExtensions.ParameterApplicationModelConvention.Apply(Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ApplicationModelConventionExtensions.ParameterBaseApplicationModelConvention.Apply(Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ApplicationModelConventionExtensions.ActionApplicationModelConvention.Apply(Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ApplicationModelConventionExtensions.ControllerApplicationModelConvention.Apply(Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModel)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder">
            <summary>
            An interface for configuring MVC services.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.DependencyInjection.IMvcBuilder.Services">
            <summary>
            Gets the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> where MVC services are configured.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.DependencyInjection.IMvcBuilder.PartManager">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager"/> where <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPart"/>s
            are configured.
            </summary>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder">
            <summary>
            An interface for configuring essential MVC services.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder.Services">
            <summary>
            Gets the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> where essential MVC services are configured.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder.PartManager">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager"/> where <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPart"/>s
            are configured.
            </summary>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.MvcBuilder">
            <summary>
            Allows fine grained configuration of MVC services.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.MvcBuilder.#ctor(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager)">
            <summary>
            Initializes a new <see cref="T:Microsoft.Extensions.DependencyInjection.MvcBuilder"/> instance.
            </summary>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add services to.</param>
            <param name="manager">The <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager"/> of the application.</param>
        </member>
        <member name="P:Microsoft.Extensions.DependencyInjection.MvcBuilder.Services">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Extensions.DependencyInjection.MvcBuilder.PartManager">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.MvcCoreBuilder">
            <summary>
            Allows fine grained configuration of essential MVC services.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.MvcCoreBuilder.#ctor(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager)">
            <summary>
            Initializes a new <see cref="T:Microsoft.Extensions.DependencyInjection.MvcCoreBuilder"/> instance.
            </summary>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add services to.</param>
            <param name="manager">The <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager"/> of the application.</param>
        </member>
        <member name="P:Microsoft.Extensions.DependencyInjection.MvcCoreBuilder.PartManager">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.Extensions.DependencyInjection.MvcCoreBuilder.Services">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.MvcCoreMvcBuilderExtensions">
            <summary>
            Extensions for configuring MVC using an <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.MvcCoreMvcBuilderExtensions.AddMvcOptions(Microsoft.Extensions.DependencyInjection.IMvcBuilder,System.Action{Microsoft.AspNetCore.Mvc.MvcOptions})">
            <summary>
            Registers an action to configure <see cref="T:Microsoft.AspNetCore.Mvc.MvcOptions"/>.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/>.</param>
            <param name="setupAction">An <see cref="T:System.Action`1"/>.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.MvcCoreMvcBuilderExtensions.AddJsonOptions(Microsoft.Extensions.DependencyInjection.IMvcBuilder,System.Action{Microsoft.AspNetCore.Mvc.JsonOptions})">
            <summary>
            Configures <see cref="T:Microsoft.AspNetCore.Mvc.JsonOptions"/> for the specified <paramref name="builder"/>.
            Uses default values from <c>JsonSerializerDefaults.Web</c>.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/>.</param>
            <param name="configure">An <see cref="T:System.Action"/> to configure the <see cref="T:Microsoft.AspNetCore.Mvc.JsonOptions"/>.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.MvcCoreMvcBuilderExtensions.AddFormatterMappings(Microsoft.Extensions.DependencyInjection.IMvcBuilder,System.Action{Microsoft.AspNetCore.Mvc.Formatters.FormatterMappings})">
            <summary>
            Configures <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.FormatterMappings"/> for the specified <paramref name="builder"/>.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/>.</param>
            <param name="setupAction">An <see cref="T:System.Action"/> to configure the <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.FormatterMappings"/>.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.MvcCoreMvcBuilderExtensions.AddApplicationPart(Microsoft.Extensions.DependencyInjection.IMvcBuilder,System.Reflection.Assembly)">
            <summary>
            Adds an <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPart"/> to the list of <see cref="P:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager.ApplicationParts"/> on the
            <see cref="P:Microsoft.Extensions.DependencyInjection.IMvcBuilder.PartManager"/>.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/>.</param>
            <param name="assembly">The <see cref="T:System.Reflection.Assembly"/> of the <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPart"/>.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.MvcCoreMvcBuilderExtensions.ConfigureApplicationPartManager(Microsoft.Extensions.DependencyInjection.IMvcBuilder,System.Action{Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager})">
            <summary>
            Configures the <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager"/> of the <see cref="P:Microsoft.Extensions.DependencyInjection.IMvcBuilder.PartManager"/> using
            the given <see cref="T:System.Action`1"/>.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/>.</param>
            <param name="setupAction">The <see cref="T:System.Action`1"/></param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.MvcCoreMvcBuilderExtensions.AddControllersAsServices(Microsoft.Extensions.DependencyInjection.IMvcBuilder)">
            <summary>
            Registers discovered controllers as services in the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/>.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.MvcCoreMvcBuilderExtensions.SetCompatibilityVersion(Microsoft.Extensions.DependencyInjection.IMvcBuilder,Microsoft.AspNetCore.Mvc.CompatibilityVersion)">
            <summary>
            Sets the <see cref="T:Microsoft.AspNetCore.Mvc.CompatibilityVersion"/> for ASP.NET Core MVC for the application.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/>.</param>
            <param name="version">The <see cref="T:Microsoft.AspNetCore.Mvc.CompatibilityVersion"/> value to configure.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.MvcCoreMvcBuilderExtensions.ConfigureApiBehaviorOptions(Microsoft.Extensions.DependencyInjection.IMvcBuilder,System.Action{Microsoft.AspNetCore.Mvc.ApiBehaviorOptions})">
            <summary>
            Configures <see cref="T:Microsoft.AspNetCore.Mvc.ApiBehaviorOptions"/>.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/>.</param>
            <param name="setupAction">The configure action.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/>.</returns>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions">
            <summary>
            Extensions for configuring MVC using an <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions.AddMvcOptions(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder,System.Action{Microsoft.AspNetCore.Mvc.MvcOptions})">
            <summary>
            Registers an action to configure <see cref="T:Microsoft.AspNetCore.Mvc.MvcOptions"/>.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder"/>.</param>
            <param name="setupAction">An <see cref="T:System.Action`1"/>.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions.AddJsonOptions(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder,System.Action{Microsoft.AspNetCore.Mvc.JsonOptions})">
            <summary>
            Configures <see cref="T:Microsoft.AspNetCore.Mvc.JsonOptions"/> for the specified <paramref name="builder"/>.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/>.</param>
            <param name="configure">An <see cref="T:System.Action"/> to configure the <see cref="T:Microsoft.AspNetCore.Mvc.JsonOptions"/>.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions.AddFormatterMappings(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder)">
            <summary>
            Adds services to support <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.FormatterMappings"/>.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/>.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions.AddFormatterMappings(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder,System.Action{Microsoft.AspNetCore.Mvc.Formatters.FormatterMappings})">
            <summary>
            Configures <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.FormatterMappings"/> for the specified <paramref name="setupAction"/>.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder"/>.</param>
            <param name="setupAction">An <see cref="T:System.Action"/> to configure the <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.FormatterMappings"/>.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions.AddAuthorization(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder)">
            <summary>
            Configures authentication and authorization services for <paramref name="builder"/>.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder"/>.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions.AddAuthorization(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder,System.Action{Microsoft.AspNetCore.Authorization.AuthorizationOptions})">
            <summary>
            Configures authentication and authorization services for <paramref name="builder"/>.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder"/>.</param>
            <param name="setupAction">An <see cref="T:System.Action"/> to configure the <see cref="T:Microsoft.AspNetCore.Authorization.AuthorizationOptions"/>.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions.AddControllersAsServices(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder)">
            <summary>
            Registers discovered controllers as services in the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder"/>.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions.AddApplicationPart(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder,System.Reflection.Assembly)">
            <summary>
            Adds an <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPart"/> to the list of <see cref="P:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager.ApplicationParts"/> on the
            <see cref="P:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder.PartManager"/>.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder"/>.</param>
            <param name="assembly">The <see cref="T:System.Reflection.Assembly"/> of the <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPart"/>.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions.ConfigureApplicationPartManager(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder,System.Action{Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager})">
            <summary>
            Configures the <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager"/> of the <see cref="P:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder.PartManager"/> using
            the given <see cref="T:System.Action`1"/>.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder"/>.</param>
            <param name="setupAction">The <see cref="T:System.Action`1"/></param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions.ConfigureApiBehaviorOptions(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder,System.Action{Microsoft.AspNetCore.Mvc.ApiBehaviorOptions})">
            <summary>
            Configures <see cref="T:Microsoft.AspNetCore.Mvc.ApiBehaviorOptions"/>.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder"/>.</param>
            <param name="setupAction">The configure action.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.MvcCoreMvcCoreBuilderExtensions.SetCompatibilityVersion(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder,Microsoft.AspNetCore.Mvc.CompatibilityVersion)">
            <summary>
            Sets the <see cref="T:Microsoft.AspNetCore.Mvc.CompatibilityVersion"/> for ASP.NET Core MVC for the application.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder"/>.</param>
            <param name="version">The <see cref="T:Microsoft.AspNetCore.Mvc.CompatibilityVersion"/> value to configure.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder"/>.</returns>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.MvcCoreRouteOptionsSetup">
            <summary>
            Sets up MVC default options for <see cref="T:Microsoft.AspNetCore.Routing.RouteOptions"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.MvcCoreRouteOptionsSetup.Configure(Microsoft.AspNetCore.Routing.RouteOptions)">
            <summary>
            Configures the <see cref="T:Microsoft.AspNetCore.Routing.RouteOptions"/>.
            </summary>
            <param name="options">The <see cref="T:Microsoft.AspNetCore.Routing.RouteOptions"/>.</param>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.MvcCoreServiceCollectionExtensions">
            <summary>
            Extension methods for setting up essential MVC services in an <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.MvcCoreServiceCollectionExtensions.AddMvcCore(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adds the minimum essential MVC services to the specified <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />. Additional services
            including MVC's support for authorization, formatters, and validation must be added separately using the
            <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder"/> returned from this method.
            </summary>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add services to.</param>
            <returns>An <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder"/> that can be used to further configure the MVC services.</returns>
            <remarks>
            The <see cref="M:Microsoft.Extensions.DependencyInjection.MvcCoreServiceCollectionExtensions.AddMvcCore(Microsoft.Extensions.DependencyInjection.IServiceCollection)"/> approach for configuring
            MVC is provided for experienced MVC developers who wish to have full control over the set of default services
            registered. <see cref="M:Microsoft.Extensions.DependencyInjection.MvcCoreServiceCollectionExtensions.AddMvcCore(Microsoft.Extensions.DependencyInjection.IServiceCollection)"/> will register
            the minimum set of services necessary to route requests and invoke controllers. It is not expected that any
            application will satisfy its requirements with just a call to
            <see cref="M:Microsoft.Extensions.DependencyInjection.MvcCoreServiceCollectionExtensions.AddMvcCore(Microsoft.Extensions.DependencyInjection.IServiceCollection)"/>. Additional configuration using the
            <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder"/> will be required.
            </remarks>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.MvcCoreServiceCollectionExtensions.AddMvcCore(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.AspNetCore.Mvc.MvcOptions})">
            <summary>
            Adds the minimum essential MVC services to the specified <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />. Additional services
            including MVC's support for authorization, formatters, and validation must be added separately using the
            <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder"/> returned from this method.
            </summary>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add services to.</param>
            <param name="setupAction">An <see cref="T:System.Action`1"/> to configure the provided <see cref="T:Microsoft.AspNetCore.Mvc.MvcOptions"/>.</param>
            <returns>An <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder"/> that can be used to further configure the MVC services.</returns>
            <remarks>
            The <see cref="M:Microsoft.Extensions.DependencyInjection.MvcCoreServiceCollectionExtensions.AddMvcCore(Microsoft.Extensions.DependencyInjection.IServiceCollection)"/> approach for configuring
            MVC is provided for experienced MVC developers who wish to have full control over the set of default services
            registered. <see cref="M:Microsoft.Extensions.DependencyInjection.MvcCoreServiceCollectionExtensions.AddMvcCore(Microsoft.Extensions.DependencyInjection.IServiceCollection)"/> will register
            the minimum set of services necessary to route requests and invoke controllers. It is not expected that any
            application will satisfy its requirements with just a call to
            <see cref="M:Microsoft.Extensions.DependencyInjection.MvcCoreServiceCollectionExtensions.AddMvcCore(Microsoft.Extensions.DependencyInjection.IServiceCollection)"/>. Additional configuration using the
            <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder"/> will be required.
            </remarks>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.MvcMarkerService">
            <summary>
            A marker class used to determine if all the MVC services were added
            to the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> before MVC is configured.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Internal.ObjectMethodExecutor.Execute(System.Object,System.Object[])">
            <summary>
            Executes the configured method on <paramref name="target"/>. This can be used whether or not
            the configured method is asynchronous.
            </summary>
            <remarks>
            Even if the target method is asynchronous, it's desirable to invoke it using Execute rather than
            ExecuteAsync if you know at compile time what the return type is, because then you can directly
            "await" that value (via a cast), and then the generated code will be able to reference the
            resulting awaitable as a value-typed variable. If you use ExecuteAsync instead, the generated
            code will have to treat the resulting awaitable as a boxed object, because it doesn't know at
            compile time what type it would be.
            </remarks>
            <param name="target">The object whose method is to be executed.</param>
            <param name="parameters">Parameters to pass to the method.</param>
            <returns>The method return value.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Internal.ObjectMethodExecutor.ExecuteAsync(System.Object,System.Object[])">
             <summary>
             Executes the configured method on <paramref name="target"/>. This can only be used if the configured
             method is asynchronous.
             </summary>
             <remarks>
             If you don't know at compile time the type of the method's returned awaitable, you can use ExecuteAsync,
             which supplies an awaitable-of-object. This always works, but can incur several extra heap allocations
             as compared with using Execute and then using "await" on the result value typecasted to the known
             awaitable type. The possible extra heap allocations are for:
            
             1. The custom awaitable (though usually there's a heap allocation for this anyway, since normally
                it's a reference type, and you normally create a new instance per call).
             2. The custom awaiter (whether or not it's a value type, since if it's not, you need a new instance
                of it, and if it is, it will have to be boxed so the calling code can reference it as an object).
             3. The async result value, if it's a value type (it has to be boxed as an object, since the calling
                code doesn't know what type it's going to be).
             </remarks>
             <param name="target">The object whose method is to be executed.</param>
             <param name="parameters">Parameters to pass to the method.</param>
             <returns>An object that you can "await" to get the method return value.</returns>
        </member>
        <member name="T:Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable">
            <summary>
            Provides a common awaitable structure that <see cref="M:Microsoft.Extensions.Internal.ObjectMethodExecutor.ExecuteAsync(System.Object,System.Object[])"/> can
            return, regardless of whether the underlying value is a System.Task, an FSharpAsync, or an
            application-defined custom awaitable.
            </summary>
        </member>
        <member name="T:Microsoft.Extensions.Internal.ObjectMethodExecutorFSharpSupport">
            <summary>
            Helper for detecting whether a given type is FSharpAsync`1, and if so, supplying
            an <see cref="T:System.Linq.Expressions.Expression"/> for mapping instances of that type to a C# awaitable.
            </summary>
            <remarks>
            The main design goal here is to avoid taking a compile-time dependency on
            FSharp.Core.dll, because non-F# applications wouldn't use it. So all the references
            to FSharp types have to be constructed dynamically at runtime.
            </remarks>
        </member>
        <member name="M:Microsoft.Extensions.Internal.PropertyHelper.#ctor(System.Reflection.PropertyInfo)">
            <summary>
            Initializes a fast <see cref="T:Microsoft.Extensions.Internal.PropertyHelper"/>.
            This constructor does not cache the helper. For caching, use <see cref="M:Microsoft.Extensions.Internal.PropertyHelper.GetProperties(System.Type)"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.Internal.PropertyHelper.Property">
            <summary>
            Gets the backing <see cref="T:System.Reflection.PropertyInfo"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.Internal.PropertyHelper.Name">
            <summary>
            Gets (or sets in derived types) the property name.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.Internal.PropertyHelper.ValueGetter">
            <summary>
            Gets the property value getter.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.Internal.PropertyHelper.ValueSetter">
            <summary>
            Gets the property value setter.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Internal.PropertyHelper.GetValue(System.Object)">
            <summary>
            Returns the property value for the specified <paramref name="instance"/>.
            </summary>
            <param name="instance">The object whose property value will be returned.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Internal.PropertyHelper.SetValue(System.Object,System.Object)">
            <summary>
            Sets the property value for the specified <paramref name="instance" />.
            </summary>
            <param name="instance">The object whose property value will be set.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="M:Microsoft.Extensions.Internal.PropertyHelper.GetProperties(System.Type)">
            <summary>
            Creates and caches fast property helpers that expose getters for every public get property on the
            specified type.
            </summary>
            <param name="type">The type to extract property accessors for.</param>
            <returns>A cached array of all public properties of the specified type.
            </returns>
        </member>
        <member name="M:Microsoft.Extensions.Internal.PropertyHelper.GetVisibleProperties(System.Type)">
            <summary>
            <para>
            Creates and caches fast property helpers that expose getters for every non-hidden get property
            on the specified type.
            </para>
            <para>
            <see cref="M:GetVisibleProperties"/> excludes properties defined on base types that have been
            hidden by definitions using the <c>new</c> keyword.
            </para>
            </summary>
            <param name="type">The type to extract property accessors for.</param>
            <returns>
            A cached array of all public properties of the specified type.
            </returns>
        </member>
        <member name="M:Microsoft.Extensions.Internal.PropertyHelper.MakeFastPropertyGetter(System.Reflection.PropertyInfo)">
            <summary>
            Creates a single fast property getter. The result is not cached.
            </summary>
            <param name="propertyInfo">propertyInfo to extract the getter for.</param>
            <returns>a fast getter.</returns>
            <remarks>
            This method is more memory efficient than a dynamically compiled lambda, and about the
            same speed.
            </remarks>
        </member>
        <member name="M:Microsoft.Extensions.Internal.PropertyHelper.MakeNullSafeFastPropertyGetter(System.Reflection.PropertyInfo)">
            <summary>
            Creates a single fast property getter which is safe for a null input object. The result is not cached.
            </summary>
            <param name="propertyInfo">propertyInfo to extract the getter for.</param>
            <returns>a fast getter.</returns>
            <remarks>
            This method is more memory efficient than a dynamically compiled lambda, and about the
            same speed.
            </remarks>
        </member>
        <member name="M:Microsoft.Extensions.Internal.PropertyHelper.MakeFastPropertySetter(System.Reflection.PropertyInfo)">
            <summary>
            Creates a single fast property setter for reference types. The result is not cached.
            </summary>
            <param name="propertyInfo">propertyInfo to extract the setter for.</param>
            <returns>a fast getter.</returns>
            <remarks>
            This method is more memory efficient than a dynamically compiled lambda, and about the
            same speed. This only works for reference types.
            </remarks>
        </member>
        <member name="M:Microsoft.Extensions.Internal.PropertyHelper.ObjectToDictionary(System.Object)">
             <summary>
             Given an object, adds each instance property with a public get method as a key and its
             associated value to a dictionary.
            
             If the object is already an <see cref="T:System.Collections.Generic.IDictionary`2"/> instance, then a copy
             is returned.
             </summary>
             <remarks>
             The implementation of PropertyHelper will cache the property accessors per-type. This is
             faster when the same type is used multiple times with ObjectToDictionary.
             </remarks>
        </member>
        <member name="M:Microsoft.Extensions.Internal.PropertyHelper.GetVisibleProperties(System.Type,System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Extensions.Internal.PropertyHelper[]},System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Extensions.Internal.PropertyHelper[]})">
            <summary>
            <para>
            Creates and caches fast property helpers that expose getters for every non-hidden get property
            on the specified type.
            </para>
            <para>
            <see cref="M:GetVisibleProperties"/> excludes properties defined on base types that have been
            hidden by definitions using the <c>new</c> keyword.
            </para>
            </summary>
            <param name="type">The type to extract property accessors for.</param>
            <param name="allPropertiesCache">The cache to store results in. Use <see cref="F:Microsoft.Extensions.Internal.PropertyHelper.PropertiesCache"/> to use the default cache. Use <see langword="null"/> to avoid caching.</param>
            <param name="visiblePropertiesCache">The cache to store results in. Use <see cref="F:Microsoft.Extensions.Internal.PropertyHelper.VisiblePropertiesCache"/> if the calling type does not have its own independent cache. Use <see langword="null"/> to avoid caching.</param>
            <returns>
            A cached array of all public properties of the specified type.
            </returns>
        </member>
        <member name="M:Microsoft.Extensions.Internal.PropertyHelper.GetProperties(System.Type,System.Collections.Concurrent.ConcurrentDictionary{System.Type,Microsoft.Extensions.Internal.PropertyHelper[]})">
            <summary>
            Creates and caches fast property helpers that expose getters for every public get property on the
            specified type.
            </summary>
            <param name="type">The type to extract property accessors for.</param>
            <param name="cache">The cache to store results in. Use <see cref="F:Microsoft.Extensions.Internal.PropertyHelper.PropertiesCache"/> to use the default cache. Use <see langword="null"/> to avoid caching.</param>
            <returns>A cached array of all public properties of the specified type.
            </returns>
        </member>
        <member name="M:Microsoft.Extensions.Internal.PropertyHelper.MetadataUpdateHandler.ClearCache(System.Type[])">
            <summary>
            Invoked as part of <see cref="T:System.Reflection.Metadata.MetadataUpdateHandlerAttribute" /> contract for hot reload.
            </summary>
        </member>
        <member name="T:Microsoft.Extensions.Internal.SecurityHelper">
            <summary>
            Helper code used when implementing authentication middleware
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Internal.SecurityHelper.MergeUserPrincipal(System.Security.Claims.ClaimsPrincipal,System.Security.Claims.ClaimsPrincipal)">
            <summary>
            Add all ClaimsIdentities from an additional ClaimPrincipal to the ClaimsPrincipal
            Merges a new claims principal, placing all new identities first, and eliminating
            any empty unauthenticated identities from context.User
            </summary>
            <param name="existingPrincipal">The <see cref="T:System.Security.Claims.ClaimsPrincipal"/> containing existing <see cref="T:System.Security.Claims.ClaimsIdentity"/>.</param>
            <param name="additionalPrincipal">The <see cref="T:System.Security.Claims.ClaimsPrincipal"/> containing <see cref="T:System.Security.Claims.ClaimsIdentity"/> to be added.</param>
        </member>
    </members>
</doc>
