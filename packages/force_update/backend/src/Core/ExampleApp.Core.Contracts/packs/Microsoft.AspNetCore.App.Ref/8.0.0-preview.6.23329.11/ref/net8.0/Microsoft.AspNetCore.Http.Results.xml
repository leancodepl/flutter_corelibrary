<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.AspNetCore.Http.Results</name>
    </assembly>
    <members>
        <member name="T:Microsoft.AspNetCore.Http.HttpResults.Accepted">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Http.IResult"/> that on execution will write an object to the response
            with status code Accepted (202) and Location header.
            Targets a registered route.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.Accepted.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Http.HttpResults.Accepted"/> class with the values
            provided.
            </summary>
            <param name="location">The location at which the status of requested content can be monitored.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.Accepted.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Http.HttpResults.Accepted"/> class with the values
            provided.
            </summary>
            <param name="locationUri">The location at which the status of requested content can be monitored.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.Accepted.StatusCode">
            <summary>
            Gets the HTTP status code: <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status202Accepted"/>
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.Accepted.Location">
            <summary>
            Gets the location at which the status of the requested content can be monitored.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.Accepted.ExecuteAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.Accepted.Microsoft#AspNetCore#Http#Metadata#IEndpointMetadataProvider#PopulateMetadata(System.Reflection.MethodInfo,Microsoft.AspNetCore.Builder.EndpointBuilder)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Http.HttpResults.AcceptedAtRoute">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Http.IResult"/> that on execution will write an object to the response
            with status code Accepted (202) and Location header.
            Targets a registered route.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.AcceptedAtRoute.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Http.HttpResults.AcceptedAtRoute"/> class with the values
            provided.
            </summary>
            <param name="routeValues">The route data to use for generating the URL.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.AcceptedAtRoute.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Http.HttpResults.AcceptedAtRoute"/> class with the values
            provided.
            </summary>
            <param name="routeName">The name of the route to use for generating the URL.</param>
            <param name="routeValues">The route data to use for generating the URL.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.AcceptedAtRoute.#ctor(System.String,Microsoft.AspNetCore.Routing.RouteValueDictionary)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Http.HttpResults.AcceptedAtRoute"/> class with the values
            provided.
            </summary>
            <param name="routeName">The name of the route to use for generating the URL.</param>
            <param name="routeValues">The route data to use for generating the URL.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.AcceptedAtRoute.RouteName">
            <summary>
            Gets the name of the route to use for generating the URL.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.AcceptedAtRoute.RouteValues">
            <summary>
            Gets the route data to use for generating the URL.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.AcceptedAtRoute.StatusCode">
            <summary>
            Gets the HTTP status code: <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status202Accepted"/>
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.AcceptedAtRoute.ExecuteAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.AcceptedAtRoute.Microsoft#AspNetCore#Http#Metadata#IEndpointMetadataProvider#PopulateMetadata(System.Reflection.MethodInfo,Microsoft.AspNetCore.Builder.EndpointBuilder)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Http.HttpResults.AcceptedAtRoute`1">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Http.IResult"/> that on execution will write an object to the response
            with status code Accepted (202) and Location header.
            Targets a registered route.
            </summary>
            <typeparam name="TValue">The type of object that will be JSON serialized to the response body.</typeparam>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.AcceptedAtRoute`1.#ctor(System.Object,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Http.HttpResults.AcceptedAtRoute"/> class with the values
            provided.
            </summary>
            <param name="routeValues">The route data to use for generating the URL.</param>
            <param name="value">The value to format in the entity body.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.AcceptedAtRoute`1.#ctor(System.String,System.Object,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Http.HttpResults.AcceptedAtRoute"/> class with the values
            provided.
            </summary>
            <param name="routeName">The name of the route to use for generating the URL.</param>
            <param name="routeValues">The route data to use for generating the URL.</param>
            <param name="value">The value to format in the entity body.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.AcceptedAtRoute`1.#ctor(System.String,Microsoft.AspNetCore.Routing.RouteValueDictionary,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Http.HttpResults.AcceptedAtRoute"/> class with the values
            provided.
            </summary>
            <param name="routeName">The name of the route to use for generating the URL.</param>
            <param name="routeValues">The route data to use for generating the URL.</param>
            <param name="value">The value to format in the entity body.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.AcceptedAtRoute`1.Value">
            <summary>
            Gets the object result.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.AcceptedAtRoute`1.RouteName">
            <summary>
            Gets the name of the route to use for generating the URL.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.AcceptedAtRoute`1.RouteValues">
            <summary>
            Gets the route data to use for generating the URL.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.AcceptedAtRoute`1.StatusCode">
            <summary>
            Gets the HTTP status code: <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status202Accepted"/>
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.AcceptedAtRoute`1.ExecuteAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.AcceptedAtRoute`1.Microsoft#AspNetCore#Http#Metadata#IEndpointMetadataProvider#PopulateMetadata(System.Reflection.MethodInfo,Microsoft.AspNetCore.Builder.EndpointBuilder)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Http.HttpResults.Accepted`1">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Http.IResult"/> that on execution will write an object to the response
            with status code Accepted (202) and Location header.
            Targets a registered route.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.Accepted`1.#ctor(System.String,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Http.HttpResults.Accepted"/> class with the values
            provided.
            </summary>
            <param name="location">The location at which the status of requested content can be monitored.</param>
            <param name="value">The value to format in the entity body.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.Accepted`1.#ctor(System.Uri,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Http.HttpResults.Accepted"/> class with the values
            provided.
            </summary>
            <param name="locationUri">The location at which the status of requested content can be monitored.</param>
            <param name="value">The value to format in the entity body.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.Accepted`1.Value">
            <summary>
            Gets the object result.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.Accepted`1.StatusCode">
            <summary>
            Gets the HTTP status code: <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status202Accepted"/>
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.Accepted`1.Location">
            <summary>
            Gets the location at which the status of the requested content can be monitored.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.Accepted`1.ExecuteAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.Accepted`1.Microsoft#AspNetCore#Http#Metadata#IEndpointMetadataProvider#PopulateMetadata(System.Reflection.MethodInfo,Microsoft.AspNetCore.Builder.EndpointBuilder)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Http.HttpResults.BadRequest">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Http.IResult"/> that on execution will write an object to the response
            with Bad Request (400) status code.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.BadRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Http.HttpResults.BadRequest"/> class with the values
            provided.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.BadRequest.StatusCode">
            <summary>
            Gets the HTTP status code: <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status400BadRequest"/>
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.BadRequest.ExecuteAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.BadRequest.Microsoft#AspNetCore#Http#Metadata#IEndpointMetadataProvider#PopulateMetadata(System.Reflection.MethodInfo,Microsoft.AspNetCore.Builder.EndpointBuilder)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Http.HttpResults.BadRequest`1">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Http.IResult"/> that on execution will write an object to the response
            with Bad Request (400) status code.
            </summary>
            <typeparam name="TValue">The type of error object that will be JSON serialized to the response body.</typeparam>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.BadRequest`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Http.HttpResults.BadRequest"/> class with the values
            provided.
            </summary>
            <param name="error">The error content to format in the entity body.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.BadRequest`1.Value">
            <summary>
            Gets the object result.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.BadRequest`1.StatusCode">
            <summary>
            Gets the HTTP status code: <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status400BadRequest"/>
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.BadRequest`1.ExecuteAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.BadRequest`1.Microsoft#AspNetCore#Http#Metadata#IEndpointMetadataProvider#PopulateMetadata(System.Reflection.MethodInfo,Microsoft.AspNetCore.Builder.EndpointBuilder)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Http.HttpResults.ChallengeHttpResult">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Http.IResult"/> that on execution invokes <see cref="M:HttpContext.ChallengeAsync"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.ChallengeHttpResult.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Http.HttpResults.ChallengeHttpResult"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.ChallengeHttpResult.#ctor(System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Http.HttpResults.ChallengeHttpResult"/> with the
            specified authentication schemes.
            </summary>
            <param name="authenticationSchemes">The authentication schemes to challenge.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.ChallengeHttpResult.#ctor(System.String,Microsoft.AspNetCore.Authentication.AuthenticationProperties)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Http.HttpResults.ChallengeHttpResult"/> with the
            specified authentication scheme and <paramref name="properties"/>.
            </summary>
            <param name="authenticationScheme">The authentication schemes to challenge.</param>
            <param name="properties"><see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationProperties"/> used to perform the authentication
            challenge.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.ChallengeHttpResult.#ctor(System.Collections.Generic.IList{System.String},Microsoft.AspNetCore.Authentication.AuthenticationProperties)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Http.HttpResults.ChallengeHttpResult"/> with the
            specified authentication schemes and <paramref name="properties"/>.
            </summary>
            <param name="authenticationSchemes">The authentication scheme to challenge.</param>
            <param name="properties"><see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationProperties"/> used to perform the authentication
            challenge.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.ChallengeHttpResult.AuthenticationSchemes">
            <summary>
            Gets the authentication schemes that are challenged.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.ChallengeHttpResult.Properties">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationProperties"/> used to perform the sign-out operation.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.ChallengeHttpResult.ExecuteAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Http.HttpResults.Conflict">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Http.IResult"/> that on execution will write an object to the response
            with Conflict (409) status code.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.Conflict.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Http.HttpResults.Conflict"/> class with the values
            provided.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.Conflict.StatusCode">
            <summary>
            Gets the HTTP status code: <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status409Conflict"/>
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.Conflict.ExecuteAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.Conflict.Microsoft#AspNetCore#Http#Metadata#IEndpointMetadataProvider#PopulateMetadata(System.Reflection.MethodInfo,Microsoft.AspNetCore.Builder.EndpointBuilder)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Http.HttpResults.Conflict`1">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Http.IResult"/> that on execution will write an object to the response
            with Conflict (409) status code.
            </summary>
            <typeparam name="TValue">The type of object that will be JSON serialized to the response body.</typeparam>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.Conflict`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Http.HttpResults.Conflict"/> class with the values
            provided.
            </summary>
            <param name="error">The error content to format in the entity body.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.Conflict`1.Value">
            <summary>
            Gets the object result.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.Conflict`1.StatusCode">
            <summary>
            Gets the HTTP status code: <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status409Conflict"/>
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.Conflict`1.ExecuteAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.Conflict`1.Microsoft#AspNetCore#Http#Metadata#IEndpointMetadataProvider#PopulateMetadata(System.Reflection.MethodInfo,Microsoft.AspNetCore.Builder.EndpointBuilder)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Http.HttpResults.ContentHttpResult">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Http.HttpResults.ContentHttpResult"/> that when executed
            will produce a response with content.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.ContentHttpResult.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Http.HttpResults.ContentHttpResult"/> class with the values.
            </summary>
            <param name="content">The value to format in the entity body.</param>
            <param name="contentType">The Content-Type header for the response</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.ContentHttpResult.#ctor(System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Http.HttpResults.ContentHttpResult"/> class with the values
            </summary>
            <param name="content">The value to format in the entity body.</param>
            <param name="statusCode">The HTTP status code of the response.</param>
            <param name="contentType">The Content-Type header for the response</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.ContentHttpResult.ResponseContent">
            <summary>
            Gets the content representing the body of the response.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.ContentHttpResult.ContentType">
            <summary>
            Gets the Content-Type header for the response.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.ContentHttpResult.StatusCode">
            <summary>
            Gets the HTTP status code.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.ContentHttpResult.ExecuteAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Writes the content to the HTTP response.
            </summary>
            <param name="httpContext">The <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/> for the current request.</param>
            <returns>A task that represents the asynchronous execute operation.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Http.HttpResults.Created">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Http.IResult"/> that on execution will write an object to the response
            with status code Created (201) and Location header.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.Created.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Http.HttpResults.Created"/> class with the values
            provided.
            </summary>
            <param name="location">The location at which the content has been created.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.Created.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Http.HttpResults.Created"/> class with the values
            provided.
            </summary>
            <param name="locationUri">The location at which the content has been created.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.Created.StatusCode">
            <summary>
            Gets the HTTP status code: <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status201Created"/>
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.Created.Location">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.Created.ExecuteAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.Created.Microsoft#AspNetCore#Http#Metadata#IEndpointMetadataProvider#PopulateMetadata(System.Reflection.MethodInfo,Microsoft.AspNetCore.Builder.EndpointBuilder)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Http.HttpResults.CreatedAtRoute">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Http.IResult"/> that on execution will write an object to the response
            with status code Created (201) and Location header.
            Targets a registered route.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.CreatedAtRoute.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Http.HttpResults.CreatedAtRoute"/> class with the values
            provided.
            </summary>
            <param name="routeValues">The route data to use for generating the URL.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.CreatedAtRoute.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Http.HttpResults.CreatedAtRoute"/> class with the values
            provided.
            </summary>
            <param name="routeName">The name of the route to use for generating the URL.</param>
            <param name="routeValues">The route data to use for generating the URL.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.CreatedAtRoute.#ctor(System.String,Microsoft.AspNetCore.Routing.RouteValueDictionary)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Http.HttpResults.CreatedAtRoute"/> class with the values
            provided.
            </summary>
            <param name="routeName">The name of the route to use for generating the URL.</param>
            <param name="routeValues">The route data to use for generating the URL.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.CreatedAtRoute.RouteName">
            <summary>
            Gets the name of the route to use for generating the URL.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.CreatedAtRoute.RouteValues">
            <summary>
            Gets the route data to use for generating the URL.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.CreatedAtRoute.StatusCode">
            <summary>
            Gets the HTTP status code: <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status201Created"/>
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.CreatedAtRoute.ExecuteAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.CreatedAtRoute.Microsoft#AspNetCore#Http#Metadata#IEndpointMetadataProvider#PopulateMetadata(System.Reflection.MethodInfo,Microsoft.AspNetCore.Builder.EndpointBuilder)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Http.HttpResults.CreatedAtRoute`1">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Http.IResult"/> that on execution will write an object to the response
            with status code Created (201) and Location header.
            Targets a registered route.
            </summary>
            <typeparam name="TValue">The type of object that will be JSON serialized to the response body.</typeparam>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.CreatedAtRoute`1.#ctor(System.Object,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Http.HttpResults.CreatedAtRoute"/> class with the values
            provided.
            </summary>
            <param name="routeValues">The route data to use for generating the URL.</param>
            <param name="value">The value to format in the entity body.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.CreatedAtRoute`1.#ctor(System.String,System.Object,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Http.HttpResults.CreatedAtRoute"/> class with the values
            provided.
            </summary>
            <param name="routeName">The name of the route to use for generating the URL.</param>
            <param name="routeValues">The route data to use for generating the URL.</param>
            <param name="value">The value to format in the entity body.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.CreatedAtRoute`1.#ctor(System.String,Microsoft.AspNetCore.Routing.RouteValueDictionary,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Http.HttpResults.CreatedAtRoute"/> class with the values
            provided.
            </summary>
            <param name="routeName">The name of the route to use for generating the URL.</param>
            <param name="routeValues">The route data to use for generating the URL.</param>
            <param name="value">The value to format in the entity body.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.CreatedAtRoute`1.Value">
            <summary>
            Gets the object result.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.CreatedAtRoute`1.RouteName">
            <summary>
            Gets the name of the route to use for generating the URL.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.CreatedAtRoute`1.RouteValues">
            <summary>
            Gets the route data to use for generating the URL.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.CreatedAtRoute`1.StatusCode">
            <summary>
            Gets the HTTP status code: <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status201Created"/>
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.CreatedAtRoute`1.ExecuteAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.CreatedAtRoute`1.Microsoft#AspNetCore#Http#Metadata#IEndpointMetadataProvider#PopulateMetadata(System.Reflection.MethodInfo,Microsoft.AspNetCore.Builder.EndpointBuilder)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Http.HttpResults.Created`1">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Http.IResult"/> that on execution will write an object to the response
            with status code Created (201) and Location header.
            </summary>
            <typeparam name="TValue">The type of object that will be JSON serialized to the response body.</typeparam>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.Created`1.#ctor(System.String,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Http.HttpResults.Created"/> class with the values
            provided.
            </summary>
            <param name="location">The location at which the content has been created.</param>
            <param name="value">The value to format in the entity body.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.Created`1.#ctor(System.Uri,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Http.HttpResults.Created"/> class with the values
            provided.
            </summary>
            <param name="locationUri">The location at which the content has been created.</param>
            <param name="value">The value to format in the entity body.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.Created`1.Value">
            <summary>
            Gets the object result.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.Created`1.StatusCode">
            <summary>
            Gets the HTTP status code: <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status201Created"/>
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.Created`1.Location">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.Created`1.ExecuteAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.Created`1.Microsoft#AspNetCore#Http#Metadata#IEndpointMetadataProvider#PopulateMetadata(System.Reflection.MethodInfo,Microsoft.AspNetCore.Builder.EndpointBuilder)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Http.HttpResults.FileContentHttpResult">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.Http.IResult"/> that when executed will
            write a file from the content to the response.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.FileContentHttpResult.#ctor(System.ReadOnlyMemory{System.Byte},System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Http.HttpResults.FileContentHttpResult"/> instance with
            the provided <paramref name="fileContents"/> and the
            provided <paramref name="contentType"/>.
            </summary>
            <param name="fileContents">The bytes that represent the file contents.</param>
            <param name="contentType">The Content-Type of the file.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.FileContentHttpResult.#ctor(System.ReadOnlyMemory{System.Byte},System.String,System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Http.HttpResults.FileContentHttpResult"/> instance with
            the provided <paramref name="fileContents"/>, the provided <paramref name="contentType"/>
            and the provided <paramref name="fileDownloadName"/>.
            </summary>
            <param name="fileContents">The bytes that represent the file contents.</param>
            <param name="contentType">The Content-Type header of the response.</param>
            <param name="fileDownloadName">The suggested file name.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.FileContentHttpResult.#ctor(System.ReadOnlyMemory{System.Byte},System.String,System.String,System.Boolean,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Http.HttpResults.FileContentHttpResult"/> instance with the provided values.
            </summary>
            <param name="fileContents">The bytes that represent the file contents.</param>
            <param name="contentType">The Content-Type of the file.</param>
            <param name="fileDownloadName">The suggested file name.</param>
            <param name="enableRangeProcessing">Set to <c>true</c> to enable range requests processing.</param>
            <param name="lastModified">The <see cref="T:System.DateTimeOffset"/> of when the file was last modified.</param>
            <param name="entityTag">The <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue"/> associated with the file.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.FileContentHttpResult.ContentType">
            <summary>
            Gets the Content-Type header for the response.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.FileContentHttpResult.FileDownloadName">
            <summary>
            Gets the file name that will be used in the Content-Disposition header of the response.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.FileContentHttpResult.LastModified">
            <summary>
            Gets the last modified information associated with the file result.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.FileContentHttpResult.EntityTag">
            <summary>
            Gets the etag associated with the file result.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.FileContentHttpResult.EnableRangeProcessing">
            <summary>
            Gets the value that enables range processing for the file result.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.FileContentHttpResult.FileLength">
            <summary>
            Gets or sets the file length information .
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.FileContentHttpResult.FileContents">
            <summary>
            Gets or sets the file contents.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.FileContentHttpResult.ExecuteAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Http.HttpResults.FileStreamHttpResult">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.Http.IResult"/> that when executed will
            write a file from a stream to the response.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.FileStreamHttpResult.#ctor(System.IO.Stream,System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Http.HttpResults.FileStreamHttpResult"/> instance with
            the provided <paramref name="fileStream"/> and the
            provided <paramref name="contentType"/>.
            </summary>
            <param name="fileStream">The stream with the file.</param>
            <param name="contentType">The Content-Type of the file.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.FileStreamHttpResult.#ctor(System.IO.Stream,System.String,System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Http.HttpResults.FileStreamHttpResult"/> instance with
            the provided <paramref name="fileStream"/>, the provided <paramref name="contentType"/>
            and the provided <paramref name="fileDownloadName"/>.
            </summary>
            <param name="fileStream">The stream with the file.</param>
            <param name="contentType">The Content-Type header of the response.</param>
            <param name="fileDownloadName">The suggested file name.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.FileStreamHttpResult.#ctor(System.IO.Stream,System.String,System.String,System.Boolean,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Http.HttpResults.FileStreamHttpResult"/> instance with the provided values.
            </summary>
            <param name="fileStream">The stream with the file.</param>
            <param name="contentType">The Content-Type of the file.</param>
            <param name="fileDownloadName">The suggested file name.</param>
            <param name="enableRangeProcessing">Set to <c>true</c> to enable range requests processing.</param>
            <param name="lastModified">The <see cref="T:System.DateTimeOffset"/> of when the file was last modified.</param>
            <param name="entityTag">The <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue"/> associated with the file.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.FileStreamHttpResult.ContentType">
            <summary>
            Gets the Content-Type header for the response.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.FileStreamHttpResult.FileDownloadName">
            <summary>
            Gets the file name that will be used in the Content-Disposition header of the response.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.FileStreamHttpResult.LastModified">
            <summary>
            Gets the last modified information associated with the file result.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.FileStreamHttpResult.EntityTag">
            <summary>
            Gets the etag associated with the file result.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.FileStreamHttpResult.EnableRangeProcessing">
            <summary>
            Gets the value that enables range processing for the file result.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.FileStreamHttpResult.FileLength">
            <summary>
            Gets or sets the file length information .
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.FileStreamHttpResult.FileStream">
            <summary>
            Gets the stream with the file that will be sent back as the response.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.FileStreamHttpResult.ExecuteAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Http.HttpResults.ForbidHttpResult">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Http.IResult"/> that on execution invokes <see cref="M:HttpContext.ForbidAsync"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.ForbidHttpResult.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Http.HttpResults.ForbidHttpResult"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.ForbidHttpResult.#ctor(System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Http.HttpResults.ForbidHttpResult"/> with the
            specified authentication schemes.
            </summary>
            <param name="authenticationSchemes">The authentication schemes to challenge.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.ForbidHttpResult.#ctor(Microsoft.AspNetCore.Authentication.AuthenticationProperties)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Http.HttpResults.ForbidHttpResult"/> with the
            specified <paramref name="properties"/>.
            </summary>
            <param name="properties"><see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationProperties"/> used to perform the authentication
            challenge.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.ForbidHttpResult.#ctor(System.String,Microsoft.AspNetCore.Authentication.AuthenticationProperties)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Http.HttpResults.ForbidHttpResult"/> with the
            specified authentication scheme and <paramref name="properties"/>.
            </summary>
            <param name="authenticationScheme">The authentication schemes to challenge.</param>
            <param name="properties"><see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationProperties"/> used to perform the authentication
            challenge.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.ForbidHttpResult.#ctor(System.Collections.Generic.IList{System.String},Microsoft.AspNetCore.Authentication.AuthenticationProperties)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Http.HttpResults.ForbidHttpResult"/> with the
            specified authentication schemes and <paramref name="properties"/>.
            </summary>
            <param name="authenticationSchemes">The authentication scheme to challenge.</param>
            <param name="properties"><see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationProperties"/> used to perform the authentication
            challenge.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.ForbidHttpResult.AuthenticationSchemes">
            <summary>
            Gets the authentication schemes that are challenged.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.ForbidHttpResult.Properties">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationProperties"/> used to perform the authentication challenge.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.ForbidHttpResult.ExecuteAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Http.HttpResults.JsonHttpResult`1">
            <summary>
            An action result which formats the given object as JSON.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.JsonHttpResult`1.#ctor(`0,System.Text.Json.JsonSerializerOptions,System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="N:Microsoft.AspNetCore.Http.Json"/> class with the values.
            </summary>
            <param name="value">The value to format in the entity body.</param>
            <param name="jsonSerializerOptions">The serializer settings.</param>
            <param name="statusCode">The HTTP status code of the response.</param>
            <param name="contentType">The value for the <c>Content-Type</c> header</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.JsonHttpResult`1.JsonSerializerOptions">
            <summary>
            Gets or sets the serializer settings.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.JsonHttpResult`1.JsonTypeInfo">
            <summary>
            Gets or sets the serializer settings.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.JsonHttpResult`1.Value">
            <summary>
            Gets the object result.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.JsonHttpResult`1.ContentType">
            <summary>
            Gets the value for the <c>Content-Type</c> header.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.JsonHttpResult`1.StatusCode">
            <summary>
            Gets the HTTP status code.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.JsonHttpResult`1.ExecuteAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Http.HttpResults.NoContent">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.Http.IResult"/> that when executed will
            produce an HTTP response with the No Content (204) status code.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.NoContent.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Http.HttpResults.NoContent"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.NoContent.StatusCode">
            <summary>
            Gets the HTTP status code: <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status204NoContent"/>
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.NoContent.ExecuteAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.NoContent.Microsoft#AspNetCore#Http#Metadata#IEndpointMetadataProvider#PopulateMetadata(System.Reflection.MethodInfo,Microsoft.AspNetCore.Builder.EndpointBuilder)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Http.HttpResults.NotFound">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Http.IResult"/> that on execution will write an object to the response
            with Not Found (404) status code.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.NotFound.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Http.HttpResults.NotFound"/> class with the values.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.NotFound.StatusCode">
            <summary>
            Gets the HTTP status code: <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status404NotFound"/>
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.NotFound.ExecuteAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.NotFound.Microsoft#AspNetCore#Http#Metadata#IEndpointMetadataProvider#PopulateMetadata(System.Reflection.MethodInfo,Microsoft.AspNetCore.Builder.EndpointBuilder)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Http.HttpResults.NotFound`1">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Http.IResult"/> that on execution will write an object to the response
            with Not Found (404) status code.
            </summary>
            <typeparam name="TValue">The type of object that will be JSON serialized to the response body.</typeparam>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.NotFound`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Http.HttpResults.NotFound"/> class with the values.
            </summary>
            <param name="value">The value to format in the entity body.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.NotFound`1.Value">
            <summary>
            Gets the object result.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.NotFound`1.StatusCode">
            <summary>
            Gets the HTTP status code: <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status404NotFound"/>
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.NotFound`1.ExecuteAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.NotFound`1.Microsoft#AspNetCore#Http#Metadata#IEndpointMetadataProvider#PopulateMetadata(System.Reflection.MethodInfo,Microsoft.AspNetCore.Builder.EndpointBuilder)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Http.HttpResults.Ok">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Http.IResult"/> that on execution will write an object to the response
            with Ok (200) status code.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.Ok.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Http.HttpResults.Ok"/> class with the values.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.Ok.StatusCode">
            <summary>
            Gets the HTTP status code: <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status200OK"/>
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.Ok.ExecuteAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.Ok.Microsoft#AspNetCore#Http#Metadata#IEndpointMetadataProvider#PopulateMetadata(System.Reflection.MethodInfo,Microsoft.AspNetCore.Builder.EndpointBuilder)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Http.HttpResults.Ok`1">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Http.IResult"/> that on execution will write an object to the response
            with Ok (200) status code.
            </summary>
            <typeparam name="TValue">The type of object that will be JSON serialized to the response body.</typeparam>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.Ok`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Http.HttpResults.Ok"/> class with the values.
            </summary>
            <param name="value">The value to format in the entity body.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.Ok`1.Value">
            <summary>
            Gets the object result.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.Ok`1.StatusCode">
            <summary>
            Gets the HTTP status code: <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status200OK"/>
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.Ok`1.ExecuteAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.Ok`1.Microsoft#AspNetCore#Http#Metadata#IEndpointMetadataProvider#PopulateMetadata(System.Reflection.MethodInfo,Microsoft.AspNetCore.Builder.EndpointBuilder)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Http.HttpResults.PhysicalFileHttpResult">
            <summary>
            A <see cref="T:Microsoft.AspNetCore.Http.HttpResults.PhysicalFileHttpResult"/> on execution will write a file from disk to the response
            using mechanisms provided by the host.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.PhysicalFileHttpResult.#ctor(System.String,System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Http.HttpResults.PhysicalFileHttpResult"/> instance with
            the provided <paramref name="fileName"/> and the provided <paramref name="contentType"/>.
            </summary>
            <param name="fileName">The path to the file. The path must be an absolute path.</param>
            <param name="contentType">The Content-Type header of the response.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.PhysicalFileHttpResult.#ctor(System.String,System.String,System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Http.HttpResults.PhysicalFileHttpResult"/> instance with
            the provided <paramref name="fileName"/>, the provided <paramref name="contentType"/>
            and the provided <paramref name="fileDownloadName"/>.
            </summary>
            <param name="fileName">The path to the file. The path must be an absolute path.</param>
            <param name="contentType">The Content-Type header of the response.</param>
            <param name="fileDownloadName">The suggested file name.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.PhysicalFileHttpResult.#ctor(System.String,System.String,System.String,System.Boolean,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Http.HttpResults.PhysicalFileHttpResult"/> instance with the provided values.
            </summary>
            <param name="fileName">The path to the file. The path must be an absolute path.</param>
            <param name="contentType">The Content-Type header of the response.</param>
            <param name="fileDownloadName">The suggested file name.</param>
            <param name="enableRangeProcessing">Set to <c>true</c> to enable range requests processing.</param>
            <param name="lastModified">The <see cref="T:System.DateTimeOffset"/> of when the file was last modified.</param>
            <param name="entityTag">The <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue"/> associated with the file.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.PhysicalFileHttpResult.ContentType">
            <summary>
            Gets the Content-Type header for the response.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.PhysicalFileHttpResult.FileDownloadName">
            <summary>
            Gets the file name that will be used in the Content-Disposition header of the response.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.PhysicalFileHttpResult.LastModified">
            <summary>
            Gets the last modified information associated with the file result.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.PhysicalFileHttpResult.EntityTag">
            <summary>
            Gets the etag associated with the file result.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.PhysicalFileHttpResult.EnableRangeProcessing">
            <summary>
            Gets the value that enables range processing for the file result.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.PhysicalFileHttpResult.FileLength">
            <summary>
            Gets or sets the file length information .
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.PhysicalFileHttpResult.FileName">
            <summary>
            Gets or sets the path to the file that will be sent back as the response.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.PhysicalFileHttpResult.ExecuteAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Http.HttpResults.ProblemHttpResult">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Http.IResult"/> that on execution will write Problem Details
            HTTP API responses based on <see href="https://tools.ietf.org/html/rfc7807"/>
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.ProblemHttpResult.#ctor(Microsoft.AspNetCore.Mvc.ProblemDetails)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Http.HttpResults.ProblemHttpResult"/> instance with
            the provided <paramref name="problemDetails"/>.
            </summary>
            <param name="problemDetails">The <see cref="P:Microsoft.AspNetCore.Http.HttpResults.ProblemHttpResult.ProblemDetails"/> instance to format in the entity body.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.ProblemHttpResult.ProblemDetails">
            <summary>
            Gets the <see cref="P:Microsoft.AspNetCore.Http.HttpResults.ProblemHttpResult.ProblemDetails"/> instance.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.ProblemHttpResult.ContentType">
            <summary>
            Gets the value for the <c>Content-Type</c> header: <c>application/problem+json</c>
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.ProblemHttpResult.StatusCode">
            <summary>
            Gets the HTTP status code.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.ProblemHttpResult.ExecuteAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Http.HttpResults.PushStreamHttpResult">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.Http.IResult"/> that when executed will
            write a file from the writer callback to the response.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.PushStreamHttpResult.#ctor(System.Func{System.IO.Stream,System.Threading.Tasks.Task},System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Http.HttpResults.PushStreamHttpResult"/> instance with
            the provided <paramref name="streamWriterCallback"/> and the provided <paramref name="contentType"/>.
            </summary>
            <param name="streamWriterCallback">The stream writer callback.</param>
            <param name="contentType">The Content-Type header of the response.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.PushStreamHttpResult.#ctor(System.Func{System.IO.Stream,System.Threading.Tasks.Task},System.String,System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Http.HttpResults.PushStreamHttpResult"/> instance with
            the provided <paramref name="streamWriterCallback"/>, the provided <paramref name="contentType"/>
            and the provided <paramref name="fileDownloadName"/>.
            </summary>
            <param name="streamWriterCallback">The stream writer callback.</param>
            <param name="contentType">The Content-Type header of the response.</param>
            <param name="fileDownloadName">The suggested file name.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.PushStreamHttpResult.#ctor(System.Func{System.IO.Stream,System.Threading.Tasks.Task},System.String,System.String,System.Boolean,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Http.HttpResults.PushStreamHttpResult"/> instance with the provided values.
            </summary>
            <param name="streamWriterCallback">The stream writer callback.</param>
            <param name="contentType">The Content-Type header of the response.</param>
            <param name="fileDownloadName">The suggested file name.</param>
            <param name="enableRangeProcessing">Set to <c>true</c> to enable range requests processing.</param>
            <param name="lastModified">The <see cref="T:System.DateTimeOffset"/> of when the file was last modified.</param>
            <param name="entityTag">The <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue"/> associated with the file.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.PushStreamHttpResult.ContentType">
            <summary>
            Gets the Content-Type header for the response.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.PushStreamHttpResult.FileDownloadName">
            <summary>
            Gets the file name that will be used in the Content-Disposition header of the response.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.PushStreamHttpResult.LastModified">
            <summary>
            Gets the last modified information associated with the file result.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.PushStreamHttpResult.EntityTag">
            <summary>
            Gets the etag associated with the file result.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.PushStreamHttpResult.EnableRangeProcessing">
            <summary>
            Gets the value that enables range processing for the file result.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.PushStreamHttpResult.FileLength">
            <summary>
            Gets or sets the file length information .
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.PushStreamHttpResult.ExecuteAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Http.HttpResults.RedirectHttpResult">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Http.IResult"/> that returns a Found (302), Moved Permanently (301), Temporary Redirect (307),
            or Permanent Redirect (308) response with a Location header to the supplied URL.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.RedirectHttpResult.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Http.HttpResults.RedirectHttpResult"/> class with the values
            provided.
            </summary>
            <param name="url">The URL to redirect to.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.RedirectHttpResult.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Http.HttpResults.RedirectHttpResult"/> class with the values
            provided.
            </summary>
            <param name="url">The URL to redirect to.</param>
            <param name="permanent">Specifies whether the redirect should be permanent (301) or temporary (302).</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.RedirectHttpResult.#ctor(System.String,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Http.HttpResults.RedirectHttpResult"/> class with the values
            provided.
            </summary>
            <param name="url">The URL to redirect to.</param>
            <param name="permanent">Specifies whether the redirect should be permanent (301) or temporary (302).</param>
            <param name="preserveMethod">If set to true, make the temporary redirect (307)
            or permanent redirect (308) preserve the initial request method.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.RedirectHttpResult.#ctor(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Http.HttpResults.RedirectHttpResult"/> class with the values
            provided.
            </summary>
            <param name="url">The URL to redirect to.</param>
            <param name="permanent">Specifies whether the redirect should be permanent (301) or temporary (302).</param>
            <param name="preserveMethod">If set to true, make the temporary redirect (307)
            or permanent redirect (308) preserve the initial request method.</param>
            <param name="acceptLocalUrlOnly">If set to true, only local URLs are accepted
            and will throw an exception when the supplied URL is not considered local.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.RedirectHttpResult.Permanent">
            <summary>
            Gets the value that specifies that the redirect should be permanent if true or temporary if false.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.RedirectHttpResult.PreserveMethod">
            <summary>
            Gets an indication that the redirect preserves the initial request method.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.RedirectHttpResult.Url">
            <summary>
            Gets the URL to redirect to.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.RedirectHttpResult.AcceptLocalUrlOnly">
            <summary>
            Gets an indication that only local URLs are accepted.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.RedirectHttpResult.ExecuteAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Http.HttpResults.RedirectToRouteHttpResult">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Http.IResult"/> that returns a Found (302), Moved Permanently (301), Temporary Redirect (307),
            or Permanent Redirect (308) response with a Location header.
            Targets a registered route.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.RedirectToRouteHttpResult.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Http.HttpResults.RedirectToRouteHttpResult"/> with the values
            provided.
            </summary>
            <param name="routeValues">The parameters for the route.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.RedirectToRouteHttpResult.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Http.HttpResults.RedirectToRouteHttpResult"/> with the values
            provided.
            </summary>
            <param name="routeName">The name of the route.</param>
            <param name="routeValues">The parameters for the route.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.RedirectToRouteHttpResult.#ctor(System.String,System.Object,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Http.HttpResults.RedirectToRouteHttpResult"/> with the values
            provided.
            </summary>
            <param name="routeName">The name of the route.</param>
            <param name="routeValues">The parameters for the route.</param>
            <param name="permanent">If set to true, makes the redirect permanent (301).
            Otherwise a temporary redirect is used (302).</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.RedirectToRouteHttpResult.#ctor(System.String,System.Object,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Http.HttpResults.RedirectToRouteHttpResult"/> with the values
            provided.
            </summary>
            <param name="routeName">The name of the route.</param>
            <param name="routeValues">The parameters for the route.</param>
            <param name="permanent">If set to true, makes the redirect permanent (301).
            Otherwise a temporary redirect is used (302).</param>
            <param name="fragment">The fragment to add to the URL.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.RedirectToRouteHttpResult.#ctor(System.String,System.Object,System.Boolean,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Http.HttpResults.RedirectToRouteHttpResult"/> with the values
            provided.
            </summary>
            <param name="routeName">The name of the route.</param>
            <param name="routeValues">The parameters for the route.</param>
            <param name="permanent">If set to true, makes the redirect permanent (301).
            Otherwise a temporary redirect is used (302).</param>
            <param name="preserveMethod">If set to true, make the temporary redirect (307)
            or permanent redirect (308) preserve the initial request method.</param>
            <param name="fragment">The fragment to add to the URL.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.RedirectToRouteHttpResult.#ctor(System.String,Microsoft.AspNetCore.Routing.RouteValueDictionary,System.Boolean,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Http.HttpResults.RedirectToRouteHttpResult"/> with the values
            provided.
            </summary>
            <param name="routeName">The name of the route.</param>
            <param name="routeValues">The parameters for the route.</param>
            <param name="permanent">If set to true, makes the redirect permanent (301).
            Otherwise a temporary redirect is used (302).</param>
            <param name="preserveMethod">If set to true, make the temporary redirect (307)
            or permanent redirect (308) preserve the initial request method.</param>
            <param name="fragment">The fragment to add to the URL.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.RedirectToRouteHttpResult.RouteName">
            <summary>
            Gets the name of the route to use for generating the URL.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.RedirectToRouteHttpResult.RouteValues">
            <summary>
            Gets the route data to use for generating the URL.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.RedirectToRouteHttpResult.Permanent">
            <summary>
            Gets the value that specifies that the redirect should be permanent if true or temporary if false.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.RedirectToRouteHttpResult.PreserveMethod">
            <summary>
            Gets an indication that the redirect preserves the initial request method.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.RedirectToRouteHttpResult.Fragment">
            <summary>
            Gets the fragment to add to the URL.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.RedirectToRouteHttpResult.ExecuteAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Http.HttpResults.Results`2">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Http.IResult"/> that could be one of two different <see cref="T:Microsoft.AspNetCore.Http.IResult"/> types. On execution will
            execute the underlying <see cref="T:Microsoft.AspNetCore.Http.IResult"/> instance that was actually returned by the HTTP endpoint.
            </summary>
            <remarks>
            An instance of this type cannot be created explicitly. Use the implicit cast operators to create an instance
            from an instance of one of the declared type arguments, e.g.
            <code>Results&lt;Ok, BadRequest&gt; result = TypedResults.Ok();</code>
            </remarks>
            <typeparam name="TResult1">The first result type.</typeparam>
            <typeparam name="TResult2">The second result type.</typeparam>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.Results`2.Result">
            <summary>
            Gets the actual <see cref="T:Microsoft.AspNetCore.Http.IResult"/> returned by the <see cref="T:Microsoft.AspNetCore.Http.Endpoint"/> route handler delegate.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.Results`2.ExecuteAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.Results`2.op_Implicit(`0)~Microsoft.AspNetCore.Http.HttpResults.Results{`0,`1}">
            <summary>
            Converts the <typeparamref name="TResult1"/> to a <see cref="T:Microsoft.AspNetCore.Http.HttpResults.Results`2" />.
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.Results`2.op_Implicit(`1)~Microsoft.AspNetCore.Http.HttpResults.Results{`0,`1}">
            <summary>
            Converts the <typeparamref name="TResult2"/> to a <see cref="T:Microsoft.AspNetCore.Http.HttpResults.Results`2" />.
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.Results`2.Microsoft#AspNetCore#Http#Metadata#IEndpointMetadataProvider#PopulateMetadata(System.Reflection.MethodInfo,Microsoft.AspNetCore.Builder.EndpointBuilder)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Http.HttpResults.Results`3">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Http.IResult"/> that could be one of three different <see cref="T:Microsoft.AspNetCore.Http.IResult"/> types. On execution will
            execute the underlying <see cref="T:Microsoft.AspNetCore.Http.IResult"/> instance that was actually returned by the HTTP endpoint.
            </summary>
            <remarks>
            An instance of this type cannot be created explicitly. Use the implicit cast operators to create an instance
            from an instance of one of the declared type arguments, e.g.
            <code>Results&lt;Ok, BadRequest&gt; result = TypedResults.Ok();</code>
            </remarks>
            <typeparam name="TResult1">The first result type.</typeparam>
            <typeparam name="TResult2">The second result type.</typeparam>
            <typeparam name="TResult3">The third result type.</typeparam>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.Results`3.Result">
            <summary>
            Gets the actual <see cref="T:Microsoft.AspNetCore.Http.IResult"/> returned by the <see cref="T:Microsoft.AspNetCore.Http.Endpoint"/> route handler delegate.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.Results`3.ExecuteAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.Results`3.op_Implicit(`0)~Microsoft.AspNetCore.Http.HttpResults.Results{`0,`1,`2}">
            <summary>
            Converts the <typeparamref name="TResult1"/> to a <see cref="T:Microsoft.AspNetCore.Http.HttpResults.Results`3" />.
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.Results`3.op_Implicit(`1)~Microsoft.AspNetCore.Http.HttpResults.Results{`0,`1,`2}">
            <summary>
            Converts the <typeparamref name="TResult2"/> to a <see cref="T:Microsoft.AspNetCore.Http.HttpResults.Results`3" />.
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.Results`3.op_Implicit(`2)~Microsoft.AspNetCore.Http.HttpResults.Results{`0,`1,`2}">
            <summary>
            Converts the <typeparamref name="TResult3"/> to a <see cref="T:Microsoft.AspNetCore.Http.HttpResults.Results`3" />.
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.Results`3.Microsoft#AspNetCore#Http#Metadata#IEndpointMetadataProvider#PopulateMetadata(System.Reflection.MethodInfo,Microsoft.AspNetCore.Builder.EndpointBuilder)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Http.HttpResults.Results`4">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Http.IResult"/> that could be one of four different <see cref="T:Microsoft.AspNetCore.Http.IResult"/> types. On execution will
            execute the underlying <see cref="T:Microsoft.AspNetCore.Http.IResult"/> instance that was actually returned by the HTTP endpoint.
            </summary>
            <remarks>
            An instance of this type cannot be created explicitly. Use the implicit cast operators to create an instance
            from an instance of one of the declared type arguments, e.g.
            <code>Results&lt;Ok, BadRequest&gt; result = TypedResults.Ok();</code>
            </remarks>
            <typeparam name="TResult1">The first result type.</typeparam>
            <typeparam name="TResult2">The second result type.</typeparam>
            <typeparam name="TResult3">The third result type.</typeparam>
            <typeparam name="TResult4">The fourth result type.</typeparam>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.Results`4.Result">
            <summary>
            Gets the actual <see cref="T:Microsoft.AspNetCore.Http.IResult"/> returned by the <see cref="T:Microsoft.AspNetCore.Http.Endpoint"/> route handler delegate.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.Results`4.ExecuteAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.Results`4.op_Implicit(`0)~Microsoft.AspNetCore.Http.HttpResults.Results{`0,`1,`2,`3}">
            <summary>
            Converts the <typeparamref name="TResult1"/> to a <see cref="T:Microsoft.AspNetCore.Http.HttpResults.Results`4" />.
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.Results`4.op_Implicit(`1)~Microsoft.AspNetCore.Http.HttpResults.Results{`0,`1,`2,`3}">
            <summary>
            Converts the <typeparamref name="TResult2"/> to a <see cref="T:Microsoft.AspNetCore.Http.HttpResults.Results`4" />.
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.Results`4.op_Implicit(`2)~Microsoft.AspNetCore.Http.HttpResults.Results{`0,`1,`2,`3}">
            <summary>
            Converts the <typeparamref name="TResult3"/> to a <see cref="T:Microsoft.AspNetCore.Http.HttpResults.Results`4" />.
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.Results`4.op_Implicit(`3)~Microsoft.AspNetCore.Http.HttpResults.Results{`0,`1,`2,`3}">
            <summary>
            Converts the <typeparamref name="TResult4"/> to a <see cref="T:Microsoft.AspNetCore.Http.HttpResults.Results`4" />.
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.Results`4.Microsoft#AspNetCore#Http#Metadata#IEndpointMetadataProvider#PopulateMetadata(System.Reflection.MethodInfo,Microsoft.AspNetCore.Builder.EndpointBuilder)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Http.HttpResults.Results`5">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Http.IResult"/> that could be one of five different <see cref="T:Microsoft.AspNetCore.Http.IResult"/> types. On execution will
            execute the underlying <see cref="T:Microsoft.AspNetCore.Http.IResult"/> instance that was actually returned by the HTTP endpoint.
            </summary>
            <remarks>
            An instance of this type cannot be created explicitly. Use the implicit cast operators to create an instance
            from an instance of one of the declared type arguments, e.g.
            <code>Results&lt;Ok, BadRequest&gt; result = TypedResults.Ok();</code>
            </remarks>
            <typeparam name="TResult1">The first result type.</typeparam>
            <typeparam name="TResult2">The second result type.</typeparam>
            <typeparam name="TResult3">The third result type.</typeparam>
            <typeparam name="TResult4">The fourth result type.</typeparam>
            <typeparam name="TResult5">The fifth result type.</typeparam>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.Results`5.Result">
            <summary>
            Gets the actual <see cref="T:Microsoft.AspNetCore.Http.IResult"/> returned by the <see cref="T:Microsoft.AspNetCore.Http.Endpoint"/> route handler delegate.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.Results`5.ExecuteAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.Results`5.op_Implicit(`0)~Microsoft.AspNetCore.Http.HttpResults.Results{`0,`1,`2,`3,`4}">
            <summary>
            Converts the <typeparamref name="TResult1"/> to a <see cref="T:Microsoft.AspNetCore.Http.HttpResults.Results`5" />.
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.Results`5.op_Implicit(`1)~Microsoft.AspNetCore.Http.HttpResults.Results{`0,`1,`2,`3,`4}">
            <summary>
            Converts the <typeparamref name="TResult2"/> to a <see cref="T:Microsoft.AspNetCore.Http.HttpResults.Results`5" />.
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.Results`5.op_Implicit(`2)~Microsoft.AspNetCore.Http.HttpResults.Results{`0,`1,`2,`3,`4}">
            <summary>
            Converts the <typeparamref name="TResult3"/> to a <see cref="T:Microsoft.AspNetCore.Http.HttpResults.Results`5" />.
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.Results`5.op_Implicit(`3)~Microsoft.AspNetCore.Http.HttpResults.Results{`0,`1,`2,`3,`4}">
            <summary>
            Converts the <typeparamref name="TResult4"/> to a <see cref="T:Microsoft.AspNetCore.Http.HttpResults.Results`5" />.
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.Results`5.op_Implicit(`4)~Microsoft.AspNetCore.Http.HttpResults.Results{`0,`1,`2,`3,`4}">
            <summary>
            Converts the <typeparamref name="TResult5"/> to a <see cref="T:Microsoft.AspNetCore.Http.HttpResults.Results`5" />.
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.Results`5.Microsoft#AspNetCore#Http#Metadata#IEndpointMetadataProvider#PopulateMetadata(System.Reflection.MethodInfo,Microsoft.AspNetCore.Builder.EndpointBuilder)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Http.HttpResults.Results`6">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Http.IResult"/> that could be one of six different <see cref="T:Microsoft.AspNetCore.Http.IResult"/> types. On execution will
            execute the underlying <see cref="T:Microsoft.AspNetCore.Http.IResult"/> instance that was actually returned by the HTTP endpoint.
            </summary>
            <remarks>
            An instance of this type cannot be created explicitly. Use the implicit cast operators to create an instance
            from an instance of one of the declared type arguments, e.g.
            <code>Results&lt;Ok, BadRequest&gt; result = TypedResults.Ok();</code>
            </remarks>
            <typeparam name="TResult1">The first result type.</typeparam>
            <typeparam name="TResult2">The second result type.</typeparam>
            <typeparam name="TResult3">The third result type.</typeparam>
            <typeparam name="TResult4">The fourth result type.</typeparam>
            <typeparam name="TResult5">The fifth result type.</typeparam>
            <typeparam name="TResult6">The sixth result type.</typeparam>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.Results`6.Result">
            <summary>
            Gets the actual <see cref="T:Microsoft.AspNetCore.Http.IResult"/> returned by the <see cref="T:Microsoft.AspNetCore.Http.Endpoint"/> route handler delegate.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.Results`6.ExecuteAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.Results`6.op_Implicit(`0)~Microsoft.AspNetCore.Http.HttpResults.Results{`0,`1,`2,`3,`4,`5}">
            <summary>
            Converts the <typeparamref name="TResult1"/> to a <see cref="T:Microsoft.AspNetCore.Http.HttpResults.Results`6" />.
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.Results`6.op_Implicit(`1)~Microsoft.AspNetCore.Http.HttpResults.Results{`0,`1,`2,`3,`4,`5}">
            <summary>
            Converts the <typeparamref name="TResult2"/> to a <see cref="T:Microsoft.AspNetCore.Http.HttpResults.Results`6" />.
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.Results`6.op_Implicit(`2)~Microsoft.AspNetCore.Http.HttpResults.Results{`0,`1,`2,`3,`4,`5}">
            <summary>
            Converts the <typeparamref name="TResult3"/> to a <see cref="T:Microsoft.AspNetCore.Http.HttpResults.Results`6" />.
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.Results`6.op_Implicit(`3)~Microsoft.AspNetCore.Http.HttpResults.Results{`0,`1,`2,`3,`4,`5}">
            <summary>
            Converts the <typeparamref name="TResult4"/> to a <see cref="T:Microsoft.AspNetCore.Http.HttpResults.Results`6" />.
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.Results`6.op_Implicit(`4)~Microsoft.AspNetCore.Http.HttpResults.Results{`0,`1,`2,`3,`4,`5}">
            <summary>
            Converts the <typeparamref name="TResult5"/> to a <see cref="T:Microsoft.AspNetCore.Http.HttpResults.Results`6" />.
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.Results`6.op_Implicit(`5)~Microsoft.AspNetCore.Http.HttpResults.Results{`0,`1,`2,`3,`4,`5}">
            <summary>
            Converts the <typeparamref name="TResult6"/> to a <see cref="T:Microsoft.AspNetCore.Http.HttpResults.Results`6" />.
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.Results`6.Microsoft#AspNetCore#Http#Metadata#IEndpointMetadataProvider#PopulateMetadata(System.Reflection.MethodInfo,Microsoft.AspNetCore.Builder.EndpointBuilder)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Http.HttpResults.SignInHttpResult">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Http.IResult"/> that on execution invokes <see cref="M:HttpContext.SignInAsync"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.SignInHttpResult.#ctor(System.Security.Claims.ClaimsPrincipal)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Http.HttpResults.SignInHttpResult"/> with the
            default authentication scheme.
            </summary>
            <param name="principal">The claims principal containing the user claims.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.SignInHttpResult.#ctor(System.Security.Claims.ClaimsPrincipal,System.String,Microsoft.AspNetCore.Authentication.AuthenticationProperties)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Http.HttpResults.SignInHttpResult"/> with the
            specified authentication scheme and <paramref name="properties"/>.
            </summary>
            <param name="principal">The claims principal containing the user claims.</param>
            <param name="authenticationScheme">The authentication schemes to use when signing in the user.</param>
            <param name="properties"><see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationProperties"/> used to perform the sign-in operation.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.SignInHttpResult.AuthenticationScheme">
            <summary>
            Gets or sets the authentication scheme that is used to perform the sign-in operation.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.SignInHttpResult.Principal">
            <summary>
            Gets or sets the <see cref="T:System.Security.Claims.ClaimsPrincipal"/> containing the user claims.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.SignInHttpResult.Properties">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationProperties"/> used to perform the sign-in operation.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.SignInHttpResult.ExecuteAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Http.HttpResults.SignOutHttpResult">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Http.IResult"/> that on execution invokes <see cref="M:HttpContext.SignOutAsync"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.SignOutHttpResult.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Http.HttpResults.SignOutHttpResult"/> with the default sign out scheme.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.SignOutHttpResult.#ctor(System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Http.HttpResults.SignOutHttpResult"/> with the
            specified authentication schemes.
            </summary>
            <param name="authenticationSchemes">The authentication schemes to use when signing out the user.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.SignOutHttpResult.#ctor(System.String,Microsoft.AspNetCore.Authentication.AuthenticationProperties)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Http.HttpResults.SignOutHttpResult"/> with the
            specified authentication scheme and <paramref name="properties"/>.
            </summary>
            <param name="authenticationScheme">The authentication schemes to use when signing out the user.</param>
            <param name="properties"><see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationProperties"/> used to perform the sign-out operation.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.SignOutHttpResult.#ctor(System.Collections.Generic.IList{System.String},Microsoft.AspNetCore.Authentication.AuthenticationProperties)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Http.HttpResults.SignOutHttpResult"/> with the
            specified authentication schemes and <paramref name="properties"/>.
            </summary>
            <param name="authenticationSchemes">The authentication scheme to use when signing out the user.</param>
            <param name="properties"><see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationProperties"/> used to perform the sign-out operation.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.SignOutHttpResult.AuthenticationSchemes">
            <summary>
            Gets the authentication schemes that are challenged.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.SignOutHttpResult.Properties">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationProperties"/> used to perform the sign-out operation.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.SignOutHttpResult.ExecuteAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Http.HttpResults.StatusCodeHttpResult">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.Http.IResult"/> that when executed will
            produce an HTTP response with the given response status code.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.StatusCodeHttpResult.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Http.HttpResults.StatusCodeHttpResult"/> class
            with the given <paramref name="statusCode"/>.
            </summary>
            <param name="statusCode">The HTTP status code of the response.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.StatusCodeHttpResult.StatusCode">
            <summary>
            Gets the HTTP status code.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.StatusCodeHttpResult.ExecuteAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Sets the status code on the HTTP response.
            </summary>
            <param name="httpContext">The <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/> for the current request.</param>
            <returns>A task that represents the asynchronous execute operation.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Http.HttpResults.UnauthorizedHttpResult">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.Http.IResult"/> that when executed will
            produce an HTTP response with the No Unauthorized (401) status code.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.UnauthorizedHttpResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Http.HttpResults.UnauthorizedHttpResult"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.UnauthorizedHttpResult.StatusCode">
            <summary>
            Gets the HTTP status code: <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status401Unauthorized"/>
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.UnauthorizedHttpResult.ExecuteAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Http.HttpResults.UnprocessableEntity">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Http.IResult"/> that on execution will write an object to the response
            with Unprocessable Entity (422) status code.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.UnprocessableEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Http.HttpResults.UnprocessableEntity"/> class with the values
            provided.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.UnprocessableEntity.StatusCode">
            <summary>
            Gets the HTTP status code: <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status422UnprocessableEntity"/>
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.UnprocessableEntity.ExecuteAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.UnprocessableEntity.Microsoft#AspNetCore#Http#Metadata#IEndpointMetadataProvider#PopulateMetadata(System.Reflection.MethodInfo,Microsoft.AspNetCore.Builder.EndpointBuilder)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Http.HttpResults.UnprocessableEntity`1">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Http.IResult"/> that on execution will write an object to the response
            with Unprocessable Entity (422) status code.
            </summary>
            <typeparam name="TValue">The type of object that will be JSON serialized to the response body.</typeparam>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.UnprocessableEntity`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Http.HttpResults.UnprocessableEntity"/> class with the values
            provided.
            </summary>
            <param name="value">The value to format in the entity body.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.UnprocessableEntity`1.Value">
            <summary>
            Gets the object result.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.UnprocessableEntity`1.StatusCode">
            <summary>
            Gets the HTTP status code: <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status422UnprocessableEntity"/>
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.UnprocessableEntity`1.ExecuteAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.UnprocessableEntity`1.Microsoft#AspNetCore#Http#Metadata#IEndpointMetadataProvider#PopulateMetadata(System.Reflection.MethodInfo,Microsoft.AspNetCore.Builder.EndpointBuilder)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Http.HttpResults.Utf8ContentHttpResult">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Http.HttpResults.Utf8ContentHttpResult"/> that when executed
            will produce a response with content.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.Utf8ContentHttpResult.#ctor(System.ReadOnlySpan{System.Byte},System.String,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Http.HttpResults.Utf8ContentHttpResult"/> class with the values
            </summary>
            <param name="utf8Content">The value to format in the entity body.</param>
            <param name="statusCode">The HTTP status code of the response.</param>
            <param name="contentType">The Content-Type header for the response.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.Utf8ContentHttpResult.ResponseContent">
            <summary>
            Gets the content representing the body of the response.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.Utf8ContentHttpResult.ContentType">
            <summary>
            Gets the Content-Type header for the response.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.Utf8ContentHttpResult.StatusCode">
            <summary>
            Gets the HTTP status code.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.Utf8ContentHttpResult.ExecuteAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Writes the content to the HTTP response.
            </summary>
            <param name="httpContext">The <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/> for the current request.</param>
            <returns>A task that represents the asynchronous execute operation.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Http.HttpResults.ValidationProblem">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Http.IResult"/> that on execution will write Problem Details
            HTTP API responses based on https://tools.ietf.org/html/rfc7807
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.ValidationProblem.ProblemDetails">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Http.HttpValidationProblemDetails"/> instance.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.ValidationProblem.ContentType">
            <summary>
            Gets the value for the <c>Content-Type</c> header: <c>application/problem+json</c>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.ValidationProblem.StatusCode">
            <summary>
            Gets the HTTP status code: <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status400BadRequest"/>
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.ValidationProblem.ExecuteAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.ValidationProblem.Microsoft#AspNetCore#Http#Metadata#IEndpointMetadataProvider#PopulateMetadata(System.Reflection.MethodInfo,Microsoft.AspNetCore.Builder.EndpointBuilder)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Http.HttpResults.VirtualFileHttpResult">
            <summary>
            A <see cref="T:Microsoft.AspNetCore.Http.IResult" /> that on execution writes the file specified
            using a virtual path to the response using mechanisms provided by the host.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.VirtualFileHttpResult.#ctor(System.String,System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Http.HttpResults.VirtualFileHttpResult"/> instance with
            the provided <paramref name="fileName"/> and the provided <paramref name="contentType"/>.
            </summary>
            <param name="fileName">The path to the file. The path must be an absolute path.</param>
            <param name="contentType">The Content-Type header of the response.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.VirtualFileHttpResult.#ctor(System.String,System.String,System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Http.HttpResults.VirtualFileHttpResult"/> instance with
            the provided <paramref name="fileName"/>, the provided <paramref name="contentType"/>
            and the provided <paramref name="fileDownloadName"/>.
            </summary>
            <param name="fileName">The path to the file. The path must be an absolute path.</param>
            <param name="contentType">The Content-Type header of the response.</param>
            <param name="fileDownloadName">The suggested file name.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.VirtualFileHttpResult.#ctor(System.String,System.String,System.String,System.Boolean,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Http.HttpResults.VirtualFileHttpResult"/> instance with the provided values.
            </summary>
            <param name="fileName">The path to the file. The path must be an absolute path.</param>
            <param name="contentType">The Content-Type header of the response.</param>
            <param name="fileDownloadName">The suggested file name.</param>
            <param name="enableRangeProcessing">Set to <c>true</c> to enable range requests processing.</param>
            <param name="lastModified">The <see cref="T:System.DateTimeOffset"/> of when the file was last modified.</param>
            <param name="entityTag">The <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue"/> associated with the file.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.VirtualFileHttpResult.ContentType">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.VirtualFileHttpResult.FileDownloadName">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.VirtualFileHttpResult.LastModified">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.VirtualFileHttpResult.EntityTag">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.VirtualFileHttpResult.EnableRangeProcessing">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.VirtualFileHttpResult.FileLength">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Http.HttpResults.VirtualFileHttpResult.FileName">
            <summary>
            Gets or sets the path to the file that will be sent back as the response.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.HttpResults.VirtualFileHttpResult.ExecuteAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Http.IResultExtensions">
            <summary>
            Provides an interface to registering external methods that provide
            custom IResult instances.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Http.ResultExtensions">
            <summary>
            Implements an interface for registering external methods that provide
            custom IResult instances.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Http.Results">
            <summary>
            A factory for <see cref="T:Microsoft.AspNetCore.Http.IResult"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Results.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.Collections.Generic.IList{System.String})">
            <summary>
            Creates an <see cref="T:Microsoft.AspNetCore.Http.IResult"/> that on execution invokes <see cref="M:Microsoft.AspNetCore.Authentication.AuthenticationHttpContextExtensions.ChallengeAsync(Microsoft.AspNetCore.Http.HttpContext,System.String,Microsoft.AspNetCore.Authentication.AuthenticationProperties)" />.
            <para>
            The behavior of this method depends on the <see cref="T:Microsoft.AspNetCore.Authentication.IAuthenticationService"/> in use.
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status401Unauthorized"/> and <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status403Forbidden"/>
            are among likely status results.
            </para>
            </summary>
            <param name="properties"><see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationProperties"/> used to perform the authentication
            challenge.</param>
            <param name="authenticationSchemes">The authentication schemes to challenge.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.IResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Results.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.Collections.Generic.IList{System.String})">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Http.IResult"/> that on execution invokes <see cref="M:Microsoft.AspNetCore.Authentication.AuthenticationHttpContextExtensions.ForbidAsync(Microsoft.AspNetCore.Http.HttpContext,System.String,Microsoft.AspNetCore.Authentication.AuthenticationProperties)"/>.
            <para>
            By default, executing this result returns a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status403Forbidden"/>. Some authentication schemes, such as cookies,
            will convert <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status403Forbidden"/> to a redirect to show a login page.
            </para>
            </summary>
            <param name="properties"><see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationProperties"/> used to perform the authentication
            challenge.</param>
            <param name="authenticationSchemes">The authentication schemes to challenge.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.IResult"/> for the response.</returns>
            <remarks>
            Some authentication schemes, such as cookies, will convert <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status403Forbidden"/> to
            a redirect to show a login page.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Results.SignIn(System.Security.Claims.ClaimsPrincipal,Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String)">
            <summary>
            Creates an <see cref="T:Microsoft.AspNetCore.Http.IResult"/> that on execution invokes <see cref="M:Microsoft.AspNetCore.Authentication.AuthenticationHttpContextExtensions.SignInAsync(Microsoft.AspNetCore.Http.HttpContext,System.String,System.Security.Claims.ClaimsPrincipal,Microsoft.AspNetCore.Authentication.AuthenticationProperties)" />.
            </summary>
            <param name="principal">The <see cref="T:System.Security.Claims.ClaimsPrincipal"/> containing the user claims.</param>
            <param name="properties"><see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationProperties"/> used to perform the sign-in operation.</param>
            <param name="authenticationScheme">The authentication scheme to use for the sign-in operation.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.IResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Results.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.Collections.Generic.IList{System.String})">
            <summary>
            Creates an <see cref="T:Microsoft.AspNetCore.Http.IResult"/> that on execution invokes <see cref="M:Microsoft.AspNetCore.Authentication.AuthenticationHttpContextExtensions.SignOutAsync(Microsoft.AspNetCore.Http.HttpContext,System.String,Microsoft.AspNetCore.Authentication.AuthenticationProperties)" />.
            </summary>
            <param name="properties"><see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationProperties"/> used to perform the sign-out operation.</param>
            <param name="authenticationSchemes">The authentication scheme to use for the sign-out operation.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.IResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Results.Content(System.String,System.String,System.Text.Encoding)">
            <summary>
            Writes the <paramref name="content"/> string to the HTTP response.
            <para>
            This is equivalent to <see cref="M:Microsoft.AspNetCore.Http.Results.Text(System.String,System.String,System.Text.Encoding)"/>.
            </para>
            </summary>
            <param name="content">The content to write to the response.</param>
            <param name="contentType">The content type (MIME type).</param>
            <param name="contentEncoding">The content encoding.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.IResult"/> object for the response.</returns>
            <remarks>
            If encoding is provided by both the 'charset' and the <paramref name="contentEncoding"/> parameters, then
            the <paramref name="contentEncoding"/> parameter is chosen as the final encoding.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Results.Content(System.String,System.String,System.Text.Encoding,System.Nullable{System.Int32})">
            <summary>
            Writes the <paramref name="content"/> string to the HTTP response.
            <para>
            This is equivalent to <see cref="M:Microsoft.AspNetCore.Http.Results.Text(System.String,System.String,System.Text.Encoding,System.Nullable{System.Int32})"/>.
            </para>
            </summary>
            <param name="content">The content to write to the response.</param>
            <param name="contentType">The content type (MIME type).</param>
            <param name="contentEncoding">The content encoding.</param>
            <param name="statusCode">The status code to return.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.IResult"/> object for the response.</returns>
            <remarks>
            If encoding is provided by both the 'charset' and the <paramref name="contentEncoding"/> parameters, then
            the <paramref name="contentEncoding"/> parameter is chosen as the final encoding.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Results.Text(System.String,System.String,System.Text.Encoding)">
            <summary>
            Writes the <paramref name="content"/> string to the HTTP response.
            <para>
            This is an alias for <see cref="M:Microsoft.AspNetCore.Http.Results.Content(System.String,System.String,System.Text.Encoding)"/>.
            </para>
            </summary>
            <param name="content">The content to write to the response.</param>
            <param name="contentType">The content type (MIME type).</param>
            <param name="contentEncoding">The content encoding.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.IResult"/> object for the response.</returns>
            <remarks>
            If encoding is provided by both the 'charset' and the <paramref name="contentEncoding"/> parameters, then
            the <paramref name="contentEncoding"/> parameter is chosen as the final encoding.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Results.Text(System.String,System.String,System.Text.Encoding,System.Nullable{System.Int32})">
            <summary>
            Writes the <paramref name="content"/> string to the HTTP response.
            <para>
            This is an alias for <see cref="M:Microsoft.AspNetCore.Http.Results.Content(System.String,System.String,System.Text.Encoding,System.Nullable{System.Int32})"/>.
            </para>
            </summary>
            <param name="content">The content to write to the response.</param>
            <param name="contentType">The content type (MIME type).</param>
            <param name="contentEncoding">The content encoding.</param>
            <param name="statusCode">The status code to return.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.IResult"/> object for the response.</returns>
            <remarks>
            If encoding is provided by both the 'charset' and the <paramref name="contentEncoding"/> parameters, then
            the <paramref name="contentEncoding"/> parameter is chosen as the final encoding.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Results.Text(System.ReadOnlySpan{System.Byte},System.String,System.Nullable{System.Int32})">
            <summary>
            Writes the <paramref name="utf8Content"/> UTF-8 encoded text to the HTTP response.
            </summary>
            <param name="utf8Content">The content to write to the response.</param>
            <param name="contentType">The content type (MIME type).</param>
            <param name="statusCode">The status code to return.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.IResult"/> object for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Results.Content(System.String,Microsoft.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Writes the <paramref name="content"/> string to the HTTP response.
            </summary>
            <param name="content">The content to write to the response.</param>
            <param name="contentType">The content type (MIME type).</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.IResult"/> object for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Results.Json(System.Object,System.Text.Json.JsonSerializerOptions,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Http.IResult"/> that serializes the specified <paramref name="data"/> object to JSON.
            </summary>
            <param name="data">The object to write as JSON.</param>
            <param name="options">The serializer options to use when serializing the value.</param>
            <param name="contentType">The content-type to set on the response.</param>
            <param name="statusCode">The status code to set on the response.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.JsonHttpResult`1"/> that serializes the specified <paramref name="data"/>
            as JSON format for the response.</returns>
            <remarks>Callers should cache an instance of serializer settings to avoid
            recreating cached data with each call.</remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Results.Json(System.Object,System.Text.Json.Serialization.Metadata.JsonTypeInfo,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Http.IResult"/> that serializes the specified <paramref name="data"/> object to JSON.
            </summary>
            <param name="data">The object to write as JSON.</param>
            <param name="jsonTypeInfo">Metadata about the type to convert.</param>
            <param name="contentType">The content-type to set on the response.</param>
            <param name="statusCode">The status code to set on the response.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.JsonHttpResult`1"/> that serializes the specified <paramref name="data"/>
            as JSON format for the response.</returns>
            <remarks>Callers should cache an instance of serializer settings to avoid
            recreating cached data with each call.</remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Results.Json(System.Object,System.Type,System.Text.Json.Serialization.JsonSerializerContext,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Http.IResult"/> that serializes the specified <paramref name="data"/> object to JSON.
            </summary>
            <param name="data">The object to write as JSON.</param>
            <param name="type">The type of object to write.</param>
            <param name="context">A metadata provider for serializable types.</param>
            <param name="contentType">The content-type to set on the response.</param>
            <param name="statusCode">The status code to set on the response.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.JsonHttpResult`1"/> that serializes the specified <paramref name="data"/>
            as JSON format for the response.</returns>
            <remarks>Callers should cache an instance of serializer settings to avoid
            recreating cached data with each call.</remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Results.Json``1(``0,System.Text.Json.JsonSerializerOptions,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Http.IResult"/> that serializes the specified <paramref name="data"/> object to JSON.
            </summary>
            <param name="data">The object to write as JSON.</param>
            <param name="options">The serializer options to use when serializing the value.</param>
            <param name="contentType">The content-type to set on the response.</param>
            <param name="statusCode">The status code to set on the response.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.JsonHttpResult`1"/> that serializes the specified <paramref name="data"/>
            as JSON format for the response.</returns>
            <remarks>Callers should cache an instance of serializer settings to avoid
            recreating cached data with each call.</remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Results.Json``1(``0,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0},System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Http.IResult"/> that serializes the specified <paramref name="data"/> object to JSON.
            </summary>
            <param name="data">The object to write as JSON.</param>
            <param name="jsonTypeInfo">Metadata about the type to convert.</param>
            <param name="contentType">The content-type to set on the response.</param>
            <param name="statusCode">The status code to set on the response.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.JsonHttpResult`1"/> that serializes the specified <paramref name="data"/>
            as JSON format for the response.</returns>
            <remarks>Callers should cache an instance of serializer settings to avoid
            recreating cached data with each call.</remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Results.Json``1(``0,System.Text.Json.Serialization.JsonSerializerContext,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Http.IResult"/> that serializes the specified <paramref name="data"/> object to JSON.
            </summary>
            <param name="data">The object to write as JSON.</param>
            <param name="context">A metadata provider for serializable types.</param>
            <param name="contentType">The content-type to set on the response.</param>
            <param name="statusCode">The status code to set on the response.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.JsonHttpResult`1"/> that serializes the specified <paramref name="data"/>
            as JSON format for the response.</returns>
            <remarks>Callers should cache an instance of serializer settings to avoid
            recreating cached data with each call.</remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Results.File(System.Byte[],System.String,System.String,System.Boolean,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)">
            <summary>
            Writes the byte-array content to the response.
            <para>
            This supports range requests (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status206PartialContent"/> or
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status416RangeNotSatisfiable"/> if the range is not satisfiable).
            </para>
            <para>
            This API is an alias for <see cref="M:Microsoft.AspNetCore.Http.Results.Bytes(System.Byte[],System.String,System.String,System.Boolean,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)"/>.</para>
            </summary>
            <param name="fileContents">The file contents.</param>
            <param name="contentType">The Content-Type of the file.</param>
            <param name="fileDownloadName">The suggested file name.</param>
            <param name="enableRangeProcessing">Set to <c>true</c> to enable range requests processing.</param>
            <param name="lastModified">The <see cref="T:System.DateTimeOffset"/> of when the file was last modified.</param>
            <param name="entityTag">The <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue"/> associated with the file.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.IResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Results.Bytes(System.Byte[],System.String,System.String,System.Boolean,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)">
            <summary>
            Writes the byte-array content to the response.
            <para>
            This supports range requests (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status206PartialContent"/> or
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status416RangeNotSatisfiable"/> if the range is not satisfiable).
            </para>
            <para>
            This API is an alias for <see cref="M:Microsoft.AspNetCore.Http.Results.File(System.Byte[],System.String,System.String,System.Boolean,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)"/>.</para>
            </summary>
            <param name="contents">The file contents.</param>
            <param name="contentType">The Content-Type of the file.</param>
            <param name="fileDownloadName">The suggested file name.</param>
            <param name="enableRangeProcessing">Set to <c>true</c> to enable range requests processing.</param>
            <param name="lastModified">The <see cref="T:System.DateTimeOffset"/> of when the file was last modified.</param>
            <param name="entityTag">The <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue"/> associated with the file.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.IResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Results.Bytes(System.ReadOnlyMemory{System.Byte},System.String,System.String,System.Boolean,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)">
            <summary>
            Writes the byte-array content to the response.
            <para>
            This supports range requests (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status206PartialContent"/> or
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status416RangeNotSatisfiable"/> if the range is not satisfiable).
            </para>
            </summary>
            <param name="contents">The file contents.</param>
            <param name="contentType">The Content-Type of the file.</param>
            <param name="fileDownloadName">The suggested file name.</param>
            <param name="enableRangeProcessing">Set to <c>true</c> to enable range requests processing.</param>
            <param name="lastModified">The <see cref="T:System.DateTimeOffset"/> of when the file was last modified.</param>
            <param name="entityTag">The <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue"/> associated with the file.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.IResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Results.File(System.IO.Stream,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)">
            <summary>
            Writes the specified <see cref="T:System.IO.Stream"/> to the response.
            <para>
            This supports range requests (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status206PartialContent"/> or
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status416RangeNotSatisfiable"/> if the range is not satisfiable).
            </para>
            <para>
            This API is an alias for <see cref="M:Microsoft.AspNetCore.Http.Results.Stream(System.IO.Stream,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)"/>.
            </para>
            </summary>
            <param name="fileStream">The <see cref="T:System.IO.Stream"/> with the contents of the file.</param>
            <param name="contentType">The Content-Type of the file.</param>
            <param name="fileDownloadName">The the file name to be used in the <c>Content-Disposition</c> header.</param>
            <param name="lastModified">The <see cref="T:System.DateTimeOffset"/> of when the file was last modified.
            Used to configure the <c>Last-Modified</c> response header and perform conditional range requests.</param>
            <param name="entityTag">The <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue"/> to be configure the <c>ETag</c> response header
            and perform conditional requests.</param>
            <param name="enableRangeProcessing">Set to <c>true</c> to enable range requests processing.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.IResult"/> for the response.</returns>
            <remarks>
            The <paramref name="fileStream" /> parameter is disposed after the response is sent.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Results.Stream(System.IO.Stream,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)">
            <summary>
            Writes the specified <see cref="T:System.IO.Stream"/> to the response.
            <para>
            This supports range requests (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status206PartialContent"/> or
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status416RangeNotSatisfiable"/> if the range is not satisfiable).
            </para>
            <para>
            This API is an alias for <see cref="M:Microsoft.AspNetCore.Http.Results.File(System.IO.Stream,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)"/>.
            </para>
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> to write to the response.</param>
            <param name="contentType">The <c>Content-Type</c> of the response. Defaults to <c>application/octet-stream</c>.</param>
            <param name="fileDownloadName">The the file name to be used in the <c>Content-Disposition</c> header.</param>
            <param name="lastModified">The <see cref="T:System.DateTimeOffset"/> of when the file was last modified.
            Used to configure the <c>Last-Modified</c> response header and perform conditional range requests.</param>
            <param name="entityTag">The <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue"/> to be configure the <c>ETag</c> response header
            and perform conditional requests.</param>
            <param name="enableRangeProcessing">Set to <c>true</c> to enable range requests processing.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.IResult"/> for the response.</returns>
            <remarks>
            The <paramref name="stream" /> parameter is disposed after the response is sent.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Results.Stream(System.IO.Pipelines.PipeReader,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)">
            <summary>
            Writes the contents of specified <see cref="T:System.IO.Pipelines.PipeReader"/> to the response.
            <para>
            This supports range requests (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status206PartialContent"/> or
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status416RangeNotSatisfiable"/> if the range is not satisfiable).
            </para>
            </summary>
            <param name="pipeReader">The <see cref="T:System.IO.Pipelines.PipeReader"/> to write to the response.</param>
            <param name="contentType">The <c>Content-Type</c> of the response. Defaults to <c>application/octet-stream</c>.</param>
            <param name="fileDownloadName">The the file name to be used in the <c>Content-Disposition</c> header.</param>
            <param name="lastModified">The <see cref="T:System.DateTimeOffset"/> of when the file was last modified.
            Used to configure the <c>Last-Modified</c> response header and perform conditional range requests.</param>
            <param name="entityTag">The <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue"/> to be configure the <c>ETag</c> response header
            and perform conditional requests.</param>
            <param name="enableRangeProcessing">Set to <c>true</c> to enable range requests processing.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.IResult"/> for the response.</returns>
            <remarks>
            The <paramref name="pipeReader" /> parameter is completed after the response is sent.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Results.Stream(System.Func{System.IO.Stream,System.Threading.Tasks.Task},System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)">
            <summary>
            Allows writing directly to the response body.
            <para>
            This supports range requests (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status206PartialContent"/> or
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status416RangeNotSatisfiable"/> if the range is not satisfiable).
            </para>
            </summary>
            <param name="streamWriterCallback">The callback that allows users to write directly to the response body.</param>
            <param name="contentType">The <c>Content-Type</c> of the response. Defaults to <c>application/octet-stream</c>.</param>
            <param name="fileDownloadName">The the file name to be used in the <c>Content-Disposition</c> header.</param>
            <param name="lastModified">The <see cref="T:System.DateTimeOffset"/> of when the file was last modified.
            Used to configure the <c>Last-Modified</c> response header and perform conditional range requests.</param>
            <param name="entityTag">The <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue"/> to be configure the <c>ETag</c> response header
            and perform conditional requests.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.IResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Results.File(System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)">
            <summary>
            Writes the file at the specified <paramref name="path"/> to the response.
            <para>
            This supports range requests (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status206PartialContent"/> or
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status416RangeNotSatisfiable"/> if the range is not satisfiable).
            </para>
            </summary>
            <param name="path">The path to the file. When not rooted, resolves the path relative to <see cref="P:Microsoft.AspNetCore.Hosting.IWebHostEnvironment.WebRootFileProvider"/>.</param>
            <param name="contentType">The Content-Type of the file.</param>
            <param name="fileDownloadName">The suggested file name.</param>
            <param name="lastModified">The <see cref="T:System.DateTimeOffset"/> of when the file was last modified.</param>
            <param name="entityTag">The <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue"/> associated with the file.</param>
            <param name="enableRangeProcessing">Set to <c>true</c> to enable range requests processing.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.IResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Results.Redirect(System.String,System.Boolean,System.Boolean)">
            <summary>
            Redirects to the specified <paramref name="url"/>.
            <list type="bullet">
            <item>
            <description>When <paramref name="permanent"/> and <paramref name="preserveMethod"/> are set, sets the <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status308PermanentRedirect"/> status code.</description>
            </item>
            <item>
            <description>When <paramref name="preserveMethod"/> is set, sets the <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status307TemporaryRedirect"/> status code.</description>
            </item>
            <item>
            <description>When <paramref name="permanent"/> is set, sets the <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status301MovedPermanently"/> status code.</description>
            </item>
            <item>
            <description>Otherwise, configures <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status302Found"/>.</description>
            </item>
            </list>
            </summary>
            <param name="url">The URL to redirect to.</param>
            <param name="permanent">Specifies whether the redirect should be permanent (301) or temporary (302).</param>
            <param name="preserveMethod">If set to true, make the temporary redirect (307) or permanent redirect (308) preserve the initial request method.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.IResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Results.LocalRedirect(System.String,System.Boolean,System.Boolean)">
            <summary>
            Redirects to the specified <paramref name="localUrl"/>.
            <list type="bullet">
            <item>
            <description>When <paramref name="permanent"/> and <paramref name="preserveMethod"/> are set, sets the <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status308PermanentRedirect"/> status code.</description>
            </item>
            <item>
            <description>When <paramref name="preserveMethod"/> is set, sets the <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status307TemporaryRedirect"/> status code.</description>
            </item>
            <item>
            <description>When <paramref name="permanent"/> is set, sets the <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status301MovedPermanently"/> status code.</description>
            </item>
            <item>
            <description>Otherwise, configures <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status302Found"/>.</description>
            </item>
            </list>
            </summary>
            <param name="localUrl">The local URL to redirect to.</param>
            <param name="permanent">Specifies whether the redirect should be permanent (301) or temporary (302).</param>
            <param name="preserveMethod">If set to true, make the temporary redirect (307) or permanent redirect (308) preserve the initial request method.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.IResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Results.RedirectToRoute(System.String,System.Object,System.Boolean,System.Boolean,System.String)">
            <summary>
            Redirects to the specified route.
            <list type="bullet">
            <item>
            <description>When <paramref name="permanent"/> and <paramref name="preserveMethod"/> are set, sets the <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status308PermanentRedirect"/> status code.</description>
            </item>
            <item>
            <description>When <paramref name="preserveMethod"/> is set, sets the <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status307TemporaryRedirect"/> status code.</description>
            </item>
            <item>
            <description>When <paramref name="permanent"/> is set, sets the <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status301MovedPermanently"/> status code.</description>
            </item>
            <item>
            <description>Otherwise, configures <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status302Found"/>.</description>
            </item>
            </list>
            </summary>
            <param name="routeName">The name of the route.</param>
            <param name="routeValues">The parameters for a route.</param>
            <param name="permanent">Specifies whether the redirect should be permanent (301) or temporary (302).</param>
            <param name="preserveMethod">If set to true, make the temporary redirect (307) or permanent redirect (308) preserve the initial request method.</param>
            <param name="fragment">The fragment to add to the URL.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.IResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Results.RedirectToRoute(System.String,Microsoft.AspNetCore.Routing.RouteValueDictionary,System.Boolean,System.Boolean,System.String)">
            <summary>
            Redirects to the specified route.
            <list type="bullet">
            <item>
            <description>When <paramref name="permanent"/> and <paramref name="preserveMethod"/> are set, sets the <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status308PermanentRedirect"/> status code.</description>
            </item>
            <item>
            <description>When <paramref name="preserveMethod"/> is set, sets the <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status307TemporaryRedirect"/> status code.</description>
            </item>
            <item>
            <description>When <paramref name="permanent"/> is set, sets the <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status301MovedPermanently"/> status code.</description>
            </item>
            <item>
            <description>Otherwise, configures <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status302Found"/>.</description>
            </item>
            </list>
            </summary>
            <param name="routeName">The name of the route.</param>
            <param name="routeValues">The parameters for a route.</param>
            <param name="permanent">Specifies whether the redirect should be permanent (301) or temporary (302).</param>
            <param name="preserveMethod">If set to true, make the temporary redirect (307) or permanent redirect (308) preserve the initial request method.</param>
            <param name="fragment">The fragment to add to the URL.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.IResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Results.StatusCode(System.Int32)">
            <summary>
            Creates an <see cref="T:Microsoft.AspNetCore.Http.IResult"/> object by specifying a <paramref name="statusCode"/>.
            </summary>
            <param name="statusCode">The status code to set on the response.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.IResult"/> object for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Results.NotFound(System.Object)">
            <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status404NotFound"/> response.
            </summary>
            <param name="value">The value to be included in the HTTP response body.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.IResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Results.NotFound``1(``0)">
            <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status404NotFound"/> response.
            </summary>
            <param name="value">The value to be included in the HTTP response body.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.IResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Results.Unauthorized">
            <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status401Unauthorized"/> response.
            </summary>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.IResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Results.BadRequest(System.Object)">
            <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status400BadRequest"/> response.
            </summary>
            <param name="error">An error object to be included in the HTTP response body.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.IResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Results.BadRequest``1(``0)">
            <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status400BadRequest"/> response.
            </summary>
            <param name="error">An error object to be included in the HTTP response body.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.IResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Results.Conflict(System.Object)">
            <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status409Conflict"/> response.
            </summary>
            <param name="error">An error object to be included in the HTTP response body.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.IResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Results.Conflict``1(``0)">
            <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status409Conflict"/> response.
            </summary>
            <param name="error">An error object to be included in the HTTP response body.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.IResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Results.NoContent">
            <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status204NoContent"/> response.
            </summary>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.IResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Results.Ok(System.Object)">
            <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status200OK"/> response.
            </summary>
            <param name="value">The value to be included in the HTTP response body.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.IResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Results.Ok``1(``0)">
            <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status200OK"/> response.
            </summary>
            <param name="value">The value to be included in the HTTP response body.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.IResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Results.UnprocessableEntity(System.Object)">
            <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status422UnprocessableEntity"/> response.
            </summary>
            <param name="error">An error object to be included in the HTTP response body.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.IResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Results.UnprocessableEntity``1(``0)">
            <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status422UnprocessableEntity"/> response.
            </summary>
            <param name="error">An error object to be included in the HTTP response body.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.IResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Results.Problem(System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Produces a <see cref="T:Microsoft.AspNetCore.Mvc.ProblemDetails"/> response.
            </summary>
            <param name="statusCode">The value for <see cref="P:Microsoft.AspNetCore.Mvc.ProblemDetails.Status" />.</param>
            <param name="detail">The value for <see cref="P:Microsoft.AspNetCore.Mvc.ProblemDetails.Detail" />.</param>
            <param name="instance">The value for <see cref="P:Microsoft.AspNetCore.Mvc.ProblemDetails.Instance" />.</param>
            <param name="title">The value for <see cref="P:Microsoft.AspNetCore.Mvc.ProblemDetails.Title" />.</param>
            <param name="type">The value for <see cref="P:Microsoft.AspNetCore.Mvc.ProblemDetails.Type" />.</param>
            <param name="extensions">The value for <see cref="P:Microsoft.AspNetCore.Mvc.ProblemDetails.Extensions" />.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.IResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Results.Problem(Microsoft.AspNetCore.Mvc.ProblemDetails)">
            <summary>
            Produces a <see cref="T:Microsoft.AspNetCore.Mvc.ProblemDetails"/> response.
            </summary>
            <param name="problemDetails">The <see cref="T:Microsoft.AspNetCore.Mvc.ProblemDetails"/>  object to produce a response from.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.IResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Results.ValidationProblem(System.Collections.Generic.IDictionary{System.String,System.String[]},System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status400BadRequest"/> response
            with a <see cref="T:Microsoft.AspNetCore.Http.HttpValidationProblemDetails"/> value.
            </summary>
            <param name="errors">One or more validation errors.</param>
            <param name="detail">The value for <see cref="P:Microsoft.AspNetCore.Mvc.ProblemDetails.Detail" />.</param>
            <param name="instance">The value for <see cref="P:Microsoft.AspNetCore.Mvc.ProblemDetails.Instance" />.</param>
            <param name="statusCode">The status code.</param>
            <param name="title">The value for <see cref="P:Microsoft.AspNetCore.Mvc.ProblemDetails.Title" />. Defaults to "One or more validation errors occurred."</param>
            <param name="type">The value for <see cref="P:Microsoft.AspNetCore.Mvc.ProblemDetails.Type" />.</param>
            <param name="extensions">The value for <see cref="P:Microsoft.AspNetCore.Mvc.ProblemDetails.Extensions" />.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.IResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Results.Created">
            <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status201Created"/> response.
            </summary>   
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.IResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Results.Created(System.String,System.Object)">
            <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status201Created"/> response.
            </summary>
            <param name="uri">The URI at which the content has been created.</param>
            <param name="value">The value to be included in the HTTP response body.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.IResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Results.Created``1(System.String,``0)">
            <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status201Created"/> response.
            </summary>
            <param name="uri">The URI at which the content has been created.</param>
            <param name="value">The value to be included in the HTTP response body.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.IResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Results.Created(System.Uri,System.Object)">
            <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status201Created"/> response.
            </summary>
            <param name="uri">The URI at which the content has been created.</param>
            <param name="value">The value to be included in the HTTP response body.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.IResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Results.Created``1(System.Uri,``0)">
            <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status201Created"/> response.
            </summary>
            <param name="uri">The URI at which the content has been created.</param>
            <param name="value">The value to be included in the HTTP response body.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.IResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Results.CreatedAtRoute(System.String,System.Object,System.Object)">
            <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status201Created"/> response.
            </summary>
            <param name="routeName">The name of the route to use for generating the URL.</param>
            <param name="routeValues">The route data to use for generating the URL.</param>
            <param name="value">The value to be included in the HTTP response body.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.IResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Results.CreatedAtRoute(System.String,Microsoft.AspNetCore.Routing.RouteValueDictionary,System.Object)">
            <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status201Created"/> response.
            </summary>
            <param name="routeName">The name of the route to use for generating the URL.</param>
            <param name="routeValues">The route data to use for generating the URL.</param>
            <param name="value">The value to be included in the HTTP response body.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.IResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Results.CreatedAtRoute``1(System.String,System.Object,``0)">
            <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status201Created"/> response.
            </summary>
            <param name="routeName">The name of the route to use for generating the URL.</param>
            <param name="routeValues">The route data to use for generating the URL.</param>
            <param name="value">The value to be included in the HTTP response body.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.IResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Results.CreatedAtRoute``1(System.String,Microsoft.AspNetCore.Routing.RouteValueDictionary,``0)">
            <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status201Created"/> response.
            </summary>
            <param name="routeName">The name of the route to use for generating the URL.</param>
            <param name="routeValues">The route data to use for generating the URL.</param>
            <param name="value">The value to be included in the HTTP response body.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.IResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Results.Accepted(System.String,System.Object)">
            <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status202Accepted"/> response.
            </summary>
            <param name="uri">The URI with the location at which the status of requested content can be monitored.</param>
            <param name="value">The optional content value to format in the response body.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.IResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Results.Accepted``1(System.String,``0)">
            <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status202Accepted"/> response.
            </summary>
            <param name="uri">The URI with the location at which the status of requested content can be monitored.</param>
            <param name="value">The optional content value to format in the response body.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.IResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Results.AcceptedAtRoute(System.String,System.Object,System.Object)">
            <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status202Accepted"/> response.
            </summary>
            <param name="routeName">The name of the route to use for generating the URL.</param>
            <param name="routeValues">The route data to use for generating the URL.</param>
            <param name="value">The optional content value to format in the response body.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.IResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Results.AcceptedAtRoute(System.String,Microsoft.AspNetCore.Routing.RouteValueDictionary,System.Object)">
            <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status202Accepted"/> response.
            </summary>
            <param name="routeName">The name of the route to use for generating the URL.</param>
            <param name="routeValues">The route data to use for generating the URL.</param>
            <param name="value">The optional content value to format in the response body.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.IResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Results.AcceptedAtRoute``1(System.String,System.Object,``0)">
            <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status202Accepted"/> response.
            </summary>
            <param name="routeName">The name of the route to use for generating the URL.</param>
            <param name="routeValues">The route data to use for generating the URL.</param>
            <param name="value">The optional content value to format in the response body.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.IResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Results.AcceptedAtRoute``1(System.String,Microsoft.AspNetCore.Routing.RouteValueDictionary,``0)">
            <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status202Accepted"/> response.
            </summary>
            <param name="routeName">The name of the route to use for generating the URL.</param>
            <param name="routeValues">The route data to use for generating the URL.</param>
            <param name="value">The optional content value to format in the response body.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.IResult"/> for the response.</returns>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.Results.Empty">
            <summary>
            Produces an empty result response, that when executed will do nothing.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.Results.Extensions">
            <summary>
            Provides a container for external libraries to extend
            the default `Results` set with their own samples.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Http.TypedResults">
            <summary>
            A typed factory for <see cref="T:Microsoft.AspNetCore.Http.IResult"/> types in <see cref="N:Microsoft.AspNetCore.Http.HttpResults"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.TypedResults.Challenge(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.Collections.Generic.IList{System.String})">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Http.HttpResults.ChallengeHttpResult"/> that on execution invokes <see cref="M:Microsoft.AspNetCore.Authentication.AuthenticationHttpContextExtensions.ChallengeAsync(Microsoft.AspNetCore.Http.HttpContext,System.String,Microsoft.AspNetCore.Authentication.AuthenticationProperties)" />.
            <para>
            The behavior of this method depends on the <see cref="T:Microsoft.AspNetCore.Authentication.IAuthenticationService"/> in use.
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status401Unauthorized"/> and <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status403Forbidden"/>
            are among likely status results.
            </para>
            </summary>
            <param name="properties"><see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationProperties"/> used to perform the authentication
            challenge.</param>
            <param name="authenticationSchemes">The authentication schemes to challenge.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.ChallengeHttpResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.TypedResults.Forbid(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.Collections.Generic.IList{System.String})">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Http.HttpResults.ForbidHttpResult"/> that on execution invokes <see cref="M:Microsoft.AspNetCore.Authentication.AuthenticationHttpContextExtensions.ForbidAsync(Microsoft.AspNetCore.Http.HttpContext,System.String,Microsoft.AspNetCore.Authentication.AuthenticationProperties)"/>.
            <para>
            By default, executing this result returns a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status403Forbidden"/>. Some authentication schemes, such as cookies,
            will convert <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status403Forbidden"/> to a redirect to show a login page.
            </para>
            </summary>
            <remarks>
            Some authentication schemes, such as cookies, will convert <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status403Forbidden"/> to
            a redirect to show a login page.
            </remarks>
            <param name="properties"><see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationProperties"/> used to perform the authentication
            challenge.</param>
            <param name="authenticationSchemes">The authentication schemes to challenge.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.ForbidHttpResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.TypedResults.SignIn(System.Security.Claims.ClaimsPrincipal,Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.String)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Http.HttpResults.SignInHttpResult"/> that on execution invokes <see cref="M:Microsoft.AspNetCore.Authentication.AuthenticationHttpContextExtensions.SignInAsync(Microsoft.AspNetCore.Http.HttpContext,System.String,System.Security.Claims.ClaimsPrincipal,Microsoft.AspNetCore.Authentication.AuthenticationProperties)" />.
            </summary>
            <param name="principal">The <see cref="T:System.Security.Claims.ClaimsPrincipal"/> containing the user claims.</param>
            <param name="properties"><see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationProperties"/> used to perform the sign-in operation.</param>
            <param name="authenticationScheme">The authentication scheme to use for the sign-in operation.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.SignInHttpResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.TypedResults.SignOut(Microsoft.AspNetCore.Authentication.AuthenticationProperties,System.Collections.Generic.IList{System.String})">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Http.HttpResults.SignOutHttpResult"/> that on execution invokes <see cref="M:Microsoft.AspNetCore.Authentication.AuthenticationHttpContextExtensions.SignOutAsync(Microsoft.AspNetCore.Http.HttpContext,System.String,Microsoft.AspNetCore.Authentication.AuthenticationProperties)" />.
            </summary>
            <param name="properties"><see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationProperties"/> used to perform the sign-out operation.</param>
            <param name="authenticationSchemes">The authentication scheme to use for the sign-out operation.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.SignOutHttpResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.TypedResults.Content(System.String,System.String,System.Text.Encoding)">
            <summary>
            Writes the <paramref name="content"/> string to the HTTP response.
            <para>
            This is equivalent to <see cref="M:Microsoft.AspNetCore.Http.TypedResults.Text(System.String,System.String,System.Text.Encoding)"/>.
            </para>
            </summary>
            <remarks>
            If encoding is provided by both the 'charset' and the <paramref name="contentEncoding"/> parameters, then
            the <paramref name="contentEncoding"/> parameter is chosen as the final encoding.
            </remarks>
            <param name="content">The content to write to the response.</param>
            <param name="contentType">The content type (MIME type).</param>
            <param name="contentEncoding">The content encoding.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.ContentHttpResult"/> object for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.TypedResults.Content(System.String,System.String,System.Text.Encoding,System.Nullable{System.Int32})">
            <summary>
            Writes the <paramref name="content"/> string to the HTTP response.
            <para>
            This is equivalent to <see cref="M:Microsoft.AspNetCore.Http.TypedResults.Text(System.String,System.String,System.Text.Encoding,System.Nullable{System.Int32})"/>.
            </para>
            </summary>
            <remarks>
            If encoding is provided by both the 'charset' and the <paramref name="contentEncoding"/> parameters, then
            the <paramref name="contentEncoding"/> parameter is chosen as the final encoding.
            </remarks>
            <param name="content">The content to write to the response.</param>
            <param name="contentType">The content type (MIME type).</param>
            <param name="contentEncoding">The content encoding.</param>
            <param name="statusCode">The status code to return.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.ContentHttpResult"/> object for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.TypedResults.Text(System.String,System.String,System.Text.Encoding)">
            <summary>
            Writes the <paramref name="content"/> string to the HTTP response.
            <para>
            This is an alias for <see cref="M:Microsoft.AspNetCore.Http.TypedResults.Content(System.String,System.String,System.Text.Encoding)"/>.
            </para>
            </summary>
            <remarks>
            If encoding is provided by both the 'charset' and the <paramref name="contentEncoding"/> parameters, then
            the <paramref name="contentEncoding"/> parameter is chosen as the final encoding.
            </remarks>
            <param name="content">The content to write to the response.</param>
            <param name="contentType">The content type (MIME type).</param>
            <param name="contentEncoding">The content encoding.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.ContentHttpResult"/> object for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.TypedResults.Text(System.ReadOnlySpan{System.Byte},System.String,System.Nullable{System.Int32})">
            <summary>
            Writes the <paramref name="utf8Content"/> UTF8 text content to the HTTP response.
            </summary>
            <param name="utf8Content">The content to write to the response.</param>
            <param name="contentType">The content type (MIME type).</param>
            <param name="statusCode">The status code to return.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.Utf8ContentHttpResult"/> object for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.TypedResults.Text(System.String,System.String,System.Text.Encoding,System.Nullable{System.Int32})">
            <summary>
            Writes the <paramref name="content"/> string to the HTTP response.
            <para>
            This is an alias for <see cref="M:Microsoft.AspNetCore.Http.TypedResults.Content(System.String,System.String,System.Text.Encoding,System.Nullable{System.Int32})"/>.
            </para>
            </summary>
            <remarks>
            If encoding is provided by both the 'charset' and the <paramref name="contentEncoding"/> parameters, then
            the <paramref name="contentEncoding"/> parameter is chosen as the final encoding.
            </remarks>
            <param name="content">The content to write to the response.</param>
            <param name="contentType">The content type (MIME type).</param>
            <param name="contentEncoding">The content encoding.</param>
            <param name="statusCode">The status code to return.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.ContentHttpResult"/> object for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.TypedResults.Content(System.String,Microsoft.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Writes the <paramref name="content"/> string to the HTTP response.
            </summary>
            <param name="content">The content to write to the response.</param>
            <param name="contentType">The content type (MIME type).</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.ContentHttpResult"/> object for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.TypedResults.Json``1(``0,System.Text.Json.JsonSerializerOptions,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Http.HttpResults.JsonHttpResult`1"/> that serializes the specified <paramref name="data"/> object to JSON.
            </summary>
            <remarks>Callers should cache an instance of serializer settings to avoid
            recreating cached data with each call.</remarks>
            <typeparam name="TValue">The type of object that will be JSON serialized to the response body.</typeparam>
            <param name="data">The object to write as JSON.</param>
            <param name="options">The serializer options to use when serializing the value.</param>
            <param name="contentType">The content-type to set on the response.</param>
            <param name="statusCode">The status code to set on the response.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.JsonHttpResult`1"/> that serializes the specified <paramref name="data"/>
            as JSON format for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.TypedResults.Json``1(``0,System.Text.Json.Serialization.Metadata.JsonTypeInfo{``0},System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Http.HttpResults.JsonHttpResult`1"/> that serializes the specified <paramref name="data"/> object to JSON.
            </summary>
            <typeparam name="TValue">The type of object that will be JSON serialized to the response body.</typeparam>
            <param name="data">The object to write as JSON.</param>
            <param name="jsonTypeInfo">Metadata about the type to convert.</param>
            <param name="contentType">The content-type to set on the response.</param>
            <param name="statusCode">The status code to set on the response.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.JsonHttpResult`1"/> that serializes the specified <paramref name="data"/>
            as JSON format for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.TypedResults.Json``1(``0,System.Text.Json.Serialization.JsonSerializerContext,System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Http.HttpResults.JsonHttpResult`1"/> that serializes the specified <paramref name="data"/> object to JSON.
            </summary>
            <typeparam name="TValue">The type of object that will be JSON serialized to the response body.</typeparam>
            <param name="data">The object to write as JSON.</param>
            <param name="context">A metadata provider for serializable types.</param>
            <param name="contentType">The content-type to set on the response.</param>
            <param name="statusCode">The status code to set on the response.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.JsonHttpResult`1"/> that serializes the specified <paramref name="data"/>
            as JSON format for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.TypedResults.File(System.Byte[],System.String,System.String,System.Boolean,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)">
            <summary>
            Writes the byte-array content to the response.
            <para>
            This supports range requests (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status206PartialContent"/> or
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status416RangeNotSatisfiable"/> if the range is not satisfiable).
            </para>
            <para>
            This API is an alias for <see cref="M:Microsoft.AspNetCore.Http.TypedResults.Bytes(System.Byte[],System.String,System.String,System.Boolean,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)"/>.</para>
            </summary>
            <param name="fileContents">The file contents.</param>
            <param name="contentType">The Content-Type of the file.</param>
            <param name="fileDownloadName">The suggested file name.</param>
            <param name="enableRangeProcessing">Set to <c>true</c> to enable range requests processing.</param>
            <param name="lastModified">The <see cref="T:System.DateTimeOffset"/> of when the file was last modified.</param>
            <param name="entityTag">The <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue"/> associated with the file.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.FileContentHttpResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.TypedResults.Bytes(System.Byte[],System.String,System.String,System.Boolean,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)">
            <summary>
            Writes the byte-array content to the response.
            <para>
            This supports range requests (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status206PartialContent"/> or
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status416RangeNotSatisfiable"/> if the range is not satisfiable).
            </para>
            <para>
            This API is an alias for <see cref="M:Microsoft.AspNetCore.Http.TypedResults.File(System.Byte[],System.String,System.String,System.Boolean,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)"/>.</para>
            </summary>
            <param name="contents">The file contents.</param>
            <param name="contentType">The Content-Type of the file.</param>
            <param name="fileDownloadName">The suggested file name.</param>
            <param name="enableRangeProcessing">Set to <c>true</c> to enable range requests processing.</param>
            <param name="lastModified">The <see cref="T:System.DateTimeOffset"/> of when the file was last modified.</param>
            <param name="entityTag">The <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue"/> associated with the file.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.FileContentHttpResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.TypedResults.Bytes(System.ReadOnlyMemory{System.Byte},System.String,System.String,System.Boolean,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)">
            <summary>
            Writes the byte-array content to the response.
            <para>
            This supports range requests (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status206PartialContent"/> or
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status416RangeNotSatisfiable"/> if the range is not satisfiable).
            </para>
            </summary>
            <param name="contents">The file contents.</param>
            <param name="contentType">The Content-Type of the file.</param>
            <param name="fileDownloadName">The suggested file name.</param>
            <param name="enableRangeProcessing">Set to <c>true</c> to enable range requests processing.</param>
            <param name="lastModified">The <see cref="T:System.DateTimeOffset"/> of when the file was last modified.</param>
            <param name="entityTag">The <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue"/> associated with the file.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.FileContentHttpResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.TypedResults.File(System.IO.Stream,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)">
            <summary>
            Writes the specified <see cref="T:System.IO.Stream"/> to the response.
            <para>
            This supports range requests (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status206PartialContent"/> or
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status416RangeNotSatisfiable"/> if the range is not satisfiable).
            </para>
            <para>
            This API is an alias for <see cref="M:Microsoft.AspNetCore.Http.TypedResults.Stream(System.IO.Stream,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)"/>.
            </para>
            </summary>
            <remarks>
            The <paramref name="fileStream" /> parameter is disposed after the response is sent.
            </remarks>
            <param name="fileStream">The <see cref="T:System.IO.Stream"/> with the contents of the file.</param>
            <param name="contentType">The Content-Type of the file.</param>
            <param name="fileDownloadName">The the file name to be used in the <c>Content-Disposition</c> header.</param>
            <param name="lastModified">The <see cref="T:System.DateTimeOffset"/> of when the file was last modified.
            Used to configure the <c>Last-Modified</c> response header and perform conditional range requests.</param>
            <param name="entityTag">The <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue"/> to be configure the <c>ETag</c> response header
            and perform conditional requests.</param>
            <param name="enableRangeProcessing">Set to <c>true</c> to enable range requests processing.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.FileStreamHttpResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.TypedResults.Stream(System.IO.Stream,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)">
            <summary>
            Writes the specified <see cref="T:System.IO.Stream"/> to the response.
            <para>
            This supports range requests (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status206PartialContent"/> or
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status416RangeNotSatisfiable"/> if the range is not satisfiable).
            </para>
            <para>
            This API is an alias for <see cref="M:Microsoft.AspNetCore.Http.TypedResults.File(System.IO.Stream,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)"/>.
            </para>
            </summary>
            <remarks>
            The <paramref name="stream" /> parameter is disposed after the response is sent.
            </remarks>
            <param name="stream">The <see cref="T:System.IO.Stream"/> to write to the response.</param>
            <param name="contentType">The <c>Content-Type</c> of the response. Defaults to <c>application/octet-stream</c>.</param>
            <param name="fileDownloadName">The the file name to be used in the <c>Content-Disposition</c> header.</param>
            <param name="lastModified">The <see cref="T:System.DateTimeOffset"/> of when the file was last modified.
            Used to configure the <c>Last-Modified</c> response header and perform conditional range requests.</param>
            <param name="entityTag">The <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue"/> to be configure the <c>ETag</c> response header
            and perform conditional requests.</param>
            <param name="enableRangeProcessing">Set to <c>true</c> to enable range requests processing.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.FileStreamHttpResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.TypedResults.Stream(System.IO.Pipelines.PipeReader,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)">
            <summary>
            Writes the contents of the specified <see cref="T:System.IO.Pipelines.PipeReader"/> to the response.
            <para>
            This supports range requests (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status206PartialContent"/> or
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status416RangeNotSatisfiable"/> if the range is not satisfiable).
            </para>
            </summary>
            <remarks>
            The <paramref name="pipeReader" /> parameter is completed after the response is sent.
            </remarks>
            <param name="pipeReader">The <see cref="T:System.IO.Pipelines.PipeReader"/> to write to the response.</param>
            <param name="contentType">The <c>Content-Type</c> of the response. Defaults to <c>application/octet-stream</c>.</param>
            <param name="fileDownloadName">The the file name to be used in the <c>Content-Disposition</c> header.</param>
            <param name="lastModified">The <see cref="T:System.DateTimeOffset"/> of when the file was last modified.
            Used to configure the <c>Last-Modified</c> response header and perform conditional range requests.</param>
            <param name="entityTag">The <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue"/> to be configure the <c>ETag</c> response header
            and perform conditional requests.</param>
            <param name="enableRangeProcessing">Set to <c>true</c> to enable range requests processing.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.FileStreamHttpResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.TypedResults.Stream(System.Func{System.IO.Stream,System.Threading.Tasks.Task},System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue)">
            <summary>
            Allows writing directly to the response body.
            <para>
            This supports range requests (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status206PartialContent"/> or
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status416RangeNotSatisfiable"/> if the range is not satisfiable).
            </para>
            </summary>
            <param name="streamWriterCallback">The callback that allows users to write directly to the response body.</param>
            <param name="contentType">The <c>Content-Type</c> of the response. Defaults to <c>application/octet-stream</c>.</param>
            <param name="fileDownloadName">The the file name to be used in the <c>Content-Disposition</c> header.</param>
            <param name="lastModified">The <see cref="T:System.DateTimeOffset"/> of when the file was last modified.
            Used to configure the <c>Last-Modified</c> response header and perform conditional range requests.</param>
            <param name="entityTag">The <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue"/> to be configure the <c>ETag</c> response header
            and perform conditional requests.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.PushStreamHttpResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.TypedResults.PhysicalFile(System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)">
            <summary>
            Writes the file at the specified <paramref name="path"/> to the response.
            <para>
            This supports range requests (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status206PartialContent"/> or
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status416RangeNotSatisfiable"/> if the range is not satisfiable).
            </para>
            </summary>
            <param name="path">The path to the file. When not rooted, resolves the path relative to <see cref="P:Microsoft.AspNetCore.Hosting.IWebHostEnvironment.WebRootFileProvider"/>.</param>
            <param name="contentType">The Content-Type of the file.</param>
            <param name="fileDownloadName">The suggested file name.</param>
            <param name="lastModified">The <see cref="T:System.DateTimeOffset"/> of when the file was last modified.</param>
            <param name="entityTag">The <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue"/> associated with the file.</param>
            <param name="enableRangeProcessing">Set to <c>true</c> to enable range requests processing.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.PhysicalFileHttpResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.TypedResults.VirtualFile(System.String,System.String,System.String,System.Nullable{System.DateTimeOffset},Microsoft.Net.Http.Headers.EntityTagHeaderValue,System.Boolean)">
            <summary>
            Writes the file at the specified <paramref name="path"/> to the response.
            <para>
            This supports range requests (<see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status206PartialContent"/> or
            <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status416RangeNotSatisfiable"/> if the range is not satisfiable).
            </para>
            </summary>
            <param name="path">The path to the file. When not rooted, resolves the path relative to <see cref="P:Microsoft.AspNetCore.Hosting.IWebHostEnvironment.WebRootFileProvider"/>.</param>
            <param name="contentType">The Content-Type of the file.</param>
            <param name="fileDownloadName">The suggested file name.</param>
            <param name="lastModified">The <see cref="T:System.DateTimeOffset"/> of when the file was last modified.</param>
            <param name="entityTag">The <see cref="T:Microsoft.Net.Http.Headers.EntityTagHeaderValue"/> associated with the file.</param>
            <param name="enableRangeProcessing">Set to <c>true</c> to enable range requests processing.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.VirtualFileHttpResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.TypedResults.Redirect(System.String,System.Boolean,System.Boolean)">
            <summary>
            Redirects to the specified <paramref name="url"/>.
            <list type="bullet">
            <item><description>When <paramref name="permanent"/> and <paramref name="preserveMethod"/> are set, sets the <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status308PermanentRedirect"/> status code.</description></item>
            <item><description>When <paramref name="preserveMethod"/> is set, sets the <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status307TemporaryRedirect"/> status code.</description></item>
            <item><description>When <paramref name="permanent"/> is set, sets the <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status301MovedPermanently"/> status code.</description></item>
            <item>Otherwise, configures <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status302Found"/>.</item>
            </list>
            </summary>
            <param name="url">The URL to redirect to.</param>
            <param name="permanent">Specifies whether the redirect should be permanent (301) or temporary (302).</param>
            <param name="preserveMethod">If set to true, make the temporary redirect (307) or permanent redirect (308) preserve the initial request method.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.RedirectHttpResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.TypedResults.LocalRedirect(System.String,System.Boolean,System.Boolean)">
            <summary>
            Redirects to the specified <paramref name="localUrl"/>.
            <list type="bullet">
            <item><description>When <paramref name="permanent"/> and <paramref name="preserveMethod"/> are set, sets the <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status308PermanentRedirect"/> status code.</description></item>
            <item><description>When <paramref name="preserveMethod"/> is set, sets the <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status307TemporaryRedirect"/> status code.</description></item>
            <item><description>When <paramref name="permanent"/> is set, sets the <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status301MovedPermanently"/> status code.</description></item>
            <item>Otherwise, configures <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status302Found"/>.</item>
            </list>
            </summary>
            <param name="localUrl">The local URL to redirect to.</param>
            <param name="permanent">Specifies whether the redirect should be permanent (301) or temporary (302).</param>
            <param name="preserveMethod">If set to true, make the temporary redirect (307) or permanent redirect (308) preserve the initial request method.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.RedirectHttpResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.TypedResults.RedirectToRoute(System.String,System.Object,System.Boolean,System.Boolean,System.String)">
            <summary>
            Redirects to the specified route.
            <list type="bullet">
            <item><description>When <paramref name="permanent"/> and <paramref name="preserveMethod"/> are set, sets the <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status308PermanentRedirect"/> status code.</description></item>
            <item><description>When <paramref name="preserveMethod"/> is set, sets the <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status307TemporaryRedirect"/> status code.</description></item>
            <item><description>When <paramref name="permanent"/> is set, sets the <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status301MovedPermanently"/> status code.</description></item>
            <item><description>Otherwise, configures <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status302Found"/>.</description></item>
            </list>
            </summary>
            <param name="routeName">The name of the route.</param>
            <param name="routeValues">The parameters for a route.</param>
            <param name="permanent">Specifies whether the redirect should be permanent (301) or temporary (302).</param>
            <param name="preserveMethod">If set to true, make the temporary redirect (307) or permanent redirect (308) preserve the initial request method.</param>
            <param name="fragment">The fragment to add to the URL.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.RedirectToRouteHttpResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.TypedResults.RedirectToRoute(System.String,Microsoft.AspNetCore.Routing.RouteValueDictionary,System.Boolean,System.Boolean,System.String)">
            <summary>
            Redirects to the specified route.
            <list type="bullet">
            <item><description>When <paramref name="permanent"/> and <paramref name="preserveMethod"/> are set, sets the <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status308PermanentRedirect"/> status code.</description></item>
            <item><description>When <paramref name="preserveMethod"/> is set, sets the <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status307TemporaryRedirect"/> status code.</description></item>
            <item><description>When <paramref name="permanent"/> is set, sets the <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status301MovedPermanently"/> status code.</description></item>
            <item><description>Otherwise, configures <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status302Found"/>.</description></item>
            </list>
            </summary>
            <param name="routeName">The name of the route.</param>
            <param name="routeValues">The parameters for a route.</param>
            <param name="permanent">Specifies whether the redirect should be permanent (301) or temporary (302).</param>
            <param name="preserveMethod">If set to true, make the temporary redirect (307) or permanent redirect (308) preserve the initial request method.</param>
            <param name="fragment">The fragment to add to the URL.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.RedirectToRouteHttpResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.TypedResults.StatusCode(System.Int32)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Http.HttpResults.StatusCodeHttpResult"/> object by specifying a <paramref name="statusCode"/>.
            </summary>
            <param name="statusCode">The status code to set on the response.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.StatusCodeHttpResult"/> object for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.TypedResults.NotFound">
            <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status404NotFound"/> response.
            </summary>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.NotFound"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.TypedResults.NotFound``1(``0)">
            <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status404NotFound"/> response.
            </summary>
            <typeparam name="TValue">The type of object that will be JSON serialized to the response body.</typeparam>
            <param name="value">The value to be included in the HTTP response body.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.NotFound`1"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.TypedResults.Unauthorized">
            <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status401Unauthorized"/> response.
            </summary>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.UnauthorizedHttpResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.TypedResults.BadRequest">
            <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status400BadRequest"/> response.
            </summary>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.BadRequest"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.TypedResults.BadRequest``1(``0)">
            <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status400BadRequest"/> response.
            </summary>
            <typeparam name="TValue">The type of error object that will be JSON serialized to the response body.</typeparam>
            <param name="error">The value to be included in the HTTP response body.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.BadRequest`1"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.TypedResults.Conflict">
            <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status409Conflict"/> response.
            </summary>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.Conflict"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.TypedResults.Conflict``1(``0)">
            <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status409Conflict"/> response.
            </summary>
            <typeparam name="TValue">The type of object that will be JSON serialized to the response body.</typeparam>
            <param name="error">The value to be included in the HTTP response body.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.Conflict`1"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.TypedResults.NoContent">
            <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status204NoContent"/> response.
            </summary>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.NoContent"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.TypedResults.Ok">
            <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status200OK"/> response.
            </summary>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.Ok"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.TypedResults.Ok``1(``0)">
            <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status200OK"/> response.
            </summary>
            <typeparam name="TValue">The type of object that will be JSON serialized to the response body.</typeparam>
            <param name="value">The value to be included in the HTTP response body.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.Ok`1"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.TypedResults.UnprocessableEntity">
            <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status422UnprocessableEntity"/> response.
            </summary>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.UnprocessableEntity"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.TypedResults.UnprocessableEntity``1(``0)">
            <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status422UnprocessableEntity"/> response.
            </summary>
            <typeparam name="TValue">The type of object that will be JSON serialized to the response body.</typeparam>
            <param name="error">The value to be included in the HTTP response body.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.UnprocessableEntity`1"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.TypedResults.Problem(System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Produces a <see cref="T:Microsoft.AspNetCore.Mvc.ProblemDetails"/> response.
            </summary>
            <param name="statusCode">The value for <see cref="P:Microsoft.AspNetCore.Mvc.ProblemDetails.Status" />.</param>
            <param name="detail">The value for <see cref="P:Microsoft.AspNetCore.Mvc.ProblemDetails.Detail" />.</param>
            <param name="instance">The value for <see cref="P:Microsoft.AspNetCore.Mvc.ProblemDetails.Instance" />.</param>
            <param name="title">The value for <see cref="P:Microsoft.AspNetCore.Mvc.ProblemDetails.Title" />.</param>
            <param name="type">The value for <see cref="P:Microsoft.AspNetCore.Mvc.ProblemDetails.Type" />.</param>
            <param name="extensions">The value for <see cref="P:Microsoft.AspNetCore.Mvc.ProblemDetails.Extensions" />.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.ProblemHttpResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.TypedResults.Problem(Microsoft.AspNetCore.Mvc.ProblemDetails)">
            <summary>
            Produces a <see cref="T:Microsoft.AspNetCore.Mvc.ProblemDetails"/> response.
            </summary>
            <param name="problemDetails">The <see cref="T:Microsoft.AspNetCore.Mvc.ProblemDetails"/>  object to produce a response from.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.ProblemHttpResult"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.TypedResults.ValidationProblem(System.Collections.Generic.IDictionary{System.String,System.String[]},System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status400BadRequest"/> response with an <see cref="T:Microsoft.AspNetCore.Http.HttpValidationProblemDetails"/> value.
            </summary>
            <param name="errors">One or more validation errors.</param>
            <param name="detail">The value for <see cref="P:Microsoft.AspNetCore.Mvc.ProblemDetails.Detail" />.</param>
            <param name="instance">The value for <see cref="P:Microsoft.AspNetCore.Mvc.ProblemDetails.Instance" />.</param>
            <param name="title">The value for <see cref="P:Microsoft.AspNetCore.Mvc.ProblemDetails.Title" />. Defaults to "One or more validation errors occurred."</param>
            <param name="type">The value for <see cref="P:Microsoft.AspNetCore.Mvc.ProblemDetails.Type" />.</param>
            <param name="extensions">The value for <see cref="P:Microsoft.AspNetCore.Mvc.ProblemDetails.Extensions" />.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.ValidationProblem"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.TypedResults.Created">
            <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status201Created"/> response.
            </summary>   
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.Created"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.TypedResults.Created(System.String)">
            <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status201Created"/> response.
            </summary>
            <param name="uri">The URI at which the content has been created.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.Created"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.TypedResults.Created``1(System.String,``0)">
            <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status201Created"/> response.
            </summary>
            <typeparam name="TValue">The type of object that will be JSON serialized to the response body.</typeparam>
            <param name="uri">The URI at which the content has been created.</param>
            <param name="value">The value to be included in the HTTP response body.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.Created`1"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.TypedResults.Created(System.Uri)">
            <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status201Created"/> response.
            </summary>
            <param name="uri">The URI at which the content has been created.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.Created"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.TypedResults.Created``1(System.Uri,``0)">
            <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status201Created"/> response.
            </summary>
            <typeparam name="TValue">The type of object that will be JSON serialized to the response body.</typeparam>
            <param name="uri">The URI at which the content has been created.</param>
            <param name="value">The value to be included in the HTTP response body.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.Created`1"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.TypedResults.CreatedAtRoute(System.String,System.Object)">
            <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status201Created"/> response.
            </summary>
            <param name="routeName">The name of the route to use for generating the URL.</param>
            <param name="routeValues">The route data to use for generating the URL.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.CreatedAtRoute"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.TypedResults.CreatedAtRoute(System.String,Microsoft.AspNetCore.Routing.RouteValueDictionary)">
            <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status201Created"/> response.
            </summary>
            <param name="routeName">The name of the route to use for generating the URL.</param>
            <param name="routeValues">The route data to use for generating the URL.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.CreatedAtRoute"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.TypedResults.CreatedAtRoute``1(``0,System.String,System.Object)">
            <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status201Created"/> response.
            </summary>
            <typeparam name="TValue">The type of object that will be JSON serialized to the response body.</typeparam>
            <param name="routeName">The name of the route to use for generating the URL.</param>
            <param name="routeValues">The route data to use for generating the URL.</param>
            <param name="value">The value to be included in the HTTP response body.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.CreatedAtRoute`1"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.TypedResults.CreatedAtRoute``1(``0,System.String,Microsoft.AspNetCore.Routing.RouteValueDictionary)">
            <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status201Created"/> response.
            </summary>
            <typeparam name="TValue">The type of object that will be JSON serialized to the response body.</typeparam>
            <param name="routeName">The name of the route to use for generating the URL.</param>
            <param name="routeValues">The route data to use for generating the URL.</param>
            <param name="value">The value to be included in the HTTP response body.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.CreatedAtRoute`1"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.TypedResults.Accepted(System.String)">
            <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status202Accepted"/> response.
            </summary>
            <param name="uri">The URI with the location at which the status of requested content can be monitored.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.Accepted"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.TypedResults.Accepted``1(System.String,``0)">
            <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status202Accepted"/> response.
            </summary>
            <typeparam name="TValue">The type of object that will be JSON serialized to the response body.</typeparam>
            <param name="uri">The URI with the location at which the status of requested content can be monitored.</param>
            <param name="value">The value to be included in the HTTP response body.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.Accepted`1"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.TypedResults.Accepted(System.Uri)">
            <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status202Accepted"/> response.
            </summary>
            <param name="uri">The URI with the location at which the status of requested content can be monitored.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.Accepted"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.TypedResults.Accepted``1(System.Uri,``0)">
            <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status202Accepted"/> response.
            </summary>
            <typeparam name="TValue">The type of object that will be JSON serialized to the response body.</typeparam>
            <param name="uri">The URI with the location at which the status of requested content can be monitored.</param>
            <param name="value">The value to be included in the HTTP response body.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.Accepted`1"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.TypedResults.AcceptedAtRoute(System.String,System.Object)">
            <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status202Accepted"/> response.
            </summary>
            <param name="routeName">The name of the route to use for generating the URL.</param>
            <param name="routeValues">The route data to use for generating the URL.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.AcceptedAtRoute"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.TypedResults.AcceptedAtRoute(System.String,Microsoft.AspNetCore.Routing.RouteValueDictionary)">
            <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status202Accepted"/> response.
            </summary>
            <param name="routeName">The name of the route to use for generating the URL.</param>
            <param name="routeValues">The route data to use for generating the URL.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.AcceptedAtRoute"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.TypedResults.AcceptedAtRoute``1(``0,System.String,System.Object)">
            <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status202Accepted"/> response.
            </summary>
            <typeparam name="TValue">The type of object that will be JSON serialized to the response body.</typeparam>
            <param name="routeName">The name of the route to use for generating the URL.</param>
            <param name="routeValues">The route data to use for generating the URL.</param>
            <param name="value">The value to be included in the HTTP response body.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.AcceptedAtRoute`1"/> for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.TypedResults.AcceptedAtRoute``1(``0,System.String,Microsoft.AspNetCore.Routing.RouteValueDictionary)">
            <summary>
            Produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status202Accepted"/> response.
            </summary>
            <typeparam name="TValue">The type of object that will be JSON serialized to the response body.</typeparam>
            <param name="routeName">The name of the route to use for generating the URL.</param>
            <param name="routeValues">The route data to use for generating the URL.</param>
            <param name="value">The value to be included in the HTTP response body.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Http.HttpResults.AcceptedAtRoute`1"/> for the response.</returns>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.TypedResults.Empty">
            <summary>
            Produces an empty result response, that when executed will do nothing.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.TypedResults.Extensions">
            <summary>
            Provides a container for external libraries to extend
            the default `TypedResults` set with their own samples.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.StreamCopyOperationInternal.CopyToAsync(System.IO.Stream,System.IO.Stream,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>Asynchronously reads the given number of bytes from the source stream and writes them to another stream.</summary>
            <returns>A task that represents the asynchronous copy operation.</returns>
            <param name="source">The stream from which the contents will be copied.</param>
            <param name="destination">The stream to which the contents of the current stream will be copied.</param>
            <param name="count">The count of bytes to be copied.</param>
            <param name="cancel">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None" />.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.StreamCopyOperationInternal.CopyToAsync(System.IO.Stream,System.IO.Stream,System.Nullable{System.Int64},System.Int32,System.Threading.CancellationToken)">
            <summary>Asynchronously reads the given number of bytes from the source stream and writes them to another stream, using a specified buffer size.</summary>
            <returns>A task that represents the asynchronous copy operation.</returns>
            <param name="source">The stream from which the contents will be copied.</param>
            <param name="destination">The stream to which the contents of the current stream will be copied.</param>
            <param name="count">The count of bytes to be copied.</param>
            <param name="bufferSize">The size, in bytes, of the buffer. This value must be greater than zero. The default size is 4096.</param>
            <param name="cancel">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None" />.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.Http.ProducesResponseTypeMetadata">
            <summary>
            Specifies the type of the value and status code returned by the action.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.ProducesResponseTypeMetadata.#ctor(System.Int32)">
            <summary>
            Initializes an instance of <see cref="T:Microsoft.AspNetCore.Http.ProducesResponseTypeMetadata"/>.
            </summary>
            <param name="statusCode">The HTTP response status code.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.ProducesResponseTypeMetadata.#ctor(System.Type,System.Int32)">
            <summary>
            Initializes an instance of <see cref="T:Microsoft.AspNetCore.Http.ProducesResponseTypeMetadata"/>.
            </summary>
            <param name="type">The <see cref="P:Microsoft.AspNetCore.Http.ProducesResponseTypeMetadata.Type"/> of object that is going to be written in the response.</param>
            <param name="statusCode">The HTTP response status code.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.ProducesResponseTypeMetadata.#ctor(System.Type,System.Int32,System.String,System.String[])">
            <summary>
            Initializes an instance of <see cref="T:Microsoft.AspNetCore.Http.ProducesResponseTypeMetadata"/>.
            </summary>
            <param name="type">The <see cref="P:Microsoft.AspNetCore.Http.ProducesResponseTypeMetadata.Type"/> of object that is going to be written in the response.</param>
            <param name="statusCode">The HTTP response status code.</param>
            <param name="contentType">The content type associated with the response.</param>
            <param name="additionalContentTypes">Additional content types supported by the response.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.ProducesResponseTypeMetadata.Type">
            <summary>
            Gets or sets the type of the value returned by an action.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.ProducesResponseTypeMetadata.StatusCode">
            <summary>
            Gets or sets the HTTP status code of the response.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Http.Metadata.AcceptsMetadata">
            <summary>
            Metadata that specifies the supported request content types.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Metadata.AcceptsMetadata.#ctor(System.String[])">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.AspNetCore.Http.Metadata.AcceptsMetadata"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Http.Metadata.AcceptsMetadata.#ctor(System.Type,System.Boolean,System.String[])">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.AspNetCore.Http.Metadata.AcceptsMetadata"/> with a type.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.Metadata.AcceptsMetadata.ContentTypes">
            <summary>
            Gets the supported request content types.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.Metadata.AcceptsMetadata.RequestType">
            <summary>
            Gets the type being read from the request.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Http.Metadata.AcceptsMetadata.IsOptional">
            <summary>
            Gets a value that determines if the request body is optional.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Internal.ResponseContentTypeHelper.ResolveContentTypeAndEncoding(System.String,System.String,System.ValueTuple{System.String,System.Text.Encoding},System.Func{System.String,System.Text.Encoding},System.String@,System.Text.Encoding@)">
            <summary>
            Gets the content type and encoding that need to be used for the response.
            The priority for selecting the content type is:
            1. ContentType property set on the action result
            2. <see cref="P:Microsoft.AspNetCore.Http.HttpResponse.ContentType"/> property set on <see cref="T:Microsoft.AspNetCore.Http.HttpResponse"/>
            3. Default content type set on the action result
            </summary>
            <remarks>
            The user supplied content type is not modified and is used as is. For example, if user
            sets the content type to be "text/plain" without any encoding, then the default content type's
            encoding is used to write the response and the ContentType header is set to be "text/plain" without any
            "charset" information.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.Internal.RangeHelper">
            <summary>
            Provides a parser for the Range Header in an <see cref="P:Microsoft.AspNetCore.Http.HttpContext.Request"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Internal.RangeHelper.ParseRange(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Http.Headers.RequestHeaders,System.Int64,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Returns the normalized form of the requested range if the Range Header in the <see cref="P:Microsoft.AspNetCore.Http.HttpContext.Request"/> is valid.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/> associated with the request.</param>
            <param name="requestHeaders">The <see cref="T:Microsoft.AspNetCore.Http.Headers.RequestHeaders"/> associated with the given <paramref name="context"/>.</param>
            <param name="length">The total length of the file representation requested.</param>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/>.</param>
            <returns>A boolean value which represents if the <paramref name="requestHeaders"/> contain a single valid
            range request. A <see cref="T:Microsoft.Net.Http.Headers.RangeItemHeaderValue"/> which represents the normalized form of the
            range parsed from the <paramref name="requestHeaders"/> or <c>null</c> if it cannot be normalized.</returns>
            <remark>If the Range header exists but cannot be parsed correctly, or if the provided length is 0, then the range request cannot be satisfied (status 416).
            This results in (<c>true</c>,<c>null</c>) return values.</remark>
        </member>
    </members>
</doc>
