<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.AspNetCore.Authentication.Cookies</name>
    </assembly>
    <members>
        <member name="T:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationDefaults">
            <summary>
            Default values related to cookie-based authentication handler
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationDefaults.AuthenticationScheme">
            <summary>
            The default value used for CookieAuthenticationOptions.AuthenticationScheme
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationDefaults.CookiePrefix">
            <summary>
            The prefix used to provide a default CookieAuthenticationOptions.CookieName
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationDefaults.LoginPath">
            <summary>
            The default value used by CookieAuthenticationMiddleware for the
            CookieAuthenticationOptions.LoginPath
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationDefaults.LogoutPath">
            <summary>
            The default value used by CookieAuthenticationMiddleware for the
            CookieAuthenticationOptions.LogoutPath
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationDefaults.AccessDeniedPath">
            <summary>
            The default value used by CookieAuthenticationMiddleware for the
            CookieAuthenticationOptions.AccessDeniedPath
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationDefaults.ReturnUrlParameter">
            <summary>
            The default value of the CookieAuthenticationOptions.ReturnUrlParameter
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationEvents">
            <summary>
            Allows subscribing to events raised during cookie authentication.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationEvents.OnValidatePrincipal">
            <summary>
            Invoked to validate the principal.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationEvents.OnCheckSlidingExpiration">
            <summary>
            Invoked to check if the cookie should be renewed.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationEvents.OnSigningIn">
            <summary>
            Invoked on signing in.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationEvents.OnSignedIn">
            <summary>
            Invoked after sign in has completed.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationEvents.OnSigningOut">
            <summary>
            Invoked on signing out.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationEvents.OnRedirectToLogin">
            <summary>
            Invoked when the client needs to be redirected to the sign in url.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationEvents.OnRedirectToAccessDenied">
            <summary>
            Invoked when the client needs to be redirected to the access denied url.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationEvents.OnRedirectToLogout">
            <summary>
            Invoked when the client is to be redirected to logout.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationEvents.OnRedirectToReturnUrl">
            <summary>
            Invoked when the client is to be redirected after logout.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationEvents.ValidatePrincipal(Microsoft.AspNetCore.Authentication.Cookies.CookieValidatePrincipalContext)">
            <summary>
            Invoked to validate the principal.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Authentication.Cookies.CookieValidatePrincipalContext"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationEvents.CheckSlidingExpiration(Microsoft.AspNetCore.Authentication.Cookies.CookieSlidingExpirationContext)">
            <summary>
            Invoked to check if the cookie should be renewed.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Authentication.Cookies.CookieSlidingExpirationContext"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationEvents.SigningIn(Microsoft.AspNetCore.Authentication.Cookies.CookieSigningInContext)">
            <summary>
            Invoked during sign in.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Authentication.Cookies.CookieSigningInContext"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationEvents.SignedIn(Microsoft.AspNetCore.Authentication.Cookies.CookieSignedInContext)">
            <summary>
            Invoked after sign in has completed.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Authentication.Cookies.CookieSignedInContext"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationEvents.SigningOut(Microsoft.AspNetCore.Authentication.Cookies.CookieSigningOutContext)">
            <summary>
            Invoked on sign out.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Authentication.Cookies.CookieSigningOutContext"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationEvents.RedirectToLogout(Microsoft.AspNetCore.Authentication.RedirectContext{Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions})">
            <summary>
            Invoked when the client is being redirected to the log out url.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Authentication.RedirectContext`1"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationEvents.RedirectToLogin(Microsoft.AspNetCore.Authentication.RedirectContext{Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions})">
            <summary>
            Invoked when the client is being redirected to the log in url.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Authentication.RedirectContext`1"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationEvents.RedirectToReturnUrl(Microsoft.AspNetCore.Authentication.RedirectContext{Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions})">
            <summary>
            Invoked when the client is being redirected after log out.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Authentication.RedirectContext`1"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationEvents.RedirectToAccessDenied(Microsoft.AspNetCore.Authentication.RedirectContext{Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions})">
            <summary>
            Invoked when the client is being redirected to the access denied url.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Authentication.RedirectContext`1"/>.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler">
            <summary>
            Implementation for the cookie-based authentication handler.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler.#ctor(Microsoft.Extensions.Options.IOptionsMonitor{Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions},Microsoft.Extensions.Logging.ILoggerFactory,System.Text.Encodings.Web.UrlEncoder,Microsoft.AspNetCore.Authentication.ISystemClock)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler"/>.
            </summary>
            <param name="options">Accessor to <see cref="T:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions"/>.</param>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/>.</param>
            <param name="encoder">The <see cref="T:System.Text.Encodings.Web.UrlEncoder"/>.</param>
            <param name="clock">The <see cref="T:Microsoft.AspNetCore.Authentication.ISystemClock"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler.#ctor(Microsoft.Extensions.Options.IOptionsMonitor{Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions},Microsoft.Extensions.Logging.ILoggerFactory,System.Text.Encodings.Web.UrlEncoder)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler"/>.
            </summary>
            <param name="options">Accessor to <see cref="T:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions"/>.</param>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/>.</param>
            <param name="encoder">The <see cref="T:System.Text.Encodings.Web.UrlEncoder"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler.Events">
            <summary>
            The handler calls methods on the events which give the application control at certain points where processing is occurring.
            If it is not provided a default instance is supplied which does nothing when the methods are called.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler.InitializeHandlerAsync">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler.CreateEventsAsync">
            <summary>
            Creates a new instance of the events instance.
            </summary>
            <returns>A new instance of the events instance.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler.HandleAuthenticateAsync">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler.FinishResponseAsync">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler.HandleSignInAsync(System.Security.Claims.ClaimsPrincipal,Microsoft.AspNetCore.Authentication.AuthenticationProperties)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler.HandleSignOutAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler.HandleForbiddenAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationHandler.HandleChallengeAsync(Microsoft.AspNetCore.Authentication.AuthenticationProperties)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions">
            <summary>
            Configuration options for <see cref="T:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions.#ctor">
            <summary>
            Create an instance of the options initialized with the default values
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions.Cookie">
            <summary>
            Determines the settings used to create the cookie.
            </summary>
            <remarks>
            <list type="bullet">
            <item><description>The default value for cookie <see cref="P:Microsoft.AspNetCore.Http.CookieBuilder.Name"/> is <c>.AspNetCore.Cookies</c>.
            This value should be changed if you change the name of the <c>AuthenticationScheme</c>, especially if your
            system uses the cookie authentication handler multiple times.</description></item>
            <item><description><see cref="P:Microsoft.AspNetCore.Http.CookieBuilder.SameSite"/> determines if the browser should allow the cookie to be attached to same-site or cross-site requests.
            The default is <c>Lax</c>, which means the cookie is only allowed to be attached to cross-site requests using safe HTTP methods and same-site requests.</description></item>
            <item><description><see cref="P:Microsoft.AspNetCore.Http.CookieBuilder.HttpOnly"/> determines if the browser should allow the cookie to be accessed by client-side JavaScript.
            The default is <c>true</c>, which means the cookie will only be passed to HTTP requests and is not made available to JavaScript on the page.</description></item>
            <item><description><see cref="P:Microsoft.AspNetCore.Http.CookieBuilder.Expiration"/> is currently ignored. Use <see cref="P:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions.ExpireTimeSpan"/> to control lifetime of cookie authentication.</description></item>
            <item><description><see cref="P:Microsoft.AspNetCore.Http.CookieBuilder.SecurePolicy"/> defaults to <see cref="F:Microsoft.AspNetCore.Http.CookieSecurePolicy.SameAsRequest"/>.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions.DataProtectionProvider">
            <summary>
            If set this will be used by the CookieAuthenticationHandler for data protection.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions.SlidingExpiration">
            <summary>
            The SlidingExpiration is set to true to instruct the handler to re-issue a new cookie with a new
            expiration time any time it processes a request which is more than halfway through the expiration window.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions.LoginPath">
            <summary>
            The LoginPath property is used by the handler for the redirection target when handling ChallengeAsync.
            The current url which is added to the LoginPath as a query string parameter named by the ReturnUrlParameter.
            Once a request to the LoginPath grants a new SignIn identity, the ReturnUrlParameter value is used to redirect
            the browser back to the original url.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions.LogoutPath">
            <summary>
            If the LogoutPath is provided the handler then a request to that path will redirect based on the ReturnUrlParameter.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions.AccessDeniedPath">
            <summary>
            The AccessDeniedPath property is used by the handler for the redirection target when handling ForbidAsync.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions.ReturnUrlParameter">
            <summary>
            The ReturnUrlParameter determines the name of the query string parameter which is appended by the handler
            during a Challenge. This is also the query string parameter looked for when a request arrives on the login
            path or logout path, in order to return to the original url after the action is performed.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions.Events">
            <summary>
            The Provider may be assigned to an instance of an object created by the application at startup time. The handler
            calls methods on the provider which give the application control at certain points where processing is occurring.
            If it is not provided a default instance is supplied which does nothing when the methods are called.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions.TicketDataFormat">
            <summary>
            The TicketDataFormat is used to protect and unprotect the identity and other properties which are stored in the
            cookie value. If not provided one will be created using <see cref="P:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions.DataProtectionProvider"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions.CookieManager">
             <summary>
             The component used to get cookies from the request or set them on the response.
            
             ChunkingCookieManager will be used by default.
             </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions.SessionStore">
            <summary>
            An optional container in which to store the identity across requests. When used, only a session identifier is sent
            to the client. This can be used to mitigate potential problems with very large identities.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions.ExpireTimeSpan">
            <summary>
            <para>
            Controls how much time the authentication ticket stored in the cookie will remain valid from the point it is created.
            The expiration information is stored in the protected cookie ticket. Because of that an expired cookie will be ignored
            even if it is passed to the server after the browser should have purged it.
            </para>
            <para>
            This is separate from the value of <see cref="P:Microsoft.AspNetCore.Http.CookieOptions.Expires"/>, which specifies
            how long the browser will keep the cookie.
            </para>
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Authentication.Cookies.CookieSignedInContext">
            <summary>
            Context object passed to the ICookieAuthenticationEvents method SignedIn.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.Cookies.CookieSignedInContext.#ctor(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Authentication.AuthenticationScheme,System.Security.Claims.ClaimsPrincipal,Microsoft.AspNetCore.Authentication.AuthenticationProperties,Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions)">
            <summary>
            Creates a new instance of the context object.
            </summary>
            <param name="context">The HTTP request context</param>
            <param name="scheme">The scheme data</param>
            <param name="principal">Initializes Principal property</param>
            <param name="properties">Initializes Properties property</param>
            <param name="options">The handler options</param>
        </member>
        <member name="T:Microsoft.AspNetCore.Authentication.Cookies.CookieSigningInContext">
            <summary>
            Context object passed to the <see cref="M:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationEvents.SigningIn(Microsoft.AspNetCore.Authentication.Cookies.CookieSigningInContext)"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.Cookies.CookieSigningInContext.#ctor(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Authentication.AuthenticationScheme,Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions,System.Security.Claims.ClaimsPrincipal,Microsoft.AspNetCore.Authentication.AuthenticationProperties,Microsoft.AspNetCore.Http.CookieOptions)">
            <summary>
            Creates a new instance of the context object.
            </summary>
            <param name="context">The HTTP request context</param>
            <param name="scheme">The scheme data</param>
            <param name="options">The handler options</param>
            <param name="principal">Initializes Principal property</param>
            <param name="properties">The authentication properties.</param>
            <param name="cookieOptions">Initializes options for the authentication cookie.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.Cookies.CookieSigningInContext.CookieOptions">
            <summary>
            The options for creating the outgoing cookie.
            May be replace or altered during the SigningIn call.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Authentication.Cookies.CookieSigningOutContext">
            <summary>
            Context object passed to the <see cref="M:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationEvents.SigningOut(Microsoft.AspNetCore.Authentication.Cookies.CookieSigningOutContext)"/>
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.Cookies.CookieSigningOutContext.#ctor(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Authentication.AuthenticationScheme,Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions,Microsoft.AspNetCore.Authentication.AuthenticationProperties,Microsoft.AspNetCore.Http.CookieOptions)">
             <summary>
            
             </summary>
             <param name="context"></param>
             <param name="scheme"></param>
             <param name="options"></param>
             <param name="properties"></param>
             <param name="cookieOptions"></param>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.Cookies.CookieSigningOutContext.CookieOptions">
            <summary>
            The options for creating the outgoing cookie.
            May be replace or altered during the SigningOut call.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Authentication.Cookies.CookieSlidingExpirationContext">
            <summary>
            Context object passed to the CookieAuthenticationEvents OnCheckSlidingExpiration method.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.Cookies.CookieSlidingExpirationContext.#ctor(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Authentication.AuthenticationScheme,Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions,Microsoft.AspNetCore.Authentication.AuthenticationTicket,System.TimeSpan,System.TimeSpan)">
            <summary>
            Creates a new instance of the context object.
            </summary>
            <param name="context"></param>
            <param name="scheme"></param>
            <param name="ticket">Contains the initial values for identity and extra data</param>
            <param name="elapsedTime"></param>
            <param name="remainingTime"></param>
            <param name="options"></param>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.Cookies.CookieSlidingExpirationContext.ElapsedTime">
            <summary>
            The amount of time that has elapsed since the cookie was issued or renewed.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.Cookies.CookieSlidingExpirationContext.RemainingTime">
            <summary>
            The amount of time left until the cookie expires.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.Cookies.CookieSlidingExpirationContext.ShouldRenew">
            <summary>
            If true, the cookie will be renewed. The initial value will be true if the elapsed time
            is greater than the remaining time (e.g. more than 50% expired).
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Authentication.Cookies.CookieValidatePrincipalContext">
            <summary>
            Context object passed to the CookieAuthenticationEvents ValidatePrincipal method.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.Cookies.CookieValidatePrincipalContext.#ctor(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Authentication.AuthenticationScheme,Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions,Microsoft.AspNetCore.Authentication.AuthenticationTicket)">
            <summary>
            Creates a new instance of the context object.
            </summary>
            <param name="context"></param>
            <param name="scheme"></param>
            <param name="ticket">Contains the initial values for identity and extra data</param>
            <param name="options"></param>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.Cookies.CookieValidatePrincipalContext.ShouldRenew">
            <summary>
            If true, the cookie will be renewed
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.Cookies.CookieValidatePrincipalContext.ReplacePrincipal(System.Security.Claims.ClaimsPrincipal)">
            <summary>
            Called to replace the claims principal. The supplied principal will replace the value of the
            Principal property, which determines the identity of the authenticated request.
            </summary>
            <param name="principal">The <see cref="T:System.Security.Claims.ClaimsPrincipal"/> used as the replacement</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.Cookies.CookieValidatePrincipalContext.RejectPrincipal">
            <summary>
            Called to reject the incoming principal. This may be done if the application has determined the
            account is no longer active, and the request should be treated as if it was anonymous.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Authentication.Cookies.ICookieManager">
            <summary>
            This is used by the CookieAuthenticationMiddleware to process request and response cookies.
            It is abstracted from the normal cookie APIs to allow for complex operations like chunking.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.Cookies.ICookieManager.GetRequestCookie(Microsoft.AspNetCore.Http.HttpContext,System.String)">
            <summary>
            Retrieve a cookie of the given name from the request.
            </summary>
            <param name="context"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.Cookies.ICookieManager.AppendResponseCookie(Microsoft.AspNetCore.Http.HttpContext,System.String,System.String,Microsoft.AspNetCore.Http.CookieOptions)">
            <summary>
            Append the given cookie to the response.
            </summary>
            <param name="context"></param>
            <param name="key"></param>
            <param name="value"></param>
            <param name="options"></param>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.Cookies.ICookieManager.DeleteCookie(Microsoft.AspNetCore.Http.HttpContext,System.String,Microsoft.AspNetCore.Http.CookieOptions)">
            <summary>
            Append a delete cookie to the response.
            </summary>
            <param name="context"></param>
            <param name="key"></param>
            <param name="options"></param>
        </member>
        <member name="T:Microsoft.AspNetCore.Authentication.Cookies.ITicketStore">
            <summary>
            This provides an abstract storage mechanic to preserve identity information on the server
            while only sending a simple identifier key to the client. This is most commonly used to mitigate
            issues with serializing large identities into cookies.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.Cookies.ITicketStore.StoreAsync(Microsoft.AspNetCore.Authentication.AuthenticationTicket)">
            <summary>
            Store the identity ticket and return the associated key.
            </summary>
            <param name="ticket">The identity information to store.</param>
            <returns>The key that can be used to retrieve the identity later.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.Cookies.ITicketStore.StoreAsync(Microsoft.AspNetCore.Authentication.AuthenticationTicket,System.Threading.CancellationToken)">
            <summary>
            Store the identity ticket and return the associated key.
            </summary>
            <param name="ticket">The identity information to store.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> used to propagate notifications that the operation should be canceled.</param>
            <returns>The key that can be used to retrieve the identity later.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.Cookies.ITicketStore.StoreAsync(Microsoft.AspNetCore.Authentication.AuthenticationTicket,Microsoft.AspNetCore.Http.HttpContext,System.Threading.CancellationToken)">
            <summary>
            Store the identity ticket and return the associated key.
            </summary>
            <param name="ticket">The identity information to store.</param>
            <param name="httpContext">The <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/> associated with the current request.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> used to propagate notifications that the operation should be canceled.</param>
            <returns>The key that can be used to retrieve the identity later.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.Cookies.ITicketStore.RenewAsync(System.String,Microsoft.AspNetCore.Authentication.AuthenticationTicket)">
            <summary>
            Tells the store that the given identity should be updated.
            </summary>
            <param name="key"></param>
            <param name="ticket"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.Cookies.ITicketStore.RenewAsync(System.String,Microsoft.AspNetCore.Authentication.AuthenticationTicket,System.Threading.CancellationToken)">
            <summary>
            Tells the store that the given identity should be updated.
            </summary>
            <param name="key"></param>
            <param name="ticket"></param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> used to propagate notifications that the operation should be canceled.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.Cookies.ITicketStore.RenewAsync(System.String,Microsoft.AspNetCore.Authentication.AuthenticationTicket,Microsoft.AspNetCore.Http.HttpContext,System.Threading.CancellationToken)">
            <summary>
            Tells the store that the given identity should be updated.
            </summary>
            <param name="key"></param>
            <param name="ticket"></param>
            <param name="httpContext"></param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> used to propagate notifications that the operation should be canceled.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.Cookies.ITicketStore.RetrieveAsync(System.String)">
            <summary>
            Retrieves an identity from the store for the given key.
            </summary>
            <param name="key">The key associated with the identity.</param>
            <returns>The identity associated with the given key, or <c>null</c> if not found.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.Cookies.ITicketStore.RetrieveAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves an identity from the store for the given key.
            </summary>
            <param name="key">The key associated with the identity.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> used to propagate notifications that the operation should be canceled.</param>
            <returns>The identity associated with the given key, or <c>null</c> if not found.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.Cookies.ITicketStore.RetrieveAsync(System.String,Microsoft.AspNetCore.Http.HttpContext,System.Threading.CancellationToken)">
            <summary>
            Retrieves an identity from the store for the given key.
            </summary>
            <param name="key">The key associated with the identity.</param>
            <param name="httpContext">The <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/> associated with the current request.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> used to propagate notifications that the operation should be canceled.</param>
            <returns>The identity associated with the given key, or <c>null</c> if not found.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.Cookies.ITicketStore.RemoveAsync(System.String)">
            <summary>
            Remove the identity associated with the given key.
            </summary>
            <param name="key">The key associated with the identity.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.Cookies.ITicketStore.RemoveAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Remove the identity associated with the given key.
            </summary>
            <param name="key">The key associated with the identity.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> used to propagate notifications that the operation should be canceled.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.Cookies.ITicketStore.RemoveAsync(System.String,Microsoft.AspNetCore.Http.HttpContext,System.Threading.CancellationToken)">
            <summary>
            Remove the identity associated with the given key.
            </summary>
            <param name="key">The key associated with the identity.</param>
            <param name="httpContext">The <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/> associated with the current request.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken"/> used to propagate notifications that the operation should be canceled.</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Authentication.Cookies.PostConfigureCookieAuthenticationOptions">
            <summary>
            Used to setup defaults for all <see cref="T:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.Cookies.PostConfigureCookieAuthenticationOptions.#ctor(Microsoft.AspNetCore.DataProtection.IDataProtectionProvider)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Authentication.Cookies.PostConfigureCookieAuthenticationOptions"/>.
            </summary>
            <param name="dataProtection">The <see cref="T:Microsoft.AspNetCore.DataProtection.IDataProtectionProvider"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.Cookies.PostConfigureCookieAuthenticationOptions.PostConfigure(System.String,Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions)">
            <summary>
            Invoked to post configure a TOptions instance.
            </summary>
            <param name="name">The name of the options instance being configured.</param>
            <param name="options">The options instance to configure.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.Authentication.Cookies.ChunkingCookieManager">
            <summary>
            This handles cookies that are limited by per cookie length. It breaks down long cookies for responses, and reassembles them
            from requests.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Authentication.Cookies.ChunkingCookieManager.DefaultChunkSize">
            <summary>
            The default maximum size of characters in a cookie to send back to the client.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.Cookies.ChunkingCookieManager.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Authentication.Cookies.ChunkingCookieManager"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.Cookies.ChunkingCookieManager.ChunkSize">
             <summary>
             The maximum size of cookie to send back to the client. If a cookie exceeds this size it will be broken down into multiple
             cookies. Set this value to null to disable this behavior. The default is 4050 characters, which is supported by all
             common browsers.
            
             Note that browsers may also have limits on the total size of all cookies per domain, and on the number of cookies per domain.
             </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Authentication.Cookies.ChunkingCookieManager.ThrowForPartialCookies">
            <summary>
            Throw if not all chunks of a cookie are available on a request for re-assembly.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.Cookies.ChunkingCookieManager.GetRequestCookie(Microsoft.AspNetCore.Http.HttpContext,System.String)">
            <summary>
            Get the reassembled cookie. Non chunked cookies are returned normally.
            Cookies with missing chunks just have their "chunks-XX" header returned.
            </summary>
            <param name="context"></param>
            <param name="key"></param>
            <returns>The reassembled cookie, if any, or null.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.Cookies.ChunkingCookieManager.AppendResponseCookie(Microsoft.AspNetCore.Http.HttpContext,System.String,System.String,Microsoft.AspNetCore.Http.CookieOptions)">
            <summary>
            Appends a new response cookie to the Set-Cookie header. If the cookie is larger than the given size limit
            then it will be broken down into multiple cookies as follows:
            Set-Cookie: CookieName=chunks-3; path=/
            Set-Cookie: CookieNameC1=Segment1; path=/
            Set-Cookie: CookieNameC2=Segment2; path=/
            Set-Cookie: CookieNameC3=Segment3; path=/
            </summary>
            <param name="context"></param>
            <param name="key"></param>
            <param name="value"></param>
            <param name="options"></param>
        </member>
        <member name="M:Microsoft.AspNetCore.Authentication.Cookies.ChunkingCookieManager.DeleteCookie(Microsoft.AspNetCore.Http.HttpContext,System.String,Microsoft.AspNetCore.Http.CookieOptions)">
            <summary>
            Deletes the cookie with the given key by setting an expired state. If a matching chunked cookie exists on
            the request, delete each chunk.
            </summary>
            <param name="context"></param>
            <param name="key"></param>
            <param name="options"></param>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.CookieExtensions">
            <summary>
            Extension methods to configure cookie authentication.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.CookieExtensions.AddCookie(Microsoft.AspNetCore.Authentication.AuthenticationBuilder)">
            <summary>
            Adds cookie authentication to <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/> using the default scheme.
            The default scheme is specified by <see cref="F:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationDefaults.AuthenticationScheme"/>.
            <para>
            Cookie authentication uses a HTTP cookie persisted in the client to perform authentication.
            </para>
            </summary>
            <param name="builder">The <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/>.</param>
            <returns>A reference to <paramref name="builder"/> after the operation has completed.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.CookieExtensions.AddCookie(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String)">
            <summary>
            Adds cookie authentication to <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/> using the specified scheme.
            <para>
            Cookie authentication uses a HTTP cookie persisted in the client to perform authentication.
            </para>
            </summary>
            <param name="builder">The <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/>.</param>
            <param name="authenticationScheme">The authentication scheme.</param>
            <returns>A reference to <paramref name="builder"/> after the operation has completed.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.CookieExtensions.AddCookie(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.Action{Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions})">
            <summary>
            Adds cookie authentication to <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/> using the default scheme.
            The default scheme is specified by <see cref="F:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationDefaults.AuthenticationScheme"/>.
            <para>
            Cookie authentication uses a HTTP cookie persisted in the client to perform authentication.
            </para>
            </summary>
            <param name="builder">The <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/>.</param>
            <param name="configureOptions">A delegate to configure <see cref="T:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions"/>.</param>
            <returns>A reference to <paramref name="builder"/> after the operation has completed.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.CookieExtensions.AddCookie(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,System.Action{Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions})">
            <summary>
            Adds cookie authentication to <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/> using the specified scheme.
            <para>
            Cookie authentication uses a HTTP cookie persisted in the client to perform authentication.
            </para>
            </summary>
            <param name="builder">The <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/>.</param>
            <param name="authenticationScheme">The authentication scheme.</param>
            <param name="configureOptions">A delegate to configure <see cref="T:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions"/>.</param>
            <returns>A reference to <paramref name="builder"/> after the operation has completed.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.CookieExtensions.AddCookie(Microsoft.AspNetCore.Authentication.AuthenticationBuilder,System.String,System.String,System.Action{Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions})">
            <summary>
            Adds cookie authentication to <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/> using the specified scheme.
            <para>
            Cookie authentication uses a HTTP cookie persisted in the client to perform authentication.
            </para>
            </summary>
            <param name="builder">The <see cref="T:Microsoft.AspNetCore.Authentication.AuthenticationBuilder"/>.</param>
            <param name="authenticationScheme">The authentication scheme.</param>
            <param name="displayName">A display name for the authentication handler.</param>
            <param name="configureOptions">A delegate to configure <see cref="T:Microsoft.AspNetCore.Authentication.Cookies.CookieAuthenticationOptions"/>.</param>
            <returns>A reference to <paramref name="builder"/> after the operation has completed.</returns>
        </member>
    </members>
</doc>
