<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.Extensions.Hosting</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Extensions.DependencyInjection.OptionsBuilderExtensions">
      <summary>Extension methods for adding configuration related options services to the DI container via <see cref="T:Microsoft.Extensions.Options.OptionsBuilder`1" />.</summary>
    </member>
    <member name="M:Microsoft.Extensions.DependencyInjection.OptionsBuilderExtensions.ValidateOnStart``1(Microsoft.Extensions.Options.OptionsBuilder{``0})">
      <summary>Enforces options validation check on start rather than in runtime.</summary>
      <param name="optionsBuilder">The <see cref="T:Microsoft.Extensions.Options.OptionsBuilder`1" /> to configure options instance.</param>
      <typeparam name="TOptions">The type of options.</typeparam>
      <returns>The <see cref="T:Microsoft.Extensions.Options.OptionsBuilder`1" /> so that additional calls can be chained.</returns>
    </member>
    <member name="T:Microsoft.Extensions.Hosting.BackgroundServiceExceptionBehavior">
      <summary>Specifies a behavior that the <see cref="T:Microsoft.Extensions.Hosting.IHost" /> will honor if an unhandled exception occurs in one of its <see cref="T:Microsoft.Extensions.Hosting.BackgroundService" /> instances.</summary>
    </member>
    <member name="F:Microsoft.Extensions.Hosting.BackgroundServiceExceptionBehavior.Ignore">
      <summary>Ignore exceptions thrown in <see cref="T:Microsoft.Extensions.Hosting.BackgroundService" />.</summary>
    </member>
    <member name="F:Microsoft.Extensions.Hosting.BackgroundServiceExceptionBehavior.StopHost">
      <summary>Stops the <see cref="T:Microsoft.Extensions.Hosting.IHost" /> instance.</summary>
    </member>
    <member name="T:Microsoft.Extensions.Hosting.ConsoleLifetimeOptions" />
    <member name="M:Microsoft.Extensions.Hosting.ConsoleLifetimeOptions.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.Hosting.ConsoleLifetimeOptions" /> class.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Hosting.ConsoleLifetimeOptions.SuppressStatusMessages">
      <summary>Indicates if host lifetime status messages should be supressed such as on startup.
            The default is false.</summary>
    </member>
    <member name="T:Microsoft.Extensions.Hosting.Host">
      <summary>Provides convenience methods for creating instances of <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> with preconfigured defaults.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.Host.CreateApplicationBuilder">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.Hosting.HostApplicationBuilder" /> class with preconfigured defaults.</summary>
      <returns>A new <see cref="T:Microsoft.Extensions.Hosting.HostApplicationBuilder" /> instance.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.Host.CreateApplicationBuilder(System.String[])">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.Hosting.HostApplicationBuilder" /> class with preconfigured defaults.</summary>
      <param name="args">The command line arguments.</param>
      <returns>A new <see cref="T:Microsoft.Extensions.Hosting.HostApplicationBuilder" /> instance.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.Host.CreateDefaultBuilder">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.Hosting.HostBuilder" /> class with preconfigured defaults.</summary>
      <returns>The initialized <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" />.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.Host.CreateDefaultBuilder(System.String[])">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.Hosting.HostBuilder" /> class with preconfigured defaults.</summary>
      <param name="args">The command line arguments.</param>
      <returns>The initialized <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" />.</returns>
    </member>
    <member name="T:Microsoft.Extensions.Hosting.HostApplicationBuilder">
      <summary>A builder for hosted applications and services that helps manage configuration, logging, lifetime, and more.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.HostApplicationBuilder.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.Hosting.HostApplicationBuilder" /> class with preconfigured defaults.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.HostApplicationBuilder.#ctor(Microsoft.Extensions.Hosting.HostApplicationBuilderSettings)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.Hosting.HostApplicationBuilder" /> class.</summary>
      <param name="settings">Settings that specify initial configuration and whether default settings should be used.</param>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.HostApplicationBuilder.#ctor(System.String[])">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.Hosting.HostApplicationBuilder" /> class with preconfigured defaults.</summary>
      <param name="args">The command line arguments.</param>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.HostApplicationBuilder.Build">
      <summary>Builds the host. This method can only be called once.</summary>
      <returns>An initialized <see cref="T:Microsoft.Extensions.Hosting.IHost" />.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.HostApplicationBuilder.ConfigureContainer``1(Microsoft.Extensions.DependencyInjection.IServiceProviderFactory{``0},System.Action{``0})">
      <summary>Registers a <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1" /> instance to be used to create the <see cref="T:System.IServiceProvider" />.</summary>
      <param name="factory">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1" />.</param>
      <param name="configure">A delegate used to configure the <typeparamref T="TContainerBuilder" />. This delegate can be used to configure services using APIs that are specific to the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1" /> implementation.</param>
      <typeparam name="TContainerBuilder">The type of builder provided by the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceProviderFactory`1" />.</typeparam>
    </member>
    <member name="P:Microsoft.Extensions.Hosting.HostApplicationBuilder.Configuration">
      <summary>Gets a collection of services for the application to compose. This property is useful for adding user-provided or framework-provided services.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Hosting.HostApplicationBuilder.Environment">
      <summary>Gets information about the hosting environment an application is running in.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Hosting.HostApplicationBuilder.Logging">
      <summary>Gets a collection of logging providers for the application to compose. This property is useful for adding new logging providers.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Hosting.HostApplicationBuilder.Services">
      <summary>Gets a collection of services for the application to compose. This property is useful for adding user-provided or framework-provided services.</summary>
    </member>
    <member name="T:Microsoft.Extensions.Hosting.HostApplicationBuilderSettings">
      <summary>Contains the settings for constructing an <see cref="T:Microsoft.Extensions.Hosting.HostApplicationBuilder" />.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.HostApplicationBuilderSettings.#ctor">
      <summary>Initializes an instance of the <see cref="T:Microsoft.Extensions.Hosting.HostApplicationBuilderSettings" /> class.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Hosting.HostApplicationBuilderSettings.ApplicationName">
      <summary>Gets or sets the application name.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Hosting.HostApplicationBuilderSettings.Args">
      <summary>Gets or sets the command-line arguments. The arguments aren't used if <see cref="P:Microsoft.Extensions.Hosting.HostApplicationBuilderSettings.DisableDefaults" /> is <see langword="true" />.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Hosting.HostApplicationBuilderSettings.Configuration">
      <summary>Gets or sets the initial configuration sources to be added to the <see cref="P:Microsoft.Extensions.Hosting.HostApplicationBuilder.Configuration" />.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Hosting.HostApplicationBuilderSettings.ContentRootPath">
      <summary>Gets or sets the content root path.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Hosting.HostApplicationBuilderSettings.DisableDefaults">
      <summary>Gets or sets a value that specifies whether preconfigured default settings should be used to configure the <see cref="T:Microsoft.Extensions.Hosting.HostApplicationBuilder" /> instance.</summary>
      <returns>
        <see langword="false" /> to configure the <see cref="T:Microsoft.Extensions.Hosting.HostApplicationBuilder" /> instance with preconfigured default settings; <see langword="true" /> to disable the use of default settings.</returns>
    </member>
    <member name="P:Microsoft.Extensions.Hosting.HostApplicationBuilderSettings.EnvironmentName">
      <summary>Gets or sets the environment name.</summary>
    </member>
    <member name="T:Microsoft.Extensions.Hosting.HostBuilder">
      <summary>A program initialization utility.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.HostBuilder.#ctor" />
    <member name="M:Microsoft.Extensions.Hosting.HostBuilder.Build">
      <summary>Runs the given actions to initialize the host. This method can only be called once.</summary>
      <returns>An initialized <see cref="T:Microsoft.Extensions.Hosting.IHost" />.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.HostBuilder.ConfigureAppConfiguration(System.Action{Microsoft.Extensions.Hosting.HostBuilderContext,Microsoft.Extensions.Configuration.IConfigurationBuilder})">
      <summary>Sets up the configuration for the remainder of the build process and application.
            The <see cref="P:Microsoft.Extensions.Hosting.HostBuilderContext.Configuration" /> passed in is the host's configuration built
            from calls to <see cref="M:Microsoft.Extensions.Hosting.IHostBuilder.ConfigureHostConfiguration(System.Action{Microsoft.Extensions.Configuration.IConfigurationBuilder})" />. This can be called multiple times and the results will be additive.
            After all calls have been processed, <see cref="P:Microsoft.Extensions.Hosting.HostBuilderContext.Configuration" /> will be updated with the results
            for future build steps. The resulting configuration will also be available in the <see cref="P:Microsoft.Extensions.Hosting.IHost.Services" /> DI Container.</summary>
      <param name="configureDelegate">The delegate for configuring the <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" /> that will be used
            to construct the <see cref="T:Microsoft.Extensions.Configuration.IConfiguration" /> for the application.</param>
      <returns>The same instance of the <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> for chaining.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.HostBuilder.ConfigureContainer``1(System.Action{Microsoft.Extensions.Hosting.HostBuilderContext,``0})">
      <summary>Enables configuring the instantiated dependency container. This can be called multiple times and
            the results will be additive.</summary>
      <param name="configureDelegate">The delegate for configuring the <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" /> that will be used
            to construct the <see cref="T:Microsoft.Extensions.Configuration.IConfiguration" /> for the host.</param>
      <typeparam name="TContainerBuilder">The type of the builder to create.</typeparam>
      <returns>The same instance of the <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> for chaining.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.HostBuilder.ConfigureHostConfiguration(System.Action{Microsoft.Extensions.Configuration.IConfigurationBuilder})">
      <summary>Set up the configuration for the builder itself. This will be used to initialize the <see cref="T:Microsoft.Extensions.Hosting.IHostEnvironment" />
            for use later in the build process. This can be called multiple times and the results will be additive.</summary>
      <param name="configureDelegate">The delegate for configuring the <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" /> that will be used
            to construct the <see cref="T:Microsoft.Extensions.Configuration.IConfiguration" /> for the host.</param>
      <returns>The same instance of the <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> for chaining.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.HostBuilder.ConfigureServices(System.Action{Microsoft.Extensions.Hosting.HostBuilderContext,Microsoft.Extensions.DependencyInjection.IServiceCollection})">
      <summary>Adds services to the container. This can be called multiple times and the results will be additive.</summary>
      <param name="configureDelegate">The delegate for configuring the <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" /> that will be used
            to construct the <see cref="T:Microsoft.Extensions.Configuration.IConfiguration" /> for the host.</param>
      <returns>The same instance of the <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> for chaining.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.HostBuilder.UseServiceProviderFactory``1(Microsoft.Extensions.DependencyInjection.IServiceProviderFactory{``0})">
      <summary>Overrides the factory used to create the service provider.</summary>
      <param name="factory">A factory used for creating service providers.</param>
      <typeparam name="TContainerBuilder">The type of the builder to create.</typeparam>
      <returns>The same instance of the <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> for chaining.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.HostBuilder.UseServiceProviderFactory``1(System.Func{Microsoft.Extensions.Hosting.HostBuilderContext,Microsoft.Extensions.DependencyInjection.IServiceProviderFactory{``0}})">
      <summary>Overrides the factory used to create the service provider.</summary>
      <param name="factory">A factory used for creating service providers.</param>
      <typeparam name="TContainerBuilder">The type of the builder to create.</typeparam>
      <returns>The same instance of the <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> for chaining.</returns>
    </member>
    <member name="P:Microsoft.Extensions.Hosting.HostBuilder.Properties">
      <summary>A central location for sharing state between components during the host building process.</summary>
    </member>
    <member name="T:Microsoft.Extensions.Hosting.HostingHostBuilderExtensions" />
    <member name="M:Microsoft.Extensions.Hosting.HostingHostBuilderExtensions.ConfigureAppConfiguration(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{Microsoft.Extensions.Configuration.IConfigurationBuilder})">
      <summary>Sets up the configuration for the remainder of the build process and application. This can be called multiple times and
            the results will be additive. The results will be available at <see cref="P:Microsoft.Extensions.Hosting.HostBuilderContext.Configuration" /> for
            subsequent operations, as well as in <see cref="P:Microsoft.Extensions.Hosting.IHost.Services" />.</summary>
      <param name="hostBuilder">The <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> to configure.</param>
      <param name="configureDelegate">The delegate for configuring the <see cref="T:Microsoft.Extensions.Configuration.IConfigurationBuilder" /> that will be used
            to construct the <see cref="T:Microsoft.Extensions.Configuration.IConfiguration" /> for the host.</param>
      <returns>The same instance of the <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> for chaining.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.HostingHostBuilderExtensions.ConfigureContainer``1(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{``0})">
      <summary>Enables configuring the instantiated dependency container. This can be called multiple times and
            the results will be additive.</summary>
      <param name="hostBuilder">The <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> to configure.</param>
      <param name="configureDelegate">The delegate for configuring the <typeparamref name="TContainerBuilder" />.</param>
      <typeparam name="TContainerBuilder"></typeparam>
      <returns>The same instance of the <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> for chaining.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.HostingHostBuilderExtensions.ConfigureDefaults(Microsoft.Extensions.Hosting.IHostBuilder,System.String[])">
      <summary>Configures an existing <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> instance with pre-configured defaults. This will overwrite previously configured values and is intended to be called before additional configuration calls.</summary>
      <param name="builder">The existing builder to configure.</param>
      <param name="args">The command line args.</param>
      <returns>The same instance of the <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> for chaining.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.HostingHostBuilderExtensions.ConfigureHostOptions(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{Microsoft.Extensions.Hosting.HostBuilderContext,Microsoft.Extensions.Hosting.HostOptions})">
      <summary>Adds a delegate for configuring the <see cref="T:Microsoft.Extensions.Hosting.HostOptions" /> of the <see cref="T:Microsoft.Extensions.Hosting.IHost" />.</summary>
      <param name="hostBuilder">The <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> to configure.</param>
      <param name="configureOptions">The delegate for configuring the <see cref="T:Microsoft.Extensions.Hosting.HostOptions" />.</param>
      <returns>The same instance of the <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> for chaining.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.HostingHostBuilderExtensions.ConfigureHostOptions(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{Microsoft.Extensions.Hosting.HostOptions})">
      <summary>Adds a delegate for configuring the <see cref="T:Microsoft.Extensions.Hosting.HostOptions" /> of the <see cref="T:Microsoft.Extensions.Hosting.IHost" /> instance related to th.</summary>
      <param name="hostBuilder">The <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> to configure.</param>
      <param name="configureOptions">The delegate for configuring the <see cref="T:Microsoft.Extensions.Hosting.HostOptions" />.</param>
      <returns>The same instance of the <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> for chaining.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.HostingHostBuilderExtensions.ConfigureLogging(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{Microsoft.Extensions.Hosting.HostBuilderContext,Microsoft.Extensions.Logging.ILoggingBuilder})">
      <summary>Adds a delegate for configuring the provided <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />. This may be called multiple times.</summary>
      <param name="hostBuilder">The <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> to configure.</param>
      <param name="configureLogging">The delegate that configures the <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />.</param>
      <returns>The same instance of the <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> for chaining.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.HostingHostBuilderExtensions.ConfigureLogging(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{Microsoft.Extensions.Logging.ILoggingBuilder})">
      <summary>Adds a delegate for configuring the provided <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />. This may be called multiple times.</summary>
      <param name="hostBuilder">The <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> to configure.</param>
      <param name="configureLogging">The delegate that configures the <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder" />.</param>
      <returns>The same instance of the <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> for chaining.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.HostingHostBuilderExtensions.ConfigureServices(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{Microsoft.Extensions.DependencyInjection.IServiceCollection})">
      <summary>Adds services to the container. This can be called multiple times and the results will be additive.</summary>
      <param name="hostBuilder">The <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> to configure.</param>
      <param name="configureDelegate">The delegate for configuring the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.</param>
      <returns>The same instance of the <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> for chaining.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.HostingHostBuilderExtensions.RunConsoleAsync(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{Microsoft.Extensions.Hosting.ConsoleLifetimeOptions},System.Threading.CancellationToken)">
      <summary>Enables console support, builds and starts the host, and waits for Ctrl+C or SIGTERM to shut down.</summary>
      <param name="hostBuilder">The <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> to configure.</param>
      <param name="configureOptions">The delegate for configuring the <see cref="T:Microsoft.Extensions.Hosting.Internal.ConsoleLifetime" />.</param>
      <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that can be used to cancel the console.</param>
      <returns>A <see cref="T:System.Threading.Tasks.Task" /> that only completes when the token is signaled or application is shutdown.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.HostingHostBuilderExtensions.RunConsoleAsync(Microsoft.Extensions.Hosting.IHostBuilder,System.Threading.CancellationToken)">
      <summary>Enables console support, builds and starts the host, and waits for Ctrl+C or SIGTERM to shut down.</summary>
      <param name="hostBuilder">The <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> to configure.</param>
      <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> that can be used to cancel the console.</param>
      <returns>A <see cref="T:System.Threading.Tasks.Task" /> that only completes when the token is signaled or application is shutdown.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.HostingHostBuilderExtensions.UseConsoleLifetime(Microsoft.Extensions.Hosting.IHostBuilder)">
      <summary>Listens for Ctrl+C or SIGTERM and calls <see cref="M:Microsoft.Extensions.Hosting.IHostApplicationLifetime.StopApplication" /> to start the shutdown process.
            This will unblock extensions like RunAsync and WaitForShutdownAsync.</summary>
      <param name="hostBuilder">The <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> to configure.</param>
      <returns>The same instance of the <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> for chaining.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.HostingHostBuilderExtensions.UseConsoleLifetime(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{Microsoft.Extensions.Hosting.ConsoleLifetimeOptions})">
      <summary>Listens for Ctrl+C or SIGTERM and calls <see cref="M:Microsoft.Extensions.Hosting.IHostApplicationLifetime.StopApplication" /> to start the shutdown process.
            This will unblock extensions like RunAsync and WaitForShutdownAsync.</summary>
      <param name="hostBuilder">The <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> to configure.</param>
      <param name="configureOptions">The delegate for configuring the <see cref="T:Microsoft.Extensions.Hosting.Internal.ConsoleLifetime" />.</param>
      <returns>The same instance of the <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> for chaining.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.HostingHostBuilderExtensions.UseContentRoot(Microsoft.Extensions.Hosting.IHostBuilder,System.String)">
      <summary>Specify the content root directory to be used by the host.</summary>
      <param name="hostBuilder">The <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> to configure.</param>
      <param name="contentRoot">Path to root directory of the application.</param>
      <returns>The <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" />.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.HostingHostBuilderExtensions.UseDefaultServiceProvider(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{Microsoft.Extensions.DependencyInjection.ServiceProviderOptions})">
      <summary>Specify the <see cref="T:System.IServiceProvider" /> to be the default one.</summary>
      <param name="hostBuilder">The <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> to configure.</param>
      <param name="configure"></param>
      <returns>The <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" />.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.HostingHostBuilderExtensions.UseDefaultServiceProvider(Microsoft.Extensions.Hosting.IHostBuilder,System.Action{Microsoft.Extensions.Hosting.HostBuilderContext,Microsoft.Extensions.DependencyInjection.ServiceProviderOptions})">
      <summary>Specify the <see cref="T:System.IServiceProvider" /> to be the default one.</summary>
      <param name="hostBuilder">The <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> to configure.</param>
      <param name="configure">The delegate that configures the <see cref="T:System.IServiceProvider" />.</param>
      <returns>The <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" />.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.HostingHostBuilderExtensions.UseEnvironment(Microsoft.Extensions.Hosting.IHostBuilder,System.String)">
      <summary>Specify the environment to be used by the host.</summary>
      <param name="hostBuilder">The <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" /> to configure.</param>
      <param name="environment">The environment to host the application in.</param>
      <returns>The <see cref="T:Microsoft.Extensions.Hosting.IHostBuilder" />.</returns>
    </member>
    <member name="T:Microsoft.Extensions.Hosting.HostOptions">
      <summary>Options for <see cref="T:Microsoft.Extensions.Hosting.IHost" />.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.HostOptions.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Extensions.Hosting.HostOptions" /> class.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Hosting.HostOptions.BackgroundServiceExceptionBehavior">
      <summary>The behavior the <see cref="T:Microsoft.Extensions.Hosting.IHost" /> will follow when any of its <see cref="T:Microsoft.Extensions.Hosting.BackgroundService" /> instances throw an unhandled exception.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Hosting.HostOptions.ShutdownTimeout">
      <summary>The default timeout for <see cref="M:Microsoft.Extensions.Hosting.IHost.StopAsync(System.Threading.CancellationToken)" />.</summary>
    </member>
    <member name="T:Microsoft.Extensions.Hosting.Internal.ApplicationLifetime">
      <summary>Allows consumers to perform cleanup during a graceful shutdown.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.Internal.ApplicationLifetime.#ctor(Microsoft.Extensions.Logging.ILogger{Microsoft.Extensions.Hosting.Internal.ApplicationLifetime})">
      <summary>This API supports infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases.</summary>
      <param name="logger" />
    </member>
    <member name="M:Microsoft.Extensions.Hosting.Internal.ApplicationLifetime.NotifyStarted">
      <summary>Signals the ApplicationStarted event and blocks until it completes.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.Internal.ApplicationLifetime.NotifyStopped">
      <summary>Signals the ApplicationStopped event and blocks until it completes.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.Internal.ApplicationLifetime.StopApplication">
      <summary>Signals the ApplicationStopping event and blocks until it completes.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Hosting.Internal.ApplicationLifetime.ApplicationStarted">
      <summary>Gets a cancellation token. Triggered when the application host has fully started and is about to wait for a graceful shutdown.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Hosting.Internal.ApplicationLifetime.ApplicationStopped">
      <summary>Gets a cancellation token. Triggered when the application host is performing a graceful shutdown. All requests should be complete at this point. Shutdown will block until this event completes.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Hosting.Internal.ApplicationLifetime.ApplicationStopping">
      <summary>Gets a cancellation token. Triggered when the application host is performing a graceful shutdown. Request may still be in flight. Shutdown will block until this event completes.</summary>
    </member>
    <member name="T:Microsoft.Extensions.Hosting.Internal.ConsoleLifetime">
      <summary>Listens for Ctrl+C or SIGTERM and initiates shutdown.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.Internal.ConsoleLifetime.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.Extensions.Hosting.ConsoleLifetimeOptions},Microsoft.Extensions.Hosting.IHostEnvironment,Microsoft.Extensions.Hosting.IHostApplicationLifetime,Microsoft.Extensions.Options.IOptions{Microsoft.Extensions.Hosting.HostOptions})">
      <summary>This API supports infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases.</summary>
      <param name="options" />
      <param name="environment" />
      <param name="applicationLifetime" />
      <param name="hostOptions" />
    </member>
    <member name="M:Microsoft.Extensions.Hosting.Internal.ConsoleLifetime.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.Extensions.Hosting.ConsoleLifetimeOptions},Microsoft.Extensions.Hosting.IHostEnvironment,Microsoft.Extensions.Hosting.IHostApplicationLifetime,Microsoft.Extensions.Options.IOptions{Microsoft.Extensions.Hosting.HostOptions},Microsoft.Extensions.Logging.ILoggerFactory)">
      <summary>This API supports infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases.</summary>
      <param name="options" />
      <param name="environment" />
      <param name="applicationLifetime" />
      <param name="hostOptions" />
      <param name="loggerFactory" />
    </member>
    <member name="M:Microsoft.Extensions.Hosting.Internal.ConsoleLifetime.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.Internal.ConsoleLifetime.StopAsync(System.Threading.CancellationToken)">
      <summary>Called from <see cref="M:Microsoft.Extensions.Hosting.IHost.StopAsync(System.Threading.CancellationToken)" /> to indicate that the host is stopping and it's time to shut down.</summary>
      <param name="cancellationToken">Used to indicate when stop should no longer be graceful.</param>
      <returns>A <see cref="T:System.Threading.Tasks.Task" />.</returns>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.Internal.ConsoleLifetime.WaitForStartAsync(System.Threading.CancellationToken)">
      <summary>Called at the start of <see cref="M:Microsoft.Extensions.Hosting.IHost.StartAsync(System.Threading.CancellationToken)" />, which will wait until it's complete before continuing. This can be used to delay startup until signaled by an external event.</summary>
      <param name="cancellationToken">Used to indicate when stop should no longer be graceful.</param>
      <returns>A <see cref="T:System.Threading.Tasks.Task" />.</returns>
    </member>
    <member name="T:Microsoft.Extensions.Hosting.Internal.HostingEnvironment">
      <summary>This API supports infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases.</summary>
    </member>
    <member name="M:Microsoft.Extensions.Hosting.Internal.HostingEnvironment.#ctor">
      <summary>This API supports infrastructure and is not intended to be used directly from your code. This API may change or be removed in future releases.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Hosting.Internal.HostingEnvironment.ApplicationName">
      <summary>Gets or sets the name of the application. This property is automatically set by the host to the assembly containing the application entry point.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Hosting.Internal.HostingEnvironment.ContentRootFileProvider">
      <summary>Gets or sets an <see cref="T:Microsoft.Extensions.FileProviders.IFileProvider" /> pointing at <see cref="P:Microsoft.Extensions.Hosting.IHostingEnvironment.ContentRootPath" />.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Hosting.Internal.HostingEnvironment.ContentRootPath">
      <summary>Gets or sets the absolute path to the directory that contains the application content files.</summary>
    </member>
    <member name="P:Microsoft.Extensions.Hosting.Internal.HostingEnvironment.EnvironmentName">
      <summary>Gets or sets the name of the environment. The host automatically sets this property to the value of the of the "environment" key as specified in configuration.</summary>
    </member>
  </members>
</doc>