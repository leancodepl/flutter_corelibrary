<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.AspNetCore.Mvc.ViewFeatures</name>
    </assembly>
    <members>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewFeatures.AntiforgeryExtensions">
            <summary>
            Static class that adds extension methods to <see cref="T:Microsoft.AspNetCore.Antiforgery.IAntiforgery"/>. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.AntiforgeryExtensions.GetHtml(Microsoft.AspNetCore.Antiforgery.IAntiforgery,Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Generates an &lt;input type="hidden"&gt; element for an antiforgery token.
            </summary>
            <param name="antiforgery">The <see cref="T:Microsoft.AspNetCore.Antiforgery.IAntiforgery"/> instance.</param>
            <param name="httpContext">The <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/> associated with the current request.</param>
            <returns>
            A <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing an &lt;input type="hidden"&gt; element. This element should be put
            inside a &lt;form&gt;.
            </returns>
            <remarks>
            This method has a side effect:
            A response cookie is set if there is no valid cookie associated with the request.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewFeatures.AttributeDictionary">
            <summary>
            A dictionary for HTML attributes.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.AttributeDictionary.Item(System.String)">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.AttributeDictionary.Count">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.AttributeDictionary.IsReadOnly">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.AttributeDictionary.Keys">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.AttributeDictionary.Values">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.AttributeDictionary.System#Collections#Generic#IReadOnlyDictionary{System#String,System#String}#Keys">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.AttributeDictionary.System#Collections#Generic#IReadOnlyDictionary{System#String,System#String}#Values">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.AttributeDictionary.Clear">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.AttributeDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.String})">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.AttributeDictionary.Add(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.AttributeDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.String})">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.AttributeDictionary.ContainsKey(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.AttributeDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.String}[],System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.AttributeDictionary.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.AttributeDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.String})">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.AttributeDictionary.Remove(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.AttributeDictionary.TryGetValue(System.String,System.String@)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.AttributeDictionary.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.AttributeDictionary.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,System#String}}#GetEnumerator">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewFeatures.AttributeDictionary.Enumerator">
            <summary>
            An enumerator for <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.AttributeDictionary"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.AttributeDictionary.Enumerator.#ctor(Microsoft.AspNetCore.Mvc.ViewFeatures.AttributeDictionary)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.AttributeDictionary.Enumerator"/>.
            </summary>
            <param name="attributes">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.AttributeDictionary"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.AttributeDictionary.Enumerator.Current">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.AttributeDictionary.Enumerator.System#Collections#IEnumerator#Current">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.AttributeDictionary.Enumerator.Dispose">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.AttributeDictionary.Enumerator.MoveNext">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.AttributeDictionary.Enumerator.Reset">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.IViewBufferScope">
            <summary>
            Creates and manages the lifetime of <see cref="T:ViewBufferValue[]"/> instances.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.IViewBufferScope.GetPage(System.Int32)">
            <summary>
            Gets a <see cref="T:ViewBufferValue[]"/>.
            </summary>
            <param name="pageSize">The minimum size of the segment.</param>
            <returns>The <see cref="T:ViewBufferValue[]"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.IViewBufferScope.ReturnSegment(Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBufferValue[])">
            <summary>
            Returns a <see cref="T:ViewBufferValue[]"/> that can be reused.
            </summary>
            <param name="segment">The <see cref="T:ViewBufferValue[]"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.IViewBufferScope.CreateWriter(System.IO.TextWriter)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.PagedBufferedTextWriter"/> that will delegate to the provided
            <paramref name="writer"/>.
            </summary>
            <param name="writer">The <see cref="T:System.IO.TextWriter"/>.</param>
            <returns>A <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.PagedBufferedTextWriter"/>.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.MemoryPoolViewBufferScope">
            <summary>
            A <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.IViewBufferScope"/> that uses pooled memory.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.MemoryPoolViewBufferScope.#ctor(System.Buffers.ArrayPool{Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBufferValue},System.Buffers.ArrayPool{System.Char})">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.MemoryPoolViewBufferScope"/>.
            </summary>
            <param name="viewBufferPool">
            The <see cref="T:System.Buffers.ArrayPool`1"/> for creating <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBufferValue"/> instances.
            </param>
            <param name="charPool">
            The <see cref="T:System.Buffers.ArrayPool`1"/> for creating <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.PagedBufferedTextWriter"/> instances.
            </param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.MemoryPoolViewBufferScope.GetPage(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.MemoryPoolViewBufferScope.ReturnSegment(Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBufferValue[])">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.MemoryPoolViewBufferScope.CreateWriter(System.IO.TextWriter)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.MemoryPoolViewBufferScope.Dispose">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.PagedCharBuffer.Clear">
            <summary>
            Return all but one of the pages to the <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ICharBufferSource"/>.
            This way if someone writes a large chunk of content, we can return those buffers and avoid holding them
            for extended durations.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBuffer">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Html.IHtmlContentBuilder"/> that is backed by a buffer provided by <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.IViewBufferScope"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBuffer.#ctor(Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.IViewBufferScope,System.String,System.Int32)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBuffer"/>.
            </summary>
            <param name="bufferScope">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.IViewBufferScope"/>.</param>
            <param name="name">A name to identify this instance.</param>
            <param name="pageSize">The size of buffer pages.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBuffer.Count">
            <summary>
            Get the <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBufferPage"/> count.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBuffer.Item(System.Int32)">
            <summary>
            Gets a <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBufferPage"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBuffer.Append(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBuffer.AppendHtml(Microsoft.AspNetCore.Html.IHtmlContent)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBuffer.AppendHtml(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBuffer.Clear">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBuffer.WriteTo(System.IO.TextWriter,System.Text.Encodings.Web.HtmlEncoder)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBuffer.WriteToAsync(System.IO.TextWriter,System.Text.Encodings.Web.HtmlEncoder)">
            <summary>
            Writes the buffered content to <paramref name="writer"/>.
            </summary>
            <param name="writer">The <see cref="T:System.IO.TextWriter"/>.</param>
            <param name="encoder">The <see cref="T:System.Text.Encodings.Web.HtmlEncoder"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> which will complete once content has been written.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBufferTextWriter">
            <summary>
            <para>
            A <see cref="T:System.IO.TextWriter"/> that is backed by a unbuffered writer (over the Response stream) and/or a
            <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBuffer"/>
            </para>
            <para>
            When <c>Flush</c> or <c>FlushAsync</c> is invoked, the writer copies all content from the buffer to
            the writer and switches to writing to the unbuffered writer for all further write operations.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBufferTextWriter.#ctor(Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBuffer,System.Text.Encoding)">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBufferTextWriter"/>.
            </summary>
            <param name="buffer">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBuffer"/> for buffered output.</param>
            <param name="encoding">The <see cref="T:System.Text.Encoding"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBufferTextWriter.#ctor(Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBuffer,System.Text.Encoding,System.Text.Encodings.Web.HtmlEncoder,System.IO.TextWriter)">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBufferTextWriter"/>.
            </summary>
            <param name="buffer">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBuffer"/> for buffered output.</param>
            <param name="encoding">The <see cref="T:System.Text.Encoding"/>.</param>
            <param name="htmlEncoder">The HTML encoder.</param>
            <param name="inner">
            The inner <see cref="T:System.IO.TextWriter"/> to write output to when this instance is no longer buffering.
            </param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBufferTextWriter.Encoding">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBufferTextWriter.Buffer">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBuffer"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBufferTextWriter.Flushed">
            <summary>
            Gets a value that indicates if <see cref="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBufferTextWriter.Flush"/> or <see cref="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBufferTextWriter.FlushAsync" /> was invoked.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBufferTextWriter.Write(System.Char)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBufferTextWriter.Write(System.Char[],System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBufferTextWriter.Write(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBufferTextWriter.Write(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBufferTextWriter.Write(Microsoft.AspNetCore.Html.IHtmlContent)">
            <summary>
            Writes an <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> value.
            </summary>
            <param name="value">The <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> value.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBufferTextWriter.Write(Microsoft.AspNetCore.Html.IHtmlContentContainer)">
            <summary>
            Writes an <see cref="T:Microsoft.AspNetCore.Html.IHtmlContentContainer"/> value.
            </summary>
            <param name="value">The <see cref="T:Microsoft.AspNetCore.Html.IHtmlContentContainer"/> value.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBufferTextWriter.WriteLine(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBufferTextWriter.WriteAsync(System.Char)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBufferTextWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBufferTextWriter.WriteAsync(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBufferTextWriter.WriteLine">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBufferTextWriter.WriteLine(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBufferTextWriter.WriteLineAsync(System.Char)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBufferTextWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBufferTextWriter.WriteLineAsync(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBufferTextWriter.WriteLineAsync">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBufferTextWriter.Flush">
            <summary>
            Copies the buffered content to the unbuffered writer and invokes flush on it.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBufferTextWriter.FlushAsync">
            <summary>
            Copies the buffered content to the unbuffered writer and invokes flush on it.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous copy and flush operations.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBufferValue">
            <summary>
            Encapsulates a string or <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> value.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBufferValue.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBufferValue"/> with a <c>string</c> value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBufferValue.#ctor(Microsoft.AspNetCore.Html.IHtmlContent)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBufferValue"/> with a <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> value.
            </summary>
            <param name="content">The <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBufferValue.Value">
            <summary>
            Gets the value.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.CachedExpressionCompiler.Process``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <remarks>
            This is the entry point to the expression compilation system. The system
            a) Will rewrite the expression to avoid null refs when any part of the expression tree is evaluated  to null
            b) Attempt to cache the result, or an intermediate part of the result.
            If the provided expression is particularly obscure and the system doesn't know how to handle it, it will
            return null.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewFeatures.CookieTempDataProvider">
            <summary>
            Provides data from cookie to the current <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary"/> object.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.ViewFeatures.CookieTempDataProvider.CookieName">
            <summary>
            The name of the cookie.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.CookieTempDataProvider.#ctor(Microsoft.AspNetCore.DataProtection.IDataProtectionProvider,Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Mvc.CookieTempDataProviderOptions},Microsoft.AspNetCore.Mvc.ViewFeatures.Infrastructure.TempDataSerializer)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.CookieTempDataProvider"/>.
            </summary>
            <param name="dataProtectionProvider">The <see cref="T:Microsoft.AspNetCore.DataProtection.IDataProtectionProvider"/>.</param>
            <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/>.</param>
            <param name="options">The <see cref="T:Microsoft.AspNetCore.Mvc.CookieTempDataProviderOptions"/>.</param>
            <param name="tempDataSerializer">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.Infrastructure.TempDataSerializer"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.CookieTempDataProvider.LoadTempData(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Loads the temp data from the request.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/>.</param>
            <returns>The temp data.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.CookieTempDataProvider.SaveTempData(Microsoft.AspNetCore.Http.HttpContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Save the temp data to the request.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/>.</param>
            <param name="values">The values.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewFeatures.DefaultHtmlGenerator">
            <summary>
            Default implementation of <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.IHtmlGenerator"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.DefaultHtmlGenerator.#ctor(Microsoft.AspNetCore.Antiforgery.IAntiforgery,Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Mvc.MvcViewOptions},Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider,Microsoft.AspNetCore.Mvc.Routing.IUrlHelperFactory,System.Text.Encodings.Web.HtmlEncoder,Microsoft.AspNetCore.Mvc.ViewFeatures.ValidationHtmlAttributeProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.DefaultHtmlGenerator"/> class.
            </summary>
            <param name="antiforgery">The <see cref="T:Microsoft.AspNetCore.Antiforgery.IAntiforgery"/> instance which is used to generate antiforgery
            tokens.</param>
            <param name="optionsAccessor">The accessor for <see cref="T:Microsoft.AspNetCore.Mvc.MvcViewOptions"/>.</param>
            <param name="metadataProvider">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider"/>.</param>
            <param name="urlHelperFactory">The <see cref="T:Microsoft.AspNetCore.Mvc.Routing.IUrlHelperFactory"/>.</param>
            <param name="htmlEncoder">The <see cref="T:System.Text.Encodings.Web.HtmlEncoder"/>.</param>
            <param name="validationAttributeProvider">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ValidationHtmlAttributeProvider"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.DefaultHtmlGenerator.AllowRenderingMaxLengthAttribute">
            <summary>
            Gets or sets a value that indicates whether the <c>maxlength</c> attribute should be rendered for
            compatible HTML input elements, when they're bound to models marked with either
            <see cref="T:System.ComponentModel.DataAnnotations.StringLengthAttribute"/> or <see cref="T:System.ComponentModel.DataAnnotations.MaxLengthAttribute"/> attributes.
            </summary>
            <value>The default value is <see langword="true"/>.</value>
            <remarks>
            <para>
            If both attributes are specified, the one with the smaller value will be used for the rendered
            <c>maxlength</c> attribute.
            </para>
            <para>
            This property is currently ignored.
            </para>
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.DefaultHtmlGenerator.IdAttributeDotReplacement">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.DefaultHtmlGenerator.Encode(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.DefaultHtmlGenerator.Encode(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.DefaultHtmlGenerator.FormatValue(System.Object,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.DefaultHtmlGenerator.GenerateActionLink(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,System.String,System.String,System.String,System.String,System.String,System.String,System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.DefaultHtmlGenerator.GeneratePageLink(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,System.String,System.String,System.String,System.String,System.String,System.String,System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.DefaultHtmlGenerator.GenerateAntiforgery(Microsoft.AspNetCore.Mvc.Rendering.ViewContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.DefaultHtmlGenerator.GenerateCheckBox(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer,System.String,System.Nullable{System.Boolean},System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.DefaultHtmlGenerator.GenerateHiddenForCheckbox(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.DefaultHtmlGenerator.GenerateForm(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,System.String,System.String,System.Object,System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.DefaultHtmlGenerator.GeneratePageForm(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,System.String,System.String,System.Object,System.String,System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.DefaultHtmlGenerator.GenerateRouteForm(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,System.String,System.Object,System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.DefaultHtmlGenerator.GenerateHidden(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer,System.String,System.Object,System.Boolean,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.DefaultHtmlGenerator.GenerateLabel(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer,System.String,System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.DefaultHtmlGenerator.GeneratePassword(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer,System.String,System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.DefaultHtmlGenerator.GenerateRadioButton(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer,System.String,System.Object,System.Nullable{System.Boolean},System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.DefaultHtmlGenerator.GenerateRouteLink(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,System.String,System.String,System.String,System.String,System.String,System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.DefaultHtmlGenerator.GenerateSelect(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem},System.Boolean,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.DefaultHtmlGenerator.GenerateSelect(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem},System.Collections.Generic.ICollection{System.String},System.Boolean,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.DefaultHtmlGenerator.GenerateTextArea(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer,System.String,System.Int32,System.Int32,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.DefaultHtmlGenerator.GenerateTextBox(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer,System.String,System.Object,System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.DefaultHtmlGenerator.GenerateValidationMessage(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer,System.String,System.String,System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.DefaultHtmlGenerator.GenerateValidationSummary(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,System.Boolean,System.String,System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.DefaultHtmlGenerator.GetCurrentValues(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer,System.String,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.DefaultHtmlGenerator.GenerateOption(Microsoft.AspNetCore.Mvc.Rendering.SelectListItem,System.String)">
            <remarks>
            Not used directly in HtmlHelper. Exposed for use in DefaultDisplayTemplates.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.DefaultHtmlGenerator.GenerateFormCore(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,System.String,System.String,System.Object)">
            <summary>
            Generate a &lt;form&gt; element.
            </summary>
            <param name="viewContext">A <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.ViewContext"/> instance for the current scope.</param>
            <param name="action">The URL where the form-data should be submitted.</param>
            <param name="method">The HTTP method for processing the form, either GET or POST.</param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <returns>
            A <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder"/> instance for the &lt;/form&gt; element.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.DefaultHtmlGenerator.GenerateInput(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,Microsoft.AspNetCore.Mvc.ViewFeatures.InputType,Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer,System.String,System.Object,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Generate an input tag.
            </summary>
            <param name="viewContext">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.ViewContext"/>.</param>
            <param name="inputType">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.InputType"/>.</param>
            <param name="modelExplorer">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/>.</param>
            <param name="expression">The expression.</param>
            <param name="value">The value.</param>
            <param name="useViewData">Whether to use view data.</param>
            <param name="isChecked">If the input is checked.</param>
            <param name="setId">Whether this should set id.</param>
            <param name="isExplicitValue">Whether this is an explicit value.</param>
            <param name="format">The format.</param>
            <param name="htmlAttributes">The html attributes.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.DefaultHtmlGenerator.GenerateLink(System.String,System.String,System.Object)">
            <summary>
            Generate a link.
            </summary>
            <param name="linkText">The text for the link.</param>
            <param name="url">The url for the link.</param>
            <param name="htmlAttributes">The html attributes.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.DefaultHtmlGenerator.AddPlaceholderAttribute(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary,Microsoft.AspNetCore.Mvc.Rendering.TagBuilder,Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer,System.String)">
            <summary>
            Adds a placeholder attribute to the <paramref name="tagBuilder" />.
            </summary>
            <param name="viewData">A <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary"/> instance for the current scope.</param>
            <param name="tagBuilder">A <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder"/> instance.</param>
            <param name="modelExplorer">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/> for the <paramref name="expression"/>.</param>
            <param name="expression">Expression name, relative to the current model.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.DefaultHtmlGenerator.AddMaxLengthAttribute(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary,Microsoft.AspNetCore.Mvc.Rendering.TagBuilder,Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer,System.String)">
            <summary>
            Adds a <c>maxlength</c> attribute to the <paramref name="tagBuilder" />.
            </summary>
            <param name="viewData">A <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary"/> instance for the current scope.</param>
            <param name="tagBuilder">A <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder"/> instance.</param>
            <param name="modelExplorer">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/> for the <paramref name="expression"/>.</param>
            <param name="expression">Expression name, relative to the current model.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.DefaultHtmlGenerator.AddValidationAttributes(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,Microsoft.AspNetCore.Mvc.Rendering.TagBuilder,Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer,System.String)">
            <summary>
            Adds validation attributes to the <paramref name="tagBuilder" /> if client validation
            is enabled.
            </summary>
            <param name="viewContext">A <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.ViewContext"/> instance for the current scope.</param>
            <param name="tagBuilder">A <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder"/> instance.</param>
            <param name="modelExplorer">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/> for the <paramref name="expression"/>.</param>
            <param name="expression">Expression name, relative to the current model.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.DefaultHtmlGenerator.GenerateGroupsAndOptions(System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem})">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewFeatures.DefaultHtmlGeneratorExtensions">
            <summary>
            Static class that adds extension methods to <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.IHtmlGenerator"/>. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.DefaultHtmlGeneratorExtensions.GenerateForm(Microsoft.AspNetCore.Mvc.ViewFeatures.IHtmlGenerator,Microsoft.AspNetCore.Mvc.Rendering.ViewContext,System.String,System.String,System.String,System.Object,System.String,System.Object)">
            <summary>
            Generates a form.
            </summary>
            <param name="generator">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.IHtmlGenerator"/>.</param>
            <param name="viewContext">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.ViewContext"/>.</param>
            <param name="actionName">The action name.</param>
            <param name="controllerName">The name of the controller.</param>
            <param name="fragment">The fragment.</param>
            <param name="routeValues">The route values.</param>
            <param name="method">The form method.</param>
            <param name="htmlAttributes">The html attributes.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.DefaultHtmlGeneratorExtensions.GenerateRouteForm(Microsoft.AspNetCore.Mvc.ViewFeatures.IHtmlGenerator,Microsoft.AspNetCore.Mvc.Rendering.ViewContext,System.String,System.Object,System.String,System.String,System.Object)">
            <summary>
            Generates a form for a route.
            </summary>
            <param name="generator">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.IHtmlGenerator"/>.</param>
            <param name="viewContext">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.ViewContext"/>.</param>
            <param name="routeName">The nam eof the route.</param>
            <param name="routeValues">The route values.</param>
            <param name="fragment">The fragment.</param>
            <param name="method">The form method.</param>
            <param name="htmlAttributes">The html attributes.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder"/>.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewFeatures.DefaultValidationHtmlAttributeProvider">
            <summary>
            Default implementation of <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ValidationHtmlAttributeProvider"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.DefaultValidationHtmlAttributeProvider.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Mvc.MvcViewOptions},Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider,Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientValidatorCache)">
            <summary>
            Initializes a new <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.DefaultValidationHtmlAttributeProvider"/> instance.
            </summary>
            <param name="optionsAccessor">The accessor for <see cref="T:Microsoft.AspNetCore.Mvc.MvcViewOptions"/>.</param>
            <param name="metadataProvider">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider"/>.</param>
            <param name="clientValidatorCache">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientValidatorCache"/> that provides
            a list of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IClientModelValidator"/>s.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.DefaultValidationHtmlAttributeProvider.AddValidationAttributes(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer,System.Collections.Generic.IDictionary{System.String,System.String})">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ExpressionMetadataProvider.FromStringExpression(System.String,Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary,Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider)">
            <summary>
            Gets <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/> for named <paramref name="expression"/> in given
            <paramref name="viewData"/>.
            </summary>
            <param name="expression">Expression name, relative to <c>viewData.Model</c>.</param>
            <param name="viewData">
            The <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary"/> that may contain the <paramref name="expression"/> value.
            </param>
            <param name="metadataProvider">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider"/>.</param>
            <returns>
            <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/> for named <paramref name="expression"/> in given <paramref name="viewData"/>.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Filters.ControllerSaveTempDataPropertyFilter.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewFeatures.Filters.SaveTempDataFilter">
            <summary>
            A filter that saves temp data.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Filters.SaveTempDataFilter.#ctor(Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionaryFactory)">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.Filters.SaveTempDataFilter"/>.
            </summary>
            <param name="factory">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionaryFactory"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Filters.SaveTempDataFilter.OnResourceExecuting(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Filters.SaveTempDataFilter.OnResourceExecuted(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Filters.SaveTempDataFilter.OnResultExecuting(Microsoft.AspNetCore.Mvc.Filters.ResultExecutingContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Filters.SaveTempDataFilter.OnResultExecuted(Microsoft.AspNetCore.Mvc.Filters.ResultExecutedContext)">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Filters.SaveTempDataPropertyFilterBase.Properties">
            <summary>
            Describes the temp data properties which exist on <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Filters.SaveTempDataPropertyFilterBase.Subject"/>
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Filters.SaveTempDataPropertyFilterBase.Subject">
            <summary>
            The <see cref="T:System.Object"/> which has the temp data properties.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Filters.SaveTempDataPropertyFilterBase.OriginalValues">
            <summary>
            Tracks the values which originally existed in temp data.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Filters.SaveTempDataPropertyFilterBase.OnTempDataSaving(Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary)">
            <summary>
            Puts the modified values of <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Filters.SaveTempDataPropertyFilterBase.Subject"/> into <paramref name="tempData"/>.
            </summary>
            <param name="tempData">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary"/> to be updated.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Filters.SaveTempDataPropertyFilterBase.SetPropertyValues(Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary)">
            <summary>
            Sets the values of the properties of <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Filters.SaveTempDataPropertyFilterBase.Subject"/> from <paramref name="tempData"/>.
            </summary>
            <param name="tempData">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Filters.TempDataApplicationModelProvider.Order">
            <inheritdoc />
            <remarks>This order ensures that <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.Filters.TempDataApplicationModelProvider"/> runs after the <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.DefaultApplicationModelProvider"/>.</remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Filters.TempDataApplicationModelProvider.OnProvidersExecuted(Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelProviderContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Filters.TempDataApplicationModelProvider.OnProvidersExecuting(Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelProviderContext)">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Filters.ViewDataAttributeApplicationModelProvider.Order">
            <inheritdoc />
            <remarks>This order ensures that <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.Filters.ViewDataAttributeApplicationModelProvider"/> runs after the <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationModels.DefaultApplicationModelProvider"/>.</remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Filters.ViewDataAttributeApplicationModelProvider.OnProvidersExecuted(Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelProviderContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Filters.ViewDataAttributeApplicationModelProvider.OnProvidersExecuting(Microsoft.AspNetCore.Mvc.ApplicationModels.ApplicationModelProviderContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewFeatures.FormContext">
            <summary>
            Information about the current &lt;form&gt;.
            </summary>
            <remarks>
            Literal &lt;form&gt; elements in a view will share the default <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.FormContext"/> instance unless tag
            helpers are enabled.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.FormContext.FormData">
            <summary>
            Gets a property bag for any information you wish to associate with a &lt;form/&gt; in an
            <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> implementation or extension method.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.FormContext.HasAntiforgeryToken">
            <summary>
            Gets or sets an indication the current &lt;form&gt; element contains an antiforgery token. Do not use
            unless <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.FormContext.CanRenderAtEndOfForm"/> is <c>true</c>.
            </summary>
            <value>
            <c>true</c> if the current &lt;form&gt; element contains an antiforgery token; <c>false</c> otherwise.
            </value>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.FormContext.HasFormData">
            <summary>
            Gets an indication the <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.FormContext.FormData"/> property bag has been used and likely contains entries.
            </summary>
            <value>
            <c>true</c> if the backing field for <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.FormContext.FormData"/> is non-<c>null</c>; <c>false</c> otherwise.
            </value>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.FormContext.HasEndOfFormContent">
            <summary>
            Gets an indication the <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.FormContext.EndOfFormContent"/> collection has been used and likely contains entries.
            </summary>
            <value>
            <c>true</c> if the backing field for <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.FormContext.EndOfFormContent"/> is non-<c>null</c>; <c>false</c>
            otherwise.
            </value>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.FormContext.EndOfFormContent">
            <summary>
            Gets an <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> collection that should be rendered just prior to the next &lt;/form&gt;
            end tag. Do not use unless <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.FormContext.CanRenderAtEndOfForm"/> is <c>true</c>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.FormContext.CanRenderAtEndOfForm">
            <summary>
            Gets or sets an indication whether extra content can be rendered at the end of the content of this
            &lt;form&gt; element. That is, <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.FormContext.EndOfFormContent"/> will be rendered just prior to the
            &lt;/form&gt; end tag.
            </summary>
            <value>
            <c>true</c> if the framework will render <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.FormContext.EndOfFormContent"/>; <c>false</c> otherwise. In
            particular, <c>true</c> if the current &lt;form&gt; is associated with a tag helper or will be generated by
            an HTML helper; <c>false</c> when using the default <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.FormContext"/> instance.
            </value>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.FormContext.RenderedFields">
            <summary>
            Gets a dictionary mapping full HTML field names to indications that the named field has been rendered in
            this &lt;form&gt;.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.FormContext.InvariantFields">
            <summary>
            Gets a dictionary mapping full HTML field names to indications that corresponding value was formatted
            using <see cref="P:System.Globalization.CultureInfo.InvariantCulture"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.FormContext.RenderedField(System.String)">
            <summary>
            Returns an indication based on <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.FormContext.RenderedFields"/> that the given <paramref name="fieldName"/> has
            been rendered in this &lt;form&gt;.
            </summary>
            <param name="fieldName">The full HTML name of a field that may have been rendered.</param>
            <returns>
            <c>true</c> if the given <paramref name="fieldName"/> has been rendered; <c>false</c> otherwise.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.FormContext.RenderedField(System.String,System.Boolean)">
            <summary>
            Updates <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.FormContext.RenderedFields"/> to indicate <paramref name="fieldName"/> has been rendered in this
            &lt;form&gt;.
            </summary>
            <param name="fieldName">The full HTML name of a field that may have been rendered.</param>
            <param name="value">If <c>true</c>, the given <paramref name="fieldName"/> has been rendered.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlAttributePropertyHelper.UpdateCache(System.Type)">
            <summary>
            Part of <see cref="T:System.Reflection.Metadata.MetadataUpdateHandlerAttribute"/> contract.
            </summary>
            <param name="_"></param>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper">
            <summary>
            Default implementation of <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/>.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.ValidationInputCssClassName">
            <summary>
            CSS class name for input validation.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.ValidationInputValidCssClassName">
            <summary>
            CSS class name for valid input validation.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.ValidationMessageCssClassName">
            <summary>
            CSS class name for field validation error.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.ValidationMessageValidCssClassName">
            <summary>
            CSS class name for valid field validation.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.ValidationSummaryCssClassName">
            <summary>
            CSS class name for validation summary errors.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.ValidationSummaryValidCssClassName">
            <summary>
            CSS class name for valid validation summary.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.#ctor(Microsoft.AspNetCore.Mvc.ViewFeatures.IHtmlGenerator,Microsoft.AspNetCore.Mvc.ViewEngines.ICompositeViewEngine,Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider,Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.IViewBufferScope,System.Text.Encodings.Web.HtmlEncoder,System.Text.Encodings.Web.UrlEncoder)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.Html5DateRenderingMode">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.IdAttributeDotReplacement">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.ViewContext">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.ViewBag">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.ViewData">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.TempData">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.UrlEncoder">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.MetadataProvider">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.ObjectToDictionary(System.Object)">
             <summary>
             Creates a dictionary from an object, by adding each public instance property as a key with its associated
             value to the dictionary. It will expose public properties from derived types as well. This is typically
             used with objects of an anonymous type.
            
             If the <paramref name="value"/> is already an <see cref="T:System.Collections.Generic.IDictionary`2"/> instance, then it
             is returned as-is.
             <example>
             <c>new { data_name="value" }</c> will translate to the entry <c>{ "data_name", "value" }</c>
             in the resulting dictionary.
             </example>
             </summary>
             <param name="value">The <see cref="T:System.Object"/> to be converted.</param>
             <returns>The created dictionary of property names and property values.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.AnonymousObjectToHtmlAttributes(System.Object)">
            <summary>
            Creates a dictionary of HTML attributes from the input object,
            translating underscores to dashes in each public instance property.
            </summary>
            <param name="htmlAttributes">Anonymous object describing HTML attributes.</param>
            <returns>A dictionary that represents HTML attributes.</returns>
            <remarks>
            If the object is already an <see cref="T:System.Collections.Generic.IDictionary`2"/> instance, then a shallow copy is
            returned.
            <example>
            <c>new { data_name="value" }</c> will translate to the entry <c>{ "data-name", "value" }</c>
            in the resulting dictionary.
            </example>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.Contextualize(Microsoft.AspNetCore.Mvc.Rendering.ViewContext)">
            <summary>
            Sets the <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.ViewContext"/>.
            </summary>
            <param name="viewContext">The context to use.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.ActionLink(System.String,System.String,System.String,System.String,System.String,System.String,System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.AntiForgeryToken">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.BeginForm(System.String,System.String,System.Object,Microsoft.AspNetCore.Mvc.Rendering.FormMethod,System.Nullable{System.Boolean},System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.BeginRouteForm(System.String,System.Object,Microsoft.AspNetCore.Mvc.Rendering.FormMethod,System.Nullable{System.Boolean},System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.EndForm">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.CheckBox(System.String,System.Nullable{System.Boolean},System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.Encode(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.Encode(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.FormatValue(System.Object,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.GenerateIdFromName(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.Display(System.String,System.String,System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.DisplayName(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.DisplayText(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.DropDownList(System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem},System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.Editor(System.String,System.String,System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.GetEnumSelectList``1">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.GetEnumSelectList(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.Hidden(System.String,System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.Id(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.Label(System.String,System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.ListBox(System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem},System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.Name(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.PartialAsync(System.String,System.Object,Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.RenderPartialAsync(System.String,System.Object,Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.GenerateDisplay(Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer,System.String,System.String,System.Object)">
            <summary>
            Generate a display.
            </summary>
            <param name="modelExplorer">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/>.</param>
            <param name="htmlFieldName">The name of the html field.</param>
            <param name="templateName">The name of the template.</param>
            <param name="additionalViewData">The additional view data, either an <see cref="T:System.Collections.Generic.IDictionary`2"/> or some other object whose public properties will be merged with the <see cref="T:ViewDataDictionary" />.</param>
            <returns><see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.RenderPartialCoreAsync(System.String,System.Object,Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary,System.IO.TextWriter)">
            <summary>
            Render a partial view.
            </summary>
            <param name="partialViewName">The name of the partial view.</param>
            <param name="model">The model.</param>
            <param name="viewData">The view data.</param>
            <param name="writer">The <see cref="T:System.IO.TextWriter"/>.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.Password(System.String,System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.RadioButton(System.String,System.Object,System.Nullable{System.Boolean},System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.Raw(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.Raw(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.RouteLink(System.String,System.String,System.String,System.String,System.String,System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.ValidationMessage(System.String,System.String,System.Object,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.ValidationSummary(System.Boolean,System.String,System.Object,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.GetFormMethodString(Microsoft.AspNetCore.Mvc.Rendering.FormMethod)">
            <summary>
            Returns the HTTP method that handles form input (GET or POST) as a string.
            </summary>
            <param name="method">The HTTP method that handles the form.</param>
            <returns>The form method string, either "get" or "post".</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.TextArea(System.String,System.String,System.Int32,System.Int32,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.TextBox(System.String,System.Object,System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.Value(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.CreateForm">
            <summary>
            Override this method to return an <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.MvcForm"/> subclass. That subclass may change
            <see cref="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.EndForm"/> behavior.
            </summary>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.MvcForm"/> instance.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.GenerateCheckBox(Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer,System.String,System.Nullable{System.Boolean},System.Object)">
            <summary>
            Generate a check box.
            </summary>
            <param name="modelExplorer">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/>.</param>
            <param name="expression">The expression.</param>
            <param name="isChecked">Whether the box should be checked.</param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.GenerateDisplayName(Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer,System.String)">
            <summary>
            Generate display name.
            </summary>
            <param name="modelExplorer">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/>.</param>
            <param name="expression">The expression.</param>
            <returns>The display name.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.GenerateDisplayText(Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer)">
            <summary>
            Generate display text.
            </summary>
            <param name="modelExplorer">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/>.</param>
            <returns>The text.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.GenerateDropDown(Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer,System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem},System.String,System.Object)">
            <summary>
            Generate a drop down.
            </summary>
            <param name="modelExplorer">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/>.</param>
            <param name="expression">The expression.</param>
            <param name="selectList">The select list.</param>
            <param name="optionLabel">The option label.</param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.GenerateEditor(Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer,System.String,System.String,System.Object)">
            <summary>
            Generate editor.
            </summary>
            <param name="modelExplorer">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/>.</param>
            <param name="htmlFieldName">The name of the html field.</param>
            <param name="templateName">The name of the template</param>
            <param name="additionalViewData">Additional view data.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.GenerateForm(System.String,System.String,System.Object,Microsoft.AspNetCore.Mvc.Rendering.FormMethod,System.Nullable{System.Boolean},System.Object)">
            <summary>
            Renders a &lt;form&gt; start tag to the response. When the user submits the form, the action with name
            <paramref name="actionName"/> will process the request.
            </summary>
            <param name="actionName">The name of the action method.</param>
            <param name="controllerName">The name of the controller.</param>
            <param name="routeValues">
            An <see cref="T:System.Object"/> that contains the parameters for a route. The parameters are retrieved through
            reflection by examining the properties of the <see cref="T:System.Object"/>. This <see cref="T:System.Object"/> is typically
            created using <see cref="T:System.Object"/> initializer syntax. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the route parameters.
            </param>
            <param name="method">The HTTP method for processing the form, either GET or POST.</param>
            <param name="antiforgery">
            If <c>true</c>, &lt;form&gt; elements will include an antiforgery token.
            If <c>false</c>, suppresses the generation an &lt;input&gt; of type "hidden" with an antiforgery token.
            If <c>null</c>, &lt;form&gt; elements will include an antiforgery token only if
            <paramref name="method"/> is not <see cref="F:Microsoft.AspNetCore.Mvc.Rendering.FormMethod.Get"/>.
            </param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <returns>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.MvcForm"/> instance which renders the &lt;/form&gt; end tag when disposed.
            </returns>
            <remarks>
            In this context, "renders" means the method writes its output using <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.Writer"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.GenerateRouteForm(System.String,System.Object,Microsoft.AspNetCore.Mvc.Rendering.FormMethod,System.Nullable{System.Boolean},System.Object)">
            <summary>
            Renders a &lt;form&gt; start tag to the response. The route with name <paramref name="routeName"/>
            generates the &lt;form&gt;'s <c>action</c> attribute value.
            </summary>
            <param name="routeName">The name of the route.</param>
            <param name="routeValues">
            An <see cref="T:System.Object"/> that contains the parameters for a route. The parameters are retrieved through
            reflection by examining the properties of the <see cref="T:System.Object"/>. This <see cref="T:System.Object"/> is typically
            created using <see cref="T:System.Object"/> initializer syntax. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the route parameters.
            </param>
            <param name="method">The HTTP method for processing the form, either GET or POST.</param>
            <param name="antiforgery">
            If <c>true</c>, &lt;form&gt; elements will include an antiforgery token.
            If <c>false</c>, suppresses the generation an &lt;input&gt; of type "hidden" with an antiforgery token.
            If <c>null</c>, &lt;form&gt; elements will include an antiforgery token only if
            <paramref name="method"/> is not <see cref="F:Microsoft.AspNetCore.Mvc.Rendering.FormMethod.Get"/>.
            </param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <returns>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.MvcForm"/> instance which renders the &lt;/form&gt; end tag when disposed.
            </returns>
            <remarks>
            In this context, "renders" means the method writes its output using <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.Writer"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.GenerateHidden(Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer,System.String,System.Object,System.Boolean,System.Object)">
            <summary>
            Generate a hidden.
            </summary>
            <param name="modelExplorer"></param>
            <param name="expression"></param>
            <param name="value"></param>
            <param name="useViewData"></param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.GenerateId(System.String)">
            <summary>
            Generate an id.
            </summary>
            <param name="expression">The expresion.</param>
            <returns>The id.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.GenerateLabel(Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer,System.String,System.String,System.Object)">
            <summary>
            Generate a label.
            </summary>
            <param name="modelExplorer">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/>.</param>
            <param name="expression">The expresion.</param>
            <param name="labelText">The label text.</param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.GenerateListBox(Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer,System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem},System.Object)">
            <summary>
            Generate a list box.
            </summary>
            <param name="modelExplorer">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/>.</param>
            <param name="expression">The expression.</param>
            <param name="selectList">An enumeration of <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/>.</param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.GenerateName(System.String)">
            <summary>
            Geneate a name.
            </summary>
            <param name="expression">The expression.</param>
            <returns>The name.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.GeneratePassword(Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer,System.String,System.Object,System.Object)">
            <summary>
            Generate a password.
            </summary>
            <param name="modelExplorer">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/>.</param>
            <param name="expression">The expression.</param>
            <param name="value">The password value.</param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.GenerateRadioButton(Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer,System.String,System.Object,System.Nullable{System.Boolean},System.Object)">
            <summary>
            Generate a radio button.
            </summary>
            <param name="modelExplorer">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/>.</param>
            <param name="expression">The expression.</param>
            <param name="value">The value.</param>
            <param name="isChecked">If the radio button is checked.</param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.GenerateTextArea(Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer,System.String,System.Int32,System.Int32,System.Object)">
            <summary>
            Generate a text area.
            </summary>
            <param name="modelExplorer">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/>.</param>
            <param name="expression">The expression.</param>
            <param name="rows">The number of rows.</param>
            <param name="columns">The number of columns.</param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.GenerateTextBox(Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer,System.String,System.Object,System.String,System.Object)">
            <summary>
            Generates a text box.
            </summary>
            <param name="modelExplorer">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/>.</param>
            <param name="expression">The expression.</param>
            <param name="value">The value.</param>
            <param name="format">The format.</param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.GenerateValidationMessage(Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer,System.String,System.String,System.String,System.Object)">
            <summary>
            Generate a validation message.
            </summary>
            <param name="modelExplorer">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/>.</param>
            <param name="expression">The expression.</param>
            <param name="message">The validation message.</param>
            <param name="tag">The tag.</param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.GenerateValidationSummary(System.Boolean,System.String,System.Object,System.String)">
            <summary>
            Generate a validation summary.
            </summary>
            <param name="excludePropertyErrors">Whether to exclude property errors.</param>
            <param name="message">The validation message.</param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <param name="tag">The tag.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.GenerateValue(System.String,System.Object,System.String,System.Boolean)">
            <summary>
            Generate a value.
            </summary>
            <param name="expression">The expression.</param>
            <param name="value">The value.</param>
            <param name="format">The format.</param>
            <param name="useViewData">Whether to use view data.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper.GetEnumSelectList(Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata)">
            <summary>
            Returns a select list for the given <paramref name="metadata"/>.
            </summary>
            <param name="metadata"><see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/> to generate a select list for.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing the select list for the given
            <paramref name="metadata"/>.
            </returns>
            <exception cref="T:System.ArgumentException">
            Thrown if <paramref name="metadata"/>'s <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.ModelType"/> is not an <see cref="T:System.Enum"/>
            or if it has a <see cref="T:System.FlagsAttribute"/>.
            </exception>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper`1">
            <summary>
            A <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper"/> for a specific model type.
            </summary>
            <typeparam name="TModel">The model type.</typeparam>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper`1.#ctor(Microsoft.AspNetCore.Mvc.ViewFeatures.IHtmlGenerator,Microsoft.AspNetCore.Mvc.ViewEngines.ICompositeViewEngine,Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider,Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.IViewBufferScope,System.Text.Encodings.Web.HtmlEncoder,System.Text.Encodings.Web.UrlEncoder,Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpressionProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper`1"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper`1.ViewData">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper`1.Contextualize(Microsoft.AspNetCore.Mvc.Rendering.ViewContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper`1.CheckBoxFor(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper`1.DropDownListFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem},System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper`1.DisplayFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String,System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper`1.DisplayNameFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper`1.DisplayNameForInnerType``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper`1.DisplayTextFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper`1.EditorFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String,System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper`1.HiddenFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper`1.IdFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper`1.LabelFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper`1.ListBoxFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem},System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper`1.NameFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper`1.PasswordFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper`1.RadioButtonFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Object,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper`1.TextAreaFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Int32,System.Int32,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper`1.TextBoxFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper`1.GetExpressionName``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Gets the name for <paramref name="expression"/>.
            </summary>
            <param name="expression">The expression.</param>
            <returns>The expression name.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper`1.GetModelExplorer``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/> for <paramref name="expression"/>.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="expression">The expression.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper`1.ValidationMessageFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String,System.Object,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelper`1.ValueFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelperOptions">
            <summary>
            Provides programmatic configuration for the HTML helpers and <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.ViewContext"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelperOptions.Html5DateRenderingMode">
            <summary>
            Gets or sets the <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.Html5DateRenderingMode.#ctor"/> value.
            </summary>
            <remarks>
            Set this property to <see cref="F:Microsoft.AspNetCore.Mvc.Rendering.Html5DateRenderingMode.CurrentCulture" /> to have templated helpers such as
            <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Editor(System.String,System.String,System.String,System.Object)" /> and <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1.EditorFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String,System.String,System.Object)" /> render date and time
            values using the current culture. By default, these helpers render dates and times as RFC 3339 compliant strings.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelperOptions.IdAttributeDotReplacement">
            <summary>
            Gets or sets the <see cref="T:System.String"/> that replaces periods in the ID attribute of an element.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelperOptions.ClientValidationEnabled">
            <summary>
            Gets or sets a value that indicates whether client-side validation is enabled.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelperOptions.ValidationMessageElement">
            <summary>
            Gets or sets the element name used to wrap a top-level message generated by
            <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ValidationMessage(System.String,System.String,System.Object,System.String)"/> and other overloads.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelperOptions.ValidationSummaryMessageElement">
            <summary>
            Gets or sets the element name used to wrap a top-level message generated by
            <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ValidationSummary(System.Boolean,System.String,System.Object,System.String)"/> and other overloads.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelperOptions.CheckBoxHiddenInputRenderMode">
            <summary>
            Gets or sets the way hidden inputs are rendered for checkbox tag helpers and html helpers.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelperOptions.FormInputRenderMode">
            <summary>
            Gets or sets a value that determines how form &lt;input/&gt; elements are rendered.
            </summary>
            <remarks>
            Some form elements (e.g., &lt;input type="text"/&gt;) require culture-specific formatting and parsing because their values are
            directly entered by the user. However, other inputs (e.g., &lt;input type="number"/&gt;) use culture-invariant
            formatting both in the HTML source and in the form request.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewFeatures.IAntiforgeryPolicy">
            <summary>
            A marker interface for filters which define a policy for antiforgery token validation.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewFeatures.IFileVersionProvider">
            <summary>
            Provides version hash for a specified file.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.IFileVersionProvider.AddFileVersionToPath(Microsoft.AspNetCore.Http.PathString,System.String)">
            <summary>
            Adds version query parameter to the specified file path.
            </summary>
            <param name="requestPathBase">The base path for the current HTTP request.</param>
            <param name="path">The path of the file to which version should be added.</param>
            <returns>Path containing the version query string.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewFeatures.IHtmlGenerator">
            <summary>
            Contract for a service supporting <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> and <c>ITagHelper</c> implementations.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.IHtmlGenerator.IdAttributeDotReplacement">
            <summary>
            Gets the replacement for '.' in an Id attribute.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.IHtmlGenerator.Encode(System.String)">
            <summary>
            Encodes a value.
            </summary>
            <param name="value">The value to encode.</param>
            <returns>The encoded value.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.IHtmlGenerator.Encode(System.Object)">
            <summary>
            Encodes a value.
            </summary>
            <param name="value">The value to encode.</param>
            <returns>The encoded value.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.IHtmlGenerator.FormatValue(System.Object,System.String)">
            <summary>
            Format a value.
            </summary>
            <param name="value">The value to format.</param>
            <param name="format">The format to use.</param>
            <returns>The formatted value.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.IHtmlGenerator.GenerateActionLink(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,System.String,System.String,System.String,System.String,System.String,System.String,System.Object,System.Object)">
            <summary>
            Generate a &lt;a&gt; element for a link to an action.
            </summary>
            <param name="viewContext">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.ViewContext"/> instance for the current scope.</param>
            <param name="linkText">The text to insert inside the element.</param>
            <param name="actionName">The name of the action method.</param>
            <param name="controllerName">The name of the controller.</param>
            <param name="protocol">The protocol (scheme) for the generated link.</param>
            <param name="hostname">The hostname for the generated link.</param>
            <param name="fragment">The fragment for the generated link.</param>
            <param name="routeValues">
            An <see cref="T:System.Object"/> that contains the parameters for a route. The parameters are retrieved through
            reflection by examining the properties of the <see cref="T:System.Object"/>. This <see cref="T:System.Object"/> is typically
            created using <see cref="T:System.Object"/> initializer syntax. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the route parameters.
            </param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <returns>
            A <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder"/> instance for the &lt;a&gt; element.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.IHtmlGenerator.GeneratePageLink(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,System.String,System.String,System.String,System.String,System.String,System.String,System.Object,System.Object)">
            <summary>
            Generate a &lt;a&gt; element for a link to an action.
            </summary>
            <param name="viewContext">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.ViewContext"/> instance for the current scope.</param>
            <param name="linkText">The text to insert inside the element.</param>
            <param name="pageName">The page name.</param>
            <param name="pageHandler">The page handler.</param>
            <param name="protocol">The protocol (scheme) for the generated link.</param>
            <param name="hostname">The hostname for the generated link.</param>
            <param name="fragment">The fragment for the generated link.</param>
            <param name="routeValues">
            An <see cref="T:System.Object"/> that contains the parameters for a route. The parameters are retrieved through
            reflection by examining the properties of the <see cref="T:System.Object"/>. This <see cref="T:System.Object"/> is typically
            created using <see cref="T:System.Object"/> initializer syntax. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the route parameters.
            </param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <returns>
            A <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder"/> instance for the &lt;a&gt; element.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.IHtmlGenerator.GenerateAntiforgery(Microsoft.AspNetCore.Mvc.Rendering.ViewContext)">
            <summary>
            Generate an &lt;input type="hidden".../&gt; element containing an antiforgery token.
            </summary>
            <param name="viewContext">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.ViewContext"/> instance for the current scope.</param>
            <returns>
            An <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> instance for the &lt;input type="hidden".../&gt; element. Intended to be used
            inside a &lt;form&gt; element.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.IHtmlGenerator.GenerateCheckBox(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer,System.String,System.Nullable{System.Boolean},System.Object)">
            <summary>
            Generate a &lt;input type="checkbox".../&gt; element.
            </summary>
            <param name="viewContext">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.ViewContext"/> instance for the current scope.</param>
            <param name="modelExplorer">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/> for the <paramref name="expression"/>.</param>
            <param name="expression">Expression name, relative to the current model.</param>
            <param name="isChecked">The initial state of the checkbox element.</param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <returns>
            A <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder"/> instance for the &lt;input type="checkbox".../&gt; element.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.IHtmlGenerator.GenerateHiddenForCheckbox(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer,System.String)">
            <summary>
            Generate an additional &lt;input type="hidden".../&gt; for checkboxes. This addresses scenarios where
            unchecked checkboxes are not sent in the request. Sending a hidden input makes it possible to know that the
            checkbox was present on the page when the request was submitted.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.IHtmlGenerator.GenerateForm(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,System.String,System.String,System.Object,System.String,System.Object)">
            <summary>
            Generate a &lt;form&gt; element. When the user submits the form, the action with name
            <paramref name="actionName"/> will process the request.
            </summary>
            <param name="viewContext">A <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.ViewContext"/> instance for the current scope.</param>
            <param name="actionName">The name of the action method.</param>
            <param name="controllerName">The name of the controller.</param>
            <param name="routeValues">
            An <see cref="T:System.Object"/> that contains the parameters for a route. The parameters are retrieved through
            reflection by examining the properties of the <see cref="T:System.Object"/>. This <see cref="T:System.Object"/> is typically
            created using <see cref="T:System.Object"/> initializer syntax. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the route parameters.
            </param>
            <param name="method">The HTTP method for processing the form, either GET or POST.</param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <returns>
            A <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder"/> instance for the &lt;/form&gt; element.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.IHtmlGenerator.GeneratePageForm(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,System.String,System.String,System.Object,System.String,System.String,System.Object)">
            <summary>
            Generate a &lt;form&gt; element. When the user submits the form, the page with name
            <paramref name="pageName"/> will process the request.
            </summary>
            <param name="viewContext">A <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.ViewContext"/> instance for the current scope.</param>
            <param name="pageName">The name of the page.</param>
            <param name="pageHandler">The page handler to generate a form for.</param>
            <param name="routeValues">
            An <see cref="T:System.Object"/> that contains the parameters for a route. The parameters are retrieved through
            reflection by examining the properties of the <see cref="T:System.Object"/>. This <see cref="T:System.Object"/> is typically
            created using <see cref="T:System.Object"/> initializer syntax. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the route parameters.
            </param>
            <param name="fragment">The url fragment.</param>
            <param name="method">The HTTP method for processing the form, either GET or POST.</param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <returns>
            A <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder"/> instance for the &lt;/form&gt; element.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.IHtmlGenerator.GenerateRouteForm(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,System.String,System.Object,System.String,System.Object)">
            <summary>
            Generate a &lt;form&gt; element. The route with name <paramref name="routeName"/> generates the
            &lt;form&gt;'s <c>action</c> attribute value.
            </summary>
            <param name="viewContext">A <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.ViewContext"/> instance for the current scope.</param>
            <param name="routeName">The name of the route.</param>
            <param name="routeValues">
            An <see cref="T:System.Object"/> that contains the parameters for a route. The parameters are retrieved through
            reflection by examining the properties of the <see cref="T:System.Object"/>. This <see cref="T:System.Object"/> is typically
            created using <see cref="T:System.Object"/> initializer syntax. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the route parameters.
            </param>
            <param name="method">The HTTP method for processing the form, either GET or POST.</param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <returns>
            A <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder"/> instance for the &lt;/form&gt; element.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.IHtmlGenerator.GenerateHidden(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer,System.String,System.Object,System.Boolean,System.Object)">
            <summary>
            Generate a &lt;input type="hidden"&gt; element
            </summary>
            <param name="viewContext">A <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.ViewContext"/> instance for the current scope.</param>
            <param name="modelExplorer">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/> for the <paramref name="expression"/>.</param>
            <param name="expression">Expression name, relative to the current model.</param>
            <param name="value">The value which is injected into the element</param>
            <param name="useViewData">Whether to use the ViewData to generate this element</param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the parameters for a route. The parameters are retrieved through
            reflection by examining the properties of the <see cref="T:System.Object"/>. This <see cref="T:System.Object"/> is typically
            created using <see cref="T:System.Object"/> initializer syntax. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the route parameters.
            </param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.IHtmlGenerator.GenerateLabel(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer,System.String,System.String,System.Object)">
            <summary>
            Generate a &lt;label&gt; element
            </summary>
            <param name="viewContext">A <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.ViewContext"/> instance for the current scope.</param>
            <param name="modelExplorer">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/> for the <paramref name="expression"/>.</param>
            <param name="expression">Expression name, relative to the current model. Used to set the target of the label.</param>
            <param name="labelText">Text used to render this label.</param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the parameters for a route. The parameters are retrieved through
            reflection by examining the properties of the <see cref="T:System.Object"/>. This <see cref="T:System.Object"/> is typically
            created using <see cref="T:System.Object"/> initializer syntax. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the route parameters.
            </param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.IHtmlGenerator.GeneratePassword(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer,System.String,System.Object,System.Object)">
            <summary>
            Generate a &lt;input type="password"&gt; element
            </summary>
            <param name="viewContext">A <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.ViewContext"/> instance for the current scope.</param>
            <param name="modelExplorer">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/> for the <paramref name="expression"/>.</param>
            <param name="expression">Expression name, relative to the current model.</param>
            <param name="value">Value used to prefill the checkbox</param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the parameters for a route. The parameters are retrieved through
            reflection by examining the properties of the <see cref="T:System.Object"/>. This <see cref="T:System.Object"/> is typically
            created using <see cref="T:System.Object"/> initializer syntax. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the route parameters.
            </param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.IHtmlGenerator.GenerateRadioButton(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer,System.String,System.Object,System.Nullable{System.Boolean},System.Object)">
            <summary>
            Generate a &lt;input type="radio"&gt; element
            </summary>
            <param name="viewContext">A <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.ViewContext"/> instance for the current scope.</param>
            <param name="modelExplorer">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/> for the <paramref name="expression"/>.</param>
            <param name="expression">Expression name, relative to the current model.</param>
            <param name="value">value of the given radio button</param>
            <param name="isChecked">Whether or not the radio button is checked</param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the parameters for a route. The parameters are retrieved through
            reflection by examining the properties of the <see cref="T:System.Object"/>. This <see cref="T:System.Object"/> is typically
            created using <see cref="T:System.Object"/> initializer syntax. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the route parameters.
            </param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.IHtmlGenerator.GenerateRouteLink(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,System.String,System.String,System.String,System.String,System.String,System.Object,System.Object)">
            <summary>
            Generate a &lt;a&gt; element for a link to an action.
            </summary>
            <param name="viewContext">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.ViewContext"/> instance for the current scope.</param>
            <param name="linkText">The text to insert inside the element.</param>
            <param name="routeName">The name of the route to use for link generation.</param>
            <param name="protocol">The protocol (scheme) for the generated link.</param>
            <param name="hostName">The hostname for the generated link.</param>
            <param name="fragment">The fragment for the generated link.</param>
            <param name="routeValues">
            An <see cref="T:System.Object"/> that contains the parameters for a route. The parameters are retrieved through
            reflection by examining the properties of the <see cref="T:System.Object"/>. This <see cref="T:System.Object"/> is typically
            created using <see cref="T:System.Object"/> initializer syntax. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the route parameters.
            </param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <returns>
            A <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder"/> instance for the &lt;a&gt; element.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.IHtmlGenerator.GenerateSelect(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem},System.Boolean,System.Object)">
            <summary>
            Generate a &lt;select&gt; element for the <paramref name="expression"/>.
            </summary>
            <param name="viewContext">A <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.ViewContext"/> instance for the current scope.</param>
            <param name="modelExplorer">
            <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/> for the <paramref name="expression"/>. If <c>null</c>, determines validation
            attributes using <paramref name="viewContext"/> and the <paramref name="expression"/>.
            </param>
            <param name="optionLabel">Optional text for a default empty &lt;option&gt; element.</param>
            <param name="expression">Expression name, relative to the current model.</param>
            <param name="selectList">
            A collection of <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/> objects used to populate the &lt;select&gt; element with
            &lt;optgroup&gt; and &lt;option&gt; elements. If <c>null</c>, finds this collection at
            <c>ViewContext.ViewData[expression]</c>.
            </param>
            <param name="allowMultiple">
            If <c>true</c>, includes a <c>multiple</c> attribute in the generated HTML. Otherwise generates a
            single-selection &lt;select&gt; element.
            </param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the &lt;select&gt; element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder"/> describing the &lt;select&gt; element.</returns>
            <remarks>
            <para>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix"/> and <paramref name="expression"/> to set
            &lt;select&gt; element's "name" attribute. Sanitizes <paramref name="expression"/> to set element's "id"
            attribute.
            </para>
            <para>
            See <see cref="M:Microsoft.AspNetCore.Mvc.ViewFeatures.IHtmlGenerator.GetCurrentValues(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer,System.String,System.Boolean)"/> for information about how current values are determined.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.IHtmlGenerator.GenerateSelect(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem},System.Collections.Generic.ICollection{System.String},System.Boolean,System.Object)">
            <summary>
            Generate a &lt;select&gt; element for the <paramref name="expression"/>.
            </summary>
            <param name="viewContext">A <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.ViewContext"/> instance for the current scope.</param>
            <param name="modelExplorer">
            <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/> for the <paramref name="expression"/>. If <c>null</c>, determines validation
            attributes using <paramref name="viewContext"/> and the <paramref name="expression"/>.
            </param>
            <param name="optionLabel">Optional text for a default empty &lt;option&gt; element.</param>
            <param name="expression">Expression name, relative to the current model.</param>
            <param name="selectList">
            A collection of <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/> objects used to populate the &lt;select&gt; element with
            &lt;optgroup&gt; and &lt;option&gt; elements. If <c>null</c>, finds this collection at
            <c>ViewContext.ViewData[expression]</c>.
            </param>
            <param name="currentValues">
            An <see cref="T:System.Collections.Generic.ICollection`1"/> containing values for &lt;option&gt; elements to select. If
            <c>null</c>, selects &lt;option&gt; elements based on <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Selected"/> values in
            <paramref name="selectList"/>.
            </param>
            <param name="allowMultiple">
            If <c>true</c>, includes a <c>multiple</c> attribute in the generated HTML. Otherwise generates a
            single-selection &lt;select&gt; element.
            </param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the &lt;select&gt; element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder"/> describing the &lt;select&gt; element.</returns>
            <remarks>
            <para>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix"/> and <paramref name="expression"/> to set
            &lt;select&gt; element's "name" attribute. Sanitizes <paramref name="expression"/> to set element's "id"
            attribute.
            </para>
            <para>
            See <see cref="M:Microsoft.AspNetCore.Mvc.ViewFeatures.IHtmlGenerator.GetCurrentValues(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer,System.String,System.Boolean)"/> for information about how the <paramref name="currentValues"/>
            collection may be created.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.IHtmlGenerator.GenerateGroupsAndOptions(System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem})">
            <summary>
            Generates &lt;optgroup&gt; and &lt;option&gt; elements.
            </summary>
            <param name="optionLabel">Optional text for a default empty &lt;option&gt; element.</param>
            <param name="selectList">
            A collection of <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/> objects used to generate &lt;optgroup&gt; and &lt;option&gt;
            elements.
            </param>
            <returns>
            An <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> instance for &lt;optgroup&gt; and &lt;option&gt; elements.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.IHtmlGenerator.GenerateTextArea(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer,System.String,System.Int32,System.Int32,System.Object)">
            <summary>
            Generates a &lt;textarea&gt; element
            </summary>
            <param name="viewContext">A <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.ViewContext"/> instance for the current scope.</param>
            <param name="modelExplorer">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/> for the <paramref name="expression"/>.</param>
            <param name="expression">Expression name, relative to the current model.</param>
            <param name="rows"></param>
            <param name="columns"></param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the parameters for a route. The parameters are retrieved through
            reflection by examining the properties of the <see cref="T:System.Object"/>. This <see cref="T:System.Object"/> is typically
            created using <see cref="T:System.Object"/> initializer syntax. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the route parameters.
            </param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.IHtmlGenerator.GenerateTextBox(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer,System.String,System.Object,System.String,System.Object)">
            <summary>
            Generates a &lt;input type="text"&gt; element
            </summary>
            <param name="viewContext">A <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.ViewContext"/> instance for the current scope.</param>
            <param name="modelExplorer">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/> for the <paramref name="expression"/>.</param>
            <param name="expression">Expression name, relative to the current model.</param>
            <param name="value"></param>
            <param name="format"></param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the parameters for a route. The parameters are retrieved through
            reflection by examining the properties of the <see cref="T:System.Object"/>. This <see cref="T:System.Object"/> is typically
            created using <see cref="T:System.Object"/> initializer syntax. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the route parameters.
            </param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.IHtmlGenerator.GenerateValidationMessage(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer,System.String,System.String,System.String,System.Object)">
            <summary>
            Generate a <paramref name="tag"/> element if the <paramref name="viewContext"/>'s
            <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/> contains an error for the <paramref name="expression"/>.
            </summary>
            <param name="viewContext">A <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.ViewContext"/> instance for the current scope.</param>
            <param name="modelExplorer">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/> for the <paramref name="expression"/>.</param>
            <param name="expression">Expression name, relative to the current model.</param>
            <param name="message">
            The message to be displayed. If <c>null</c> or empty, method extracts an error string from the
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/> object. Message will always be visible but client-side
            validation may update the associated CSS class.
            </param>
            <param name="tag">
            The tag to wrap the <paramref name="message"/> in the generated HTML. Its default value is
            <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.ValidationMessageElement"/>.
            </param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <returns></returns>
            <remarks><see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.ValidationMessageElement"/> is <c>"span"</c> by default.</remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.IHtmlGenerator.GenerateValidationSummary(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,System.Boolean,System.String,System.String,System.Object)">
            <summary>
            Generates a &lt;div&gt; element which contains a list of validation errors.
            </summary>
            <param name="viewContext"></param>
            <param name="excludePropertyErrors"></param>
            <param name="message"></param>
            <param name="headerTag"></param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the parameters for a route. The parameters are retrieved through
            reflection by examining the properties of the <see cref="T:System.Object"/>. This <see cref="T:System.Object"/> is typically
            created using <see cref="T:System.Object"/> initializer syntax. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the route parameters.
            </param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.IHtmlGenerator.GetCurrentValues(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer,System.String,System.Boolean)">
            <summary>
            Gets the collection of current values for the given <paramref name="expression"/>.
            </summary>
            <param name="viewContext">A <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.ViewContext"/> instance for the current scope.</param>
            <param name="modelExplorer">
            <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/> for the <paramref name="expression"/>. If <c>null</c>, calculates the
            <paramref name="expression"/> result using <see cref="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Eval(System.String)"/>.
            </param>
            <param name="expression">Expression name, relative to the current model.</param>
            <param name="allowMultiple">
            If <c>true</c>, require a collection <paramref name="expression"/> result. Otherwise, treat result as a
            single value.
            </param>
            <returns>
            <para>
            <c>null</c> if no <paramref name="expression"/> result is found. Otherwise a
            <see cref="T:System.Collections.Generic.ICollection`1"/> containing current values for the given
            <paramref name="expression"/>.
            </para>
            <para>
            Converts the <paramref name="expression"/> result to a <see cref="T:System.String"/>. If that result is an
            <see cref="T:System.Collections.IEnumerable"/> type, instead converts each item in the collection and returns
            them separately.
            </para>
            <para>
            If the <paramref name="expression"/> result or the element type is an <see cref="T:System.Enum"/>, returns a
            <see cref="T:System.String"/> containing the integer representation of the <see cref="T:System.Enum"/> value as well
            as all <see cref="T:System.Enum"/> names for that value. Otherwise returns the default <see cref="T:System.String"/>
            conversion of the value.
            </para>
            </returns>
            <remarks>
            See <see cref="M:GenerateSelect"/> for information about how the return value may be used.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider">
            <summary>
            Provides <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression"/> for a Lambda expression.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider.CreateModelExpression``2(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Returns a <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression"/> instance describing the given <paramref name="expression"/>.
            </summary>
            <typeparam name="TModel">The type of the <paramref name="viewData"/>'s <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary`1.Model"/>.</typeparam>
            <typeparam name="TValue">The type of the <paramref name="expression"/> result.</typeparam>
            <param name="viewData">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary`1"/> containing the <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary`1.Model"/>
            against which <paramref name="expression"/> is evaluated. </param>
            <param name="expression">An expression to be evaluated against the current model.</param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression"/> instance describing the given <paramref name="expression"/>.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewFeatures.Infrastructure.TempDataSerializer">
            <summary>
            Serializes and deserializes the contents of <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Infrastructure.TempDataSerializer.Deserialize(System.Byte[])">
            <summary>
            Deserializes <paramref name="unprotectedData"/> to a <see cref="T:System.Collections.Generic.IDictionary`2"/>
            used to initialize an instance of <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary"/>.
            </summary>
            <param name="unprotectedData">Serialized representation of <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary"/>.</param>
            <returns>The deserialized <see cref="T:System.Collections.Generic.IDictionary`2"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Infrastructure.TempDataSerializer.Serialize(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Serializes the contents of <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary"/>.
            </summary>
            <param name="values">The contents of <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary"/>.</param>
            <returns>The serialized bytes.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Infrastructure.TempDataSerializer.CanSerializeType(System.Type)">
            <summary>
            Determines if the serializer supports the specified <paramref name="type"/>.
            <para>
            Defaults to returning <see langword="true"/> for all <see cref="T:System.Type"/> instances.
            </para>
            </summary>
            <param name="type">The <see cref="T:System.Type"/>.</param>
            <returns><see langword="true"/> if the serializer supports serializing <paramref name="type"/>, otherwise <see langword="false"/>.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewFeatures.InputType">
            <summary>
            Specifies constants which define an input type.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.ViewFeatures.InputType.CheckBox">
            <summary>
            A check box input.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.ViewFeatures.InputType.Hidden">
            <summary>
            A hidden input.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.ViewFeatures.InputType.Password">
            <summary>
            A password input.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.ViewFeatures.InputType.Radio">
            <summary>
            A radio input.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.ViewFeatures.InputType.Text">
            <summary>
            A text input.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary">
            <summary>
            Represents a set of data that persists only from one request to the next.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary.Load">
            <summary>
            Loads the dictionary by using the registered <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataProvider"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary.Save">
            <summary>
            Saves the dictionary by using the registered <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataProvider"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary.Keep">
            <summary>
            Marks all keys in the dictionary for retention.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary.Keep(System.String)">
            <summary>
            Marks the specified key in the dictionary for retention.
            </summary>
            <param name="key">The key to retain in the dictionary.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary.Peek(System.String)">
            <summary>
            Returns an object that contains the element that is associated with the specified key,
            without marking the key for deletion.
            </summary>
            <param name="key">The key of the element to return.</param>
            <returns>An object that contains the element that is associated with the specified key.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionaryFactory">
            <summary>
            A factory which provides access to an <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary"/> instance
            for a request.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionaryFactory.GetTempData(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Gets or creates an <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary"/> instance for the request associated with the
            given <paramref name="context"/>.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/>.</param>
            <returns>
            An <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary"/> instance for the request associated with the given
            <paramref name="context"/>.
            </returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataProvider">
            <summary>
            Defines the contract for temporary-data providers that store data that is viewed on the next request.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataProvider.LoadTempData(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Loads the temporary data.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/>.</param>
            <returns>The temporary data.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataProvider.SaveTempData(Microsoft.AspNetCore.Http.HttpContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Saves the temporary data.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/>.</param>
            <param name="values">The values to save.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewFeatures.IViewContextAware">
            <summary>
            Contract for contextualizing a property activated by a view with the <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.ViewContext"/>.
            </summary>
            <remarks>This interface is used for contextualizing properties added to a Razor page using <c>@inject</c>.</remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.IViewContextAware.Contextualize(Microsoft.AspNetCore.Mvc.Rendering.ViewContext)">
            <summary>
            Contextualizes the instance with the specified <paramref name="viewContext"/>.
            </summary>
            <param name="viewContext">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.ViewContext"/>.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer">
            <summary>
            Associates a model object with it's corresponding <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider,Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Object)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/>.
            </summary>
            <param name="metadataProvider">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider"/>.</param>
            <param name="metadata">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/>.</param>
            <param name="model">The model object. May be <c>null</c>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider,Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer,Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Func{System.Object,System.Object})">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/>.
            </summary>
            <param name="metadataProvider">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider"/>.</param>
            <param name="container">The container <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/>.</param>
            <param name="metadata">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/>.</param>
            <param name="modelAccessor">A model accessor function..</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider,Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer,Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Object)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/>.
            </summary>
            <param name="metadataProvider">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider"/>.</param>
            <param name="container">The container <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/>.</param>
            <param name="metadata">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/>.</param>
            <param name="model">The model object. May be <c>null</c>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer.Container">
            <summary>
            Gets the container <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/>.
            </summary>
            <remarks>
            <para>
            The <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer.Container"/> will most commonly be set as a result of calling
            <see cref="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer.GetExplorerForProperty(System.String)"/>. In this case, the returned <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/> will
            have it's <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer.Container"/> set to the instance upon which <see cref="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer.GetExplorerForProperty(System.String)"/>
            was called.
            </para>
            <para>
            This however is not a requirement. The <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer.Container"/> is informational, and may not
            represent a type that defines the property represented by <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer.Metadata"/>. This can
            occur when constructing a <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/> based on evaluation of a complex
            expression.
            </para>
            <para>
            If calling code relies on a parent-child relationship between <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/>
            instances, then use <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.ContainerType"/> to validate this assumption.
            </para>
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer.Metadata">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer.Model">
            <summary>
            Gets the model object.
            </summary>
            <remarks>
            Retrieving the <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer.Model"/> object will execute the model accessor function if this
            <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/> was provided with one.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer.ModelType">
            <remarks>
            Retrieving the <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer.ModelType"/> will execute the model accessor function if this
            <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/> was provided with one.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer.Properties">
            <summary>
            Gets the properties.
            </summary>
            <remarks>
            Includes a <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/> for each property of the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/>
            for <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer.ModelType"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer.GetExplorerForModel(System.Object)">
            <summary>
            Gets a <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/> for the given <paramref name="model"/> value.
            </summary>
            <param name="model">The model value.</param>
            <returns>A <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer.GetExplorerForProperty(System.String)">
            <summary>
            Gets a <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/> for the property with given <paramref name="name"/>, or <c>null</c> if
            the property cannot be found.
            </summary>
            <param name="name">The property name.</param>
            <returns>A <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/>, or <c>null</c>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer.GetExplorerForProperty(System.String,System.Func{System.Object,System.Object})">
            <summary>
            Gets a <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/> for the property with given <paramref name="name"/>, or <c>null</c> if
            the property cannot be found.
            </summary>
            <param name="name">The property name.</param>
            <param name="modelAccessor">An accessor for the model value.</param>
            <returns>A <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/>, or <c>null</c>.</returns>
            <remarks>
            As this creates a model explorer with a specific model accessor function, the result is not cached.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer.GetExplorerForProperty(System.String,System.Object)">
            <summary>
            Gets a <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/> for the property with given <paramref name="name"/>, or <c>null</c> if
            the property cannot be found.
            </summary>
            <param name="name">The property name.</param>
            <param name="model">The model value.</param>
            <returns>A <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/>, or <c>null</c>.</returns>
            <remarks>
            As this creates a model explorer with a specific model value, the result is not cached.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer.GetExplorerForExpression(System.Type,System.Object)">
            <summary>
            Gets a <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/> for the provided model value and model <see cref="T:System.Type"/>.
            </summary>
            <param name="modelType">The model <see cref="T:System.Type"/>.</param>
            <param name="model">The model value.</param>
            <returns>A <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/>.</returns>
            <remarks>
            <para>
            A <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/> created by <see cref="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer.GetExplorerForExpression(System.Type,System.Object)"/>
            represents the result of executing an arbitrary expression against the model contained
            in the current <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/> instance.
            </para>
            <para>
            The returned <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/> will have the current instance set as its <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer.Container"/>.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer.GetExplorerForExpression(Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Object)">
            <summary>
            Gets a <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/> for the provided model value and model <see cref="T:System.Type"/>.
            </summary>
            <param name="metadata">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/> associated with the model.</param>
            <param name="model">The model value.</param>
            <returns>A <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/>.</returns>
            <remarks>
            <para>
            A <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/> created by
            <see cref="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer.GetExplorerForExpression(Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Object)"/>
            represents the result of executing an arbitrary expression against the model contained
            in the current <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/> instance.
            </para>
            <para>
            The returned <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/> will have the current instance set as its <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer.Container"/>.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer.GetExplorerForExpression(System.Type,System.Func{System.Object,System.Object})">
            <summary>
            Gets a <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/> for the provided model value and model <see cref="T:System.Type"/>.
            </summary>
            <param name="modelType">The model <see cref="T:System.Type"/>.</param>
            <param name="modelAccessor">A model accessor function.</param>
            <returns>A <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/>.</returns>
            <remarks>
            <para>
            A <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/> created by
            <see cref="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer.GetExplorerForExpression(System.Type,System.Func{System.Object,System.Object})"/>
            represents the result of executing an arbitrary expression against the model contained
            in the current <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/> instance.
            </para>
            <para>
            The returned <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/> will have the current instance set as its <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer.Container"/>.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer.GetExplorerForExpression(Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Func{System.Object,System.Object})">
            <summary>
            Gets a <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/> for the provided model value and model <see cref="T:System.Type"/>.
            </summary>
            <param name="metadata">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/> associated with the model.</param>
            <param name="modelAccessor">A model accessor function.</param>
            <returns>A <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/>.</returns>
            <remarks>
            <para>
            A <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/> created by
            <see cref="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer.GetExplorerForExpression(Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata,System.Func{System.Object,System.Object})"/>
            represents the result of executing an arbitrary expression against the model contained
            in the current <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/> instance.
            </para>
            <para>
            The returned <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/> will have the current instance set as its <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer.Container"/>.
            </para>
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorerExtensions">
            <summary>
            Extension methods for <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorerExtensions.GetSimpleDisplayText(Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer)">
            <summary>
            Gets a simple display string for the <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer.Model"/> property
            of <paramref name="modelExplorer"/>.
            </summary>
            <param name="modelExplorer">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/>.</param>
            <returns>A simple display string for the model.</returns>
            <remarks>
            The result is obtained from the following sources (the first success wins):
            <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.SimpleDisplayProperty" />,
            <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer.Model" /> converted to string (if the result is interesting),
            the first internal property converted to string,
            <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.NullDisplayText"  />
            (when the value is <see langword="null" />).
            This method is not recursive in order to prevent an infinite loop.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression">
            <summary>
            Describes an <see cref="T:System.Linq.Expressions.Expression"/> passed to a tag helper.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression.#ctor(System.String,Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression"/> class.
            </summary>
            <param name="name">
            String representation of the <see cref="T:System.Linq.Expressions.Expression"/> of interest.
            </param>
            <param name="modelExplorer">
            Includes the model and metadata about the <see cref="T:System.Linq.Expressions.Expression"/> of interest.
            </param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression.Name">
            <summary>
            String representation of the <see cref="T:System.Linq.Expressions.Expression"/> of interest.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression.Metadata">
            <summary>
            Metadata about the <see cref="T:System.Linq.Expressions.Expression"/> of interest.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression.Model">
            <summary>
            Gets the model object for the <see cref="T:System.Linq.Expressions.Expression"/> of interest.
            </summary>
            <remarks>
            Getting <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression.Model"/> will evaluate a compiled version of the original
            <see cref="T:System.Linq.Expressions.Expression"/>.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression.ModelExplorer">
            <summary>
            Gets the model explorer for the <see cref="T:System.Linq.Expressions.Expression"/> of interest.
            </summary>
            <remarks>
            Getting <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer.Model"/> will evaluate a compiled version of the original
            <see cref="T:System.Linq.Expressions.Expression"/>.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpressionProvider">
            <summary>
            Provides <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression"/> for expressions.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpressionProvider.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpressionProvider"/>.
            </summary>
            <param name="modelMetadataProvider">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpressionProvider.GetExpressionText``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Gets the name for <paramref name="expression"/>.
            </summary>
            <typeparam name="TModel">The model type.</typeparam>
            <typeparam name="TValue">The type of the <paramref name="expression"/> result.</typeparam>
            <param name="expression">The expression.</param>
            <returns>The expression name.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpressionProvider.CreateModelExpression``2(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpressionProvider.CreateModelExpression``1(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary{``0},System.String)">
            <summary>
            Returns a <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression"/> instance describing the given <paramref name="expression"/>.
            </summary>
            <typeparam name="TModel">The type of the <paramref name="viewData"/>'s <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary`1.Model"/>.</typeparam>
            <param name="viewData">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary`1"/> containing the <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary`1.Model"/>
            against which <paramref name="expression"/> is evaluated. </param>
            <param name="expression">Expression name, relative to <c>viewData.Model</c>.</param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression"/> instance describing the given <paramref name="expression"/>.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelMetadataProviderExtensions">
            <summary>
            Extensions methods for <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelMetadataProviderExtensions.GetModelExplorerForType(Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider,System.Type,System.Object)">
            <summary>
            Gets a <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/> for the provided <paramref name="modelType"/> and
            <paramref name="model"/>.
            </summary>
            <param name="provider">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider"/>.</param>
            <param name="modelType">The declared <see cref="T:System.Type"/> of the model object.</param>
            <param name="model">The model object.</param>
            <returns>
            A <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/> for the <paramref name="modelType"/> and <paramref name="model"/>.
            </returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewFeatures.NameAndIdProvider">
            <summary>
            Provides cached values for "name" and "id" HTML attributes.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.NameAndIdProvider.CreateSanitizedId(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,System.String,System.String)">
            <summary>
            Returns a valid HTML 4.01 "id" attribute value for an element with the given <paramref name="fullName"/>.
            </summary>
            <param name="viewContext">A <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.ViewContext"/> instance for the current scope.</param>
            <param name="fullName">
            The fully-qualified expression name, ignoring the current model. Also the original HTML element name.
            </param>
            <param name="invalidCharReplacement">
            The <see cref="T:System.String"/> (normally a single <see cref="T:System.Char"/>) to substitute for invalid characters in
            <paramref name="fullName"/>.
            </param>
            <returns>
            Valid HTML 4.01 "id" attribute value for an element with the given <paramref name="fullName"/>.
            </returns>
            <remarks>
            Similar to <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.CreateSanitizedId(System.String,System.String)"/> but caches value for repeated invocations.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.NameAndIdProvider.GenerateId(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,Microsoft.AspNetCore.Mvc.Rendering.TagBuilder,System.String,System.String)">
            <summary>
            Adds a valid HTML 4.01 "id" attribute for an element with the given <paramref name="fullName"/>. Does
            nothing if <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.Attributes"/> already contains an "id" attribute or the
            <paramref name="fullName"/> is <c>null</c> or empty.
            </summary>
            <param name="viewContext">A <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.ViewContext"/> instance for the current scope.</param>
            <param name="tagBuilder">A <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder"/> instance that will contain the "id" attribute.</param>
            <param name="fullName">
            The fully-qualified expression name, ignoring the current model. Also the original HTML element name.
            </param>
            <param name="invalidCharReplacement">
            The <see cref="T:System.String"/> (normally a single <see cref="T:System.Char"/>) to substitute for invalid characters in
            <paramref name="fullName"/>.
            </param>
            <remarks>
            Similar to <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.GenerateId(System.String,System.String)"/> but caches value for repeated invocations.
            </remarks>
            <seealso cref="M:Microsoft.AspNetCore.Mvc.ViewFeatures.NameAndIdProvider.CreateSanitizedId(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,System.String,System.String)"/>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.NameAndIdProvider.GetFullHtmlFieldName(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,System.String)">
            <summary>
            Returns the full HTML element name for the specified <paramref name="expression"/>.
            </summary>
            <param name="viewContext">A <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.ViewContext"/> instance for the current scope.</param>
            <param name="expression">Expression name, relative to the current model.</param>
            <returns>Fully-qualified expression name for <paramref name="expression"/>.</returns>
            <remarks>
            Similar to <see cref="M:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.GetFullHtmlFieldName(System.String)"/> but caches value for repeated invocations.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor">
            <summary>
            Finds and executes an <see cref="T:Microsoft.AspNetCore.Mvc.ViewEngines.IView"/> for a <see cref="T:Microsoft.AspNetCore.Mvc.PartialViewResult"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Mvc.MvcViewOptions},Microsoft.AspNetCore.Mvc.Infrastructure.IHttpResponseStreamWriterFactory,Microsoft.AspNetCore.Mvc.ViewEngines.ICompositeViewEngine,Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionaryFactory,System.Diagnostics.DiagnosticListener,Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor"/>.
            </summary>
            <param name="viewOptions">The <see cref="T:Microsoft.Extensions.Options.IOptions`1"/>.</param>
            <param name="writerFactory">The <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.IHttpResponseStreamWriterFactory"/>.</param>
            <param name="viewEngine">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewEngines.ICompositeViewEngine"/>.</param>
            <param name="tempDataFactory">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionaryFactory"/>.</param>
            <param name="diagnosticListener">The <see cref="T:System.Diagnostics.DiagnosticListener"/>.</param>
            <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/>.</param>
            <param name="modelMetadataProvider">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor.Logger">
            <summary>
            Gets the <see cref="T:Microsoft.Extensions.Logging.ILogger"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor.FindView(Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.PartialViewResult)">
            <summary>
            Attempts to find the <see cref="T:Microsoft.AspNetCore.Mvc.ViewEngines.IView"/> associated with <paramref name="viewResult"/>.
            </summary>
            <param name="actionContext">The <see cref="T:Microsoft.AspNetCore.Mvc.ActionContext"/> associated with the current request.</param>
            <param name="viewResult">The <see cref="T:Microsoft.AspNetCore.Mvc.PartialViewResult"/>.</param>
            <returns>A <see cref="T:Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor.ExecuteAsync(Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.ViewEngines.IView,Microsoft.AspNetCore.Mvc.PartialViewResult)">
            <summary>
            Executes the <see cref="T:Microsoft.AspNetCore.Mvc.ViewEngines.IView"/> asynchronously.
            </summary>
            <param name="actionContext">The <see cref="T:Microsoft.AspNetCore.Mvc.ActionContext"/> associated with the current request.</param>
            <param name="view">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewEngines.IView"/>.</param>
            <param name="viewResult">The <see cref="T:Microsoft.AspNetCore.Mvc.PartialViewResult"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> which will complete when view execution is completed.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.PartialViewResultExecutor.ExecuteAsync(Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.PartialViewResult)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewFeatures.SaveTempDataAttribute">
            <summary>
            A filter that saves the <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary"/> for a request.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.SaveTempDataAttribute.#ctor">
            <summary>
            Initialize a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.SaveTempDataAttribute"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.SaveTempDataAttribute.Order">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.SaveTempDataAttribute.IsReusable">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.SaveTempDataAttribute.CreateInstance(System.IServiceProvider)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewFeatures.SessionStateTempDataProvider">
            <summary>
            Provides session-state data to the current <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary"/> object.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.SessionStateTempDataProvider.#ctor(Microsoft.AspNetCore.Mvc.ViewFeatures.Infrastructure.TempDataSerializer)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.SessionStateTempDataProvider"/>.
            </summary>
            <param name="tempDataSerializer">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.Infrastructure.TempDataSerializer"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.SessionStateTempDataProvider.LoadTempData(Microsoft.AspNetCore.Http.HttpContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.SessionStateTempDataProvider.SaveTempData(Microsoft.AspNetCore.Http.HttpContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewFeatures.StringHtmlContent">
            <summary>
            String content which gets encoded when written.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.StringHtmlContent.#ctor(System.String)">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.StringHtmlContent"/>
            </summary>
            <param name="input"><see cref="T:System.String"/> to be HTML encoded when <see cref="M:Microsoft.AspNetCore.Mvc.ViewFeatures.StringHtmlContent.WriteTo(System.IO.TextWriter,System.Text.Encodings.Web.HtmlEncoder)"/> is called.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.StringHtmlContent.WriteTo(System.IO.TextWriter,System.Text.Encodings.Web.HtmlEncoder)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewFeatures.TempDataDictionary">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.TempDataDictionary.#ctor(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.TempDataDictionary"/> class.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/>.</param>
            <param name="provider">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataProvider"/> used to Load and Save data.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TempDataDictionary.Count">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TempDataDictionary.Keys">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TempDataDictionary.Values">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TempDataDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#IsReadOnly">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TempDataDictionary.Item(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.TempDataDictionary.Keep">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.TempDataDictionary.Keep(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.TempDataDictionary.Load">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.TempDataDictionary.Save">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.TempDataDictionary.Peek(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.TempDataDictionary.Add(System.String,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.TempDataDictionary.Clear">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.TempDataDictionary.ContainsKey(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.TempDataDictionary.ContainsValue(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.TempDataDictionary.GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.TempDataDictionary.Remove(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.TempDataDictionary.TryGetValue(System.String,System.Object@)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewFeatures.TempDataDictionaryFactory">
            <summary>
            A default implementation of <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionaryFactory"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.TempDataDictionaryFactory.#ctor(Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataProvider)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.TempDataDictionaryFactory"/>.
            </summary>
            <param name="provider">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataProvider"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.TempDataDictionaryFactory.GetTempData(Microsoft.AspNetCore.Http.HttpContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo">
            <summary>
            Represents a template which keeps track of visited objects.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.#ctor(Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo"/>.
            </summary>
            <param name="original">The original value to copy.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.FormattedModelValue">
            <summary>
            Gets or sets the formatted model value.
            </summary>
            <value>The formatted model value.</value>
            <remarks>
            Will never return <c>null</c> to avoid problems when using HTML helpers within a template.  Otherwise the
            helpers could find elements in the `ViewDataDictionary`, not the intended Model properties.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix">
            <summary>
            Gets or sets the HTML field prefix.
            </summary>
            <value>The HTML field prefix.</value>
            <remarks>
            Will never return <c>null</c> for consistency with <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.FormattedModelValue"/>.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.TemplateDepth">
            <summary>
            Gets how many objects have been visited.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.AddVisited(System.Object)">
            <summary>
            Mark a value as visited.
            </summary>
            <param name="value">The object to visit.</param>
            <returns>If this object is newly visited.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.GetFullHtmlFieldName(System.String)">
            <summary>
            Returns the full HTML element name for the specified <paramref name="partialFieldName"/>.
            </summary>
            <param name="partialFieldName">Expression name, relative to the current model.</param>
            <returns>Fully-qualified expression name for <paramref name="partialFieldName"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.Visited(Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer)">
            <summary>
            Checks if a model has been visited already.
            </summary>
            <param name="modelExplorer">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/>.</param>
            <returns>Whether the model has been visited.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewFeatures.TryGetValueDelegate">
            <summary>
            A delegate for <see cref="M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)"/>.
            </summary>
            <param name="dictionary">The <see cref="T:System.Collections.Generic.IDictionary`2"/>.</param>
            <param name="key">The key.</param>
            <param name="value">The return value.</param>
            <returns>Whether the key was found.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewFeatures.TryGetValueProvider">
            <summary>
            Static class that provides caching for TryGetValue. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.TryGetValueProvider.CreateInstance(System.Type)">
            <summary>
            Returns a <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.TryGetValueDelegate"/> for the specified <see cref="T:System.Collections.Generic.IDictionary`2"/> type.
            </summary>
            <param name="targetType">The target type that is expected to be a <see cref="T:System.Collections.Generic.IDictionary`2"/>.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.TryGetValueDelegate"/>.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ValidationHtmlAttributeProvider">
            <summary>
            Contract for a service providing validation attributes for expressions.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ValidationHtmlAttributeProvider.AddValidationAttributes(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Adds validation-related HTML attributes to the <paramref name="attributes" /> if client validation is
            enabled.
            </summary>
            <param name="viewContext">A <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.ViewContext"/> instance for the current scope.</param>
            <param name="modelExplorer">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/> for an expression.</param>
            <param name="attributes">
            The <see cref="T:System.Collections.Generic.Dictionary`2"/> to receive the validation attributes. Maps the validation
            attribute names to their <see cref="T:System.String"/> values. Values must be HTML encoded before they are written
            to an HTML document or response.
            </param>
            <remarks>
            Adds nothing to <paramref name="attributes"/> if client-side validation is disabled.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ValidationHtmlAttributeProvider.AddAndTrackValidationAttributes(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Adds validation-related HTML attributes to the <paramref name="attributes" /> if client validation is
            enabled and validation attributes have not yet been added for this <paramref name="expression"/> in the
            current &lt;form&gt;.
            </summary>
            <param name="viewContext">A <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.ViewContext"/> instance for the current scope.</param>
            <param name="modelExplorer">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/> for the <paramref name="expression"/>.</param>
            <param name="expression">Expression name, relative to the current model.</param>
            <param name="attributes">
            The <see cref="T:System.Collections.Generic.Dictionary`2"/> to receive the validation attributes. Maps the validation
            attribute names to their <see cref="T:System.String"/> values. Values must be HTML encoded before they are written
            to an HTML document or response.
            </param>
            <remarks>
            Tracks the <paramref name="expression"/> in the current <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.FormContext"/> to avoid generating
            duplicate validation attributes. That is, validation attributes are added only if no previous call has
            added them for a field with this name in the &lt;form&gt;.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewComponentResultExecutor">
            <summary>
            A <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.IActionResultExecutor`1"/> for <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponentResult"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewComponentResultExecutor.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Mvc.MvcViewOptions},Microsoft.Extensions.Logging.ILoggerFactory,System.Text.Encodings.Web.HtmlEncoder,Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider,Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionaryFactory,Microsoft.AspNetCore.Mvc.Infrastructure.IHttpResponseStreamWriterFactory)">
            <summary>
            Initialize a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewComponentResultExecutor"/>
            </summary>
            <param name="mvcHelperOptions">The <see cref="T:Microsoft.Extensions.Options.IOptions`1"/>.</param>
            <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/>.</param>
            <param name="htmlEncoder">The <see cref="T:System.Text.Encodings.Web.HtmlEncoder"/>.</param>
            <param name="modelMetadataProvider">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider"/>.</param>
            <param name="tempDataDictionaryFactory">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionaryFactory"/>.</param>
            <param name="writerFactory">The <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.IHttpResponseStreamWriterFactory"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewComponentResultExecutor.ExecuteAsync(Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.ViewComponentResult)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewContextAttribute">
            <summary>
            Specifies that a tag helper property should be set with the current
            <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.ViewContext"/> when creating the tag helper. The property must have a
            public set method.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary">
            <summary>
            A <see cref="T:System.Collections.Generic.IDictionary`2"/> for view data.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary"/> class.
            </summary>
            <param name="metadataProvider">
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider"/> instance used to create <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/>
            instances.
            </param>
            <param name="modelState"><see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/> instance for this scope.</param>
            <remarks>For use when creating a <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary"/> for a new top-level scope.</remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.#ctor(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary"/> class based entirely on an existing
            instance.
            </summary>
            <param name="source"><see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary"/> instance to copy initial values from.</param>
            <remarks>
            <para>
            For use when copying a <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary"/> instance and the declared <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/>
            <see cref="T:System.Type"/> will not change e.g. when copying from a <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary`1"/>
            instance to a base <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary"/> instance.
            </para>
            <para>
            This constructor should not be used in any context where <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/> may be set to a value
            incompatible with the declared type of <paramref name="source"/>.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary"/> class.
            </summary>
            <param name="metadataProvider">
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider"/> instance used to create <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/>
            instances.
            </param>
            <remarks>Internal for testing.</remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary"/> class.
            </summary>
            <param name="metadataProvider">
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider"/> instance used to create <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/>
            instances.
            </param>
            <param name="declaredModelType">
            <see cref="T:System.Type"/> of <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/> values expected. Used to set <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.ModelMetadata"/>.
            </param>
            <remarks>
            For use when creating a derived <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary"/> for a new top-level scope.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary"/> class.
            </summary>
            <param name="metadataProvider">
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider"/> instance used to create <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/>
            instances.
            </param>
            <param name="modelState"><see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/> instance for this scope.</param>
            <param name="declaredModelType">
            <see cref="T:System.Type"/> of <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/> values expected. Used to set <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.ModelMetadata"/>.
            </param>
            <remarks>
            For use when creating a derived <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary"/> for a new top-level scope.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.#ctor(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary"/> class based in part on an existing
            instance.
            </summary>
            <param name="source"><see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary"/> instance to copy initial values from.</param>
            <param name="declaredModelType">
            <see cref="T:System.Type"/> of <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/> values expected. Used to set <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.ModelMetadata"/>.
            </param>
            <remarks>
            <para>
            For use when copying a <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary"/> instance and new instance's declared
            <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/> <see cref="T:System.Type"/> is known but <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/> should be copied from the existing
            instance e.g. when copying from a base <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary"/> instance to a
            <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary`1"/> instance.
            </para>
            <para>
            This constructor may <c>throw</c> if <c>source.Model</c> is non-<c>null</c> and incompatible with
            <paramref name="declaredModelType"/>. Pass <c>model: null</c> to
            <see cref="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.#ctor(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary,System.Object,System.Type)"/> to ignore <c>source.Model</c>.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.#ctor(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary,System.Object,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary"/> class based in part on an existing
            instance. This constructor is careful to avoid exceptions <see cref="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.SetModel(System.Object)"/> may throw when
            <paramref name="model"/> is <c>null</c>.
            </summary>
            <param name="source"><see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary"/> instance to copy initial values from.</param>
            <param name="model">Value for the <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/> property.</param>
            <param name="declaredModelType">
            <see cref="T:System.Type"/> of <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/> values expected. Used to set <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.ModelMetadata"/>.
            </param>
            <remarks>
            <para>
            For use when copying a <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary"/> instance and new instance's declared
            <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/> <see cref="T:System.Type"/> and <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/> are known.
            </para>
            <para>
            This constructor may <c>throw</c> if <paramref name="model"/> is non-<c>null</c> and incompatible with
            <paramref name="declaredModelType"/>.
            </para>
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model">
            <summary>
            Gets or sets the current model.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.ModelState">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.ModelMetadata">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/> for an expression, the <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/> (if
            non-<c>null</c>), or the declared <see cref="T:System.Type"/>.
            </summary>
            <remarks>
            Value is never <c>null</c> but may describe the <see cref="T:System.Object"/> class in some cases. This may for
            example occur in controllers.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.ModelExplorer">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer"/> for the <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.TemplateInfo">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Item(System.String)">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Count">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.IsReadOnly">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Keys">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Values">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Eval(System.String)">
            <summary>
            Gets value of named <paramref name="expression"/> in this <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary"/>.
            </summary>
            <param name="expression">Expression name, relative to the current model.</param>
            <returns>Value of named <paramref name="expression"/> in this <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary"/>.</returns>
            <remarks>
            Looks up <paramref name="expression"/> in the dictionary first. Falls back to evaluating it against
            <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Eval(System.String,System.String)">
            <summary>
            Gets value of named <paramref name="expression"/> in this <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary"/>, formatted
            using given <paramref name="format"/>.
            </summary>
            <param name="expression">Expression name, relative to the current model.</param>
            <param name="format">
            The format string (see <see href="https://msdn.microsoft.com/en-us/library/txafckwd.aspx"/>).
            </param>
            <returns>
            Value of named <paramref name="expression"/> in this <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary"/>, formatted using
            given <paramref name="format"/>.
            </returns>
            <remarks>
            Looks up <paramref name="expression"/> in the dictionary first. Falls back to evaluating it against
            <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.FormatValue(System.Object,System.String)">
            <summary>
            Formats the given <paramref name="value"/> using the given <paramref name="format"/>.
            </summary>
            <param name="value">The value to format.</param>
            <param name="format">
            The format string (see <see href="https://msdn.microsoft.com/en-us/library/txafckwd.aspx"/>).
            </param>
            <returns>The formatted <see cref="T:System.String"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.GetViewDataInfo(System.String)">
            <summary>
            Gets <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo"/> for named <paramref name="expression"/> in this
            <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary"/>.
            </summary>
            <param name="expression">Expression name, relative to the current model.</param>
            <returns>
            <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo"/> for named <paramref name="expression"/> in this
            <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary"/>.
            </returns>
            <remarks>
            Looks up <paramref name="expression"/> in the dictionary first. Falls back to evaluating it against
            <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.SetModel(System.Object)">
            <summary>
            Set <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.ModelExplorer"/> to ensure <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/> and <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer.Model"/>
            reflect the new <paramref name="value"/>.
            </summary>
            <param name="value">New <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/> value.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Add(System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.ContainsKey(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Remove(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.TryGetValue(System.String,System.Object@)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Clear">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#GetEnumerator">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionaryAttribute">
            <summary>
            Specifies that a controller property should be set with the current
            <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary"/> when creating the controller. The property must have a public
            set method.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionaryControllerPropertyActivator">
            <summary>
            Represents a <see cref="T:Microsoft.AspNetCore.Mvc.Controllers.IControllerActivatorProvider"/> for a view data dictionary controller.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionaryControllerPropertyActivator.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionaryControllerPropertyActivator"/>.
            </summary>
            <param name="modelMetadataProvider">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider"/> to use.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionaryControllerPropertyActivator.Activate(Microsoft.AspNetCore.Mvc.ControllerContext,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionaryControllerPropertyActivator.GetActivatorDelegate(Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary`1">
            <summary>
            Represents a <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary"/> for a specific model type.
            </summary>
            <typeparam name="TModel">The type of the model.</typeparam>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary`1.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider,Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary`1"/> class.
            </summary>
            <remarks>
            For use when creating a <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary`1"/> for a new top-level scope.
            </remarks>
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary`1.#ctor(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary`1"/> class based in part on an
            existing <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary"/> instance.
            </summary>
            <remarks>
            <para>
            For use when copying a <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary"/> instance and <typeparamref name="TModel"/> is known
            but <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary`1.Model"/> should be copied from the existing instance e.g. when copying from a base
            <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary"/> instance to a <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary`1"/> instance.
            </para>
            <para>
            This constructor may <c>throw</c> if <c>source.Model</c> is non-<c>null</c> and incompatible with
            <typeparamref name="TModel"/>. Pass <c>model: null</c> to
            <see cref="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary`1.#ctor(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary,System.Object)"/> to ignore <c>source.Model</c>.
            </para>
            </remarks>
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary`1.#ctor(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary`1"/> class based in part on an
            existing <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary"/> instance. This constructor is careful to avoid exceptions
            <see cref="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.SetModel(System.Object)"/> may throw when <paramref name="model"/> is <c>null</c>.
            </summary>
            <remarks>
            <para>
            For use when copying a <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary"/> instance and <typeparamref name="TModel"/> and
            <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary`1.Model"/> are known.
            </para>
            <para>
            This constructor may <c>throw</c> if <paramref name="model"/> is non-<c>null</c> and incompatible with
            <typeparamref name="TModel"/>.
            </para>
            </remarks>
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary`1.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary`1"/> class.
            </summary>
            <remarks>Internal for testing.</remarks>
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary`1.Model">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataEvaluator">
            <summary>
            Static class that helps evaluate expressions. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataEvaluator.Eval(Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary,System.String)">
            <summary>
            Gets <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo"/> for named <paramref name="expression"/> in given
            <paramref name="viewData"/>.
            </summary>
            <param name="viewData">
            The <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary"/> that may contain the <paramref name="expression"/> value.
            </param>
            <param name="expression">Expression name, relative to <c>viewData.Model</c>.</param>
            <returns>
            <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo"/> for named <paramref name="expression"/> in given <paramref name="viewData"/>.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataEvaluator.Eval(System.Object,System.String)">
            <summary>
            Gets <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo"/> for named <paramref name="expression"/> in given
            <paramref name="indexableObject"/>.
            </summary>
            <param name="indexableObject">
            The <see cref="T:System.Object"/> that may contain the <paramref name="expression"/> value.
            </param>
            <param name="expression">Expression name, relative to <paramref name="indexableObject"/>.</param>
            <returns>
            <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo"/> for named <paramref name="expression"/> in given
            <paramref name="indexableObject"/>.
            </returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo">
            <summary>
            Represents info about a <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary"/> lookup which is evaluated when <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo.Value"/> is read.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo.#ctor(System.Object,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo"/> class with info about a
            <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary"/> lookup which has already been evaluated.
            </summary>
            <param name="container">The <see cref="T:System.Object"/> that <paramref name="value"/> was evaluated from.</param>
            <param name="value">The evaluated value.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo.#ctor(System.Object,System.Reflection.PropertyInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo"/> class with info about a
            <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary"/> lookup which is evaluated when <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo.Value"/> is read.
            It uses <see cref="M:System.Reflection.PropertyInfo.GetValue(System.Object)"/> on <paramref name="propertyInfo"/>
            passing parameter <paramref name="container"/> to lazily evaluate the value.
            </summary>
            <param name="container">The <see cref="T:System.Object"/> that <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo.Value"/> will be evaluated from.</param>
            <param name="propertyInfo">The <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo.PropertyInfo"/> that will be used to evaluate <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo.Value"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo.#ctor(System.Object,System.Reflection.PropertyInfo,System.Func{System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo"/> class with info about a
            <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary"/> lookup which is evaluated when <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo.Value"/> is read.
            It uses <paramref name="valueAccessor"/> to lazily evaluate the value.
            </summary>
            <param name="container">The <see cref="T:System.Object"/> that has the <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo.Value"/>.</param>
            <param name="propertyInfo">The <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo.PropertyInfo"/> that represents <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo.Value"/>'s property.</param>
            <param name="valueAccessor">A delegate that will return the <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo.Value"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo.Container">
            <summary>
            Gets the <see cref="T:System.Object"/> that has the <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo.Value"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo.PropertyInfo">
            <summary>
            Gets the <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo.PropertyInfo"/> that represents <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo.Value"/>'s property.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataInfo.Value">
            <summary>
            Gets the value of the property.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor">
            <summary>
            Executes an <see cref="T:Microsoft.AspNetCore.Mvc.ViewEngines.IView"/>.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor.DefaultContentType">
            <summary>
            The default content-type header value for views, <c>text/html; charset=utf-8</c>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Mvc.MvcViewOptions},Microsoft.AspNetCore.Mvc.Infrastructure.IHttpResponseStreamWriterFactory,Microsoft.AspNetCore.Mvc.ViewEngines.ICompositeViewEngine,Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionaryFactory,System.Diagnostics.DiagnosticListener,Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor"/>.
            </summary>
            <param name="viewOptions">The <see cref="T:Microsoft.Extensions.Options.IOptions`1"/>.</param>
            <param name="writerFactory">The <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.IHttpResponseStreamWriterFactory"/>.</param>
            <param name="viewEngine">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewEngines.ICompositeViewEngine"/>.</param>
            <param name="tempDataFactory">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionaryFactory"/>.</param>
            <param name="diagnosticListener">The <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor.DiagnosticListener"/>.</param>
            <param name="modelMetadataProvider">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider" />.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor.#ctor(Microsoft.AspNetCore.Mvc.Infrastructure.IHttpResponseStreamWriterFactory,Microsoft.AspNetCore.Mvc.ViewEngines.ICompositeViewEngine,System.Diagnostics.DiagnosticListener)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor"/>.
            </summary>
            <param name="writerFactory">The <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.IHttpResponseStreamWriterFactory"/>.</param>
            <param name="viewEngine">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewEngines.ICompositeViewEngine"/>.</param>
            <param name="diagnosticListener">The <see cref="T:System.Diagnostics.DiagnosticListener"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor.DiagnosticListener">
            <summary>
            Gets the <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor.DiagnosticListener"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor.TempDataFactory">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionaryFactory"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor.ViewEngine">
            <summary>
            Gets the default <see cref="T:Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor.ViewOptions">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Mvc.MvcViewOptions"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor.ModelMetadataProvider">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor.WriterFactory">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.IHttpResponseStreamWriterFactory"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor.ExecuteAsync(Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.ViewEngines.IView,Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary,Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary,System.String,System.Nullable{System.Int32})">
            <summary>
            Executes a view asynchronously.
            </summary>
            <param name="actionContext">The <see cref="T:Microsoft.AspNetCore.Mvc.ActionContext"/> associated with the current request.</param>
            <param name="view">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewEngines.IView"/>.</param>
            <param name="viewData">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary"/>.</param>
            <param name="tempData">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary"/>.</param>
            <param name="contentType">
            The content-type header value to set in the response. If <c>null</c>,
            <see cref="F:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor.DefaultContentType"/> will be used.
            </param>
            <param name="statusCode">
            The HTTP status code to set in the response. May be <c>null</c>.
            </param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> which will complete when view execution is completed.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor.ExecuteAsync(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,System.String,System.Nullable{System.Int32})">
            <summary>
            Executes a view asynchronously.
            </summary>
            <param name="viewContext">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.ViewContext"/> associated with the current request.</param>
            <param name="contentType">
            The content-type header value to set in the response. If <c>null</c>,
            <see cref="F:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewExecutor.DefaultContentType"/> will be used.
            </param>
            <param name="statusCode">
            The HTTP status code to set in the response. May be <c>null</c>.
            </param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> which will complete when view execution is completed.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor">
            <summary>
            Finds and executes an <see cref="T:Microsoft.AspNetCore.Mvc.ViewEngines.IView"/> for a <see cref="T:Microsoft.AspNetCore.Mvc.ViewResult"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Mvc.MvcViewOptions},Microsoft.AspNetCore.Mvc.Infrastructure.IHttpResponseStreamWriterFactory,Microsoft.AspNetCore.Mvc.ViewEngines.ICompositeViewEngine,Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionaryFactory,System.Diagnostics.DiagnosticListener,Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor"/>.
            </summary>
            <param name="viewOptions">The <see cref="T:Microsoft.Extensions.Options.IOptions`1"/>.</param>
            <param name="writerFactory">The <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.IHttpResponseStreamWriterFactory"/>.</param>
            <param name="viewEngine">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewEngines.ICompositeViewEngine"/>.</param>
            <param name="tempDataFactory">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionaryFactory"/>.</param>
            <param name="diagnosticListener">The <see cref="T:System.Diagnostics.DiagnosticListener"/>.</param>
            <param name="loggerFactory">The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory"/>.</param>
            <param name="modelMetadataProvider">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.IModelMetadataProvider"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor.Logger">
            <summary>
            Gets the <see cref="T:Microsoft.Extensions.Logging.ILogger"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor.FindView(Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.ViewResult)">
            <summary>
            Attempts to find the <see cref="T:Microsoft.AspNetCore.Mvc.ViewEngines.IView"/> associated with <paramref name="viewResult"/>.
            </summary>
            <param name="actionContext">The <see cref="T:Microsoft.AspNetCore.Mvc.ActionContext"/> associated with the current request.</param>
            <param name="viewResult">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewResult"/>.</param>
            <returns>A <see cref="T:Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor.ExecuteAsync(Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.ViewResult)">
            <inheritdoc />
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.ViewComponent_AmbiguousTypeMatch">
            <summary>The view component name '{0}' matched multiple types:{1}{2}</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.FormatViewComponent_AmbiguousTypeMatch(System.Object,System.Object,System.Object)">
            <summary>The view component name '{0}' matched multiple types:{1}{2}</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.ViewComponent_AsyncMethod_ShouldReturnTask">
            <summary>Method '{0}' of view component '{1}' should be declared to return {2}&lt;T&gt;.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.FormatViewComponent_AsyncMethod_ShouldReturnTask(System.Object,System.Object,System.Object)">
            <summary>Method '{0}' of view component '{1}' should be declared to return {2}&lt;T&gt;.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.ViewComponent_MustReturnValue">
            <summary>A view component must return a non-null value.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.ViewComponent_SyncMethod_ShouldReturnValue">
            <summary>Method '{0}' of view component '{1}' should be declared to return a value.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.FormatViewComponent_SyncMethod_ShouldReturnValue(System.Object,System.Object)">
            <summary>Method '{0}' of view component '{1}' should be declared to return a value.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.ViewComponent_CannotFindComponent">
            <summary>A view component named '{0}' could not be found. A view component must be a public non-abstract class, not contain any generic parameters, and either be decorated with '{1}' or have a class name ending with the '{2}' suffix. A view component must not be de ...</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.FormatViewComponent_CannotFindComponent(System.Object,System.Object,System.Object,System.Object)">
            <summary>A view component named '{0}' could not be found. A view component must be a public non-abstract class, not contain any generic parameters, and either be decorated with '{1}' or have a class name ending with the '{2}' suffix. A view component must not be de ...</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.ViewComponent_IViewComponentFactory_ReturnedNull">
            <summary>An invoker could not be created for the view component '{0}'.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.FormatViewComponent_IViewComponentFactory_ReturnedNull(System.Object)">
            <summary>An invoker could not be created for the view component '{0}'.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.ViewComponent_CannotFindMethod">
            <summary>Could not find an '{0}' or '{1}' method for the view component '{2}'.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.FormatViewComponent_CannotFindMethod(System.Object,System.Object,System.Object)">
            <summary>Could not find an '{0}' or '{1}' method for the view component '{2}'.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.ViewComponent_InvalidReturnValue">
            <summary>View components only support returning {0}, {1} or {2}.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.FormatViewComponent_InvalidReturnValue(System.Object,System.Object,System.Object)">
            <summary>View components only support returning {0}, {1} or {2}.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.ArgumentCannotBeNullOrEmpty">
            <summary>Value cannot be null or empty.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.PropertyOfTypeCannotBeNull">
            <summary>The '{0}' property of '{1}' must not be null.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.FormatPropertyOfTypeCannotBeNull(System.Object,System.Object)">
            <summary>The '{0}' property of '{1}' must not be null.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.TypeMethodMustReturnNotNullValue">
            <summary>The '{0}' method of type '{1}' cannot return a null value.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.FormatTypeMethodMustReturnNotNullValue(System.Object,System.Object)">
            <summary>The '{0}' method of type '{1}' cannot return a null value.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.ArgumentPropertyUnexpectedType">
            <summary>Property '{0}' is of type '{1}', but this method requires a value of type '{2}'.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.FormatArgumentPropertyUnexpectedType(System.Object,System.Object,System.Object)">
            <summary>Property '{0}' is of type '{1}', but this method requires a value of type '{2}'.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.Common_PartialViewNotFound">
            <summary>The partial view '{0}' was not found or no view engine supports the searched locations. The following locations were searched:{1}</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.FormatCommon_PartialViewNotFound(System.Object,System.Object)">
            <summary>The partial view '{0}' was not found or no view engine supports the searched locations. The following locations were searched:{1}</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.Common_TriState_False">
            <summary>False</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.Common_TriState_NotSet">
            <summary>Not Set</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.Common_TriState_True">
            <summary>True</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.DynamicViewData_ViewDataNull">
            <summary>ViewData value must not be null.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.ExpressionHelper_InvalidIndexerExpression">
            <summary>The expression compiler was unable to evaluate the indexer expression '{0}' because it references the model parameter '{1}' which is unavailable.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.FormatExpressionHelper_InvalidIndexerExpression(System.Object,System.Object)">
            <summary>The expression compiler was unable to evaluate the indexer expression '{0}' because it references the model parameter '{1}' which is unavailable.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.HtmlHelper_NullModelMetadata">
            <summary>The IModelMetadataProvider was unable to provide metadata for expression '{0}'.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.FormatHtmlHelper_NullModelMetadata(System.Object)">
            <summary>The IModelMetadataProvider was unable to provide metadata for expression '{0}'.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.HtmlHelper_NotContextualized">
            <summary>Must call 'Contextualize' method before using this HtmlHelper instance.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.HtmlHelper_MissingSelectData">
            <summary>There is no ViewData item of type '{0}' that has the key '{1}'.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.FormatHtmlHelper_MissingSelectData(System.Object,System.Object)">
            <summary>There is no ViewData item of type '{0}' that has the key '{1}'.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.HtmlHelper_SelectExpressionNotEnumerable">
            <summary>The parameter '{0}' must evaluate to an IEnumerable when multiple selection is allowed.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.FormatHtmlHelper_SelectExpressionNotEnumerable(System.Object)">
            <summary>The parameter '{0}' must evaluate to an IEnumerable when multiple selection is allowed.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.HtmlHelper_TypeNotSupported_ForGetEnumSelectList">
            <summary>The type '{0}' is not supported. Type must be an {1} that does not have an associated {2}.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.FormatHtmlHelper_TypeNotSupported_ForGetEnumSelectList(System.Object,System.Object,System.Object)">
            <summary>The type '{0}' is not supported. Type must be an {1} that does not have an associated {2}.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.HtmlHelper_WrongSelectDataType">
            <summary>The ViewData item that has the key '{0}' is of type '{1}' but must be of type '{2}'.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.FormatHtmlHelper_WrongSelectDataType(System.Object,System.Object,System.Object)">
            <summary>The ViewData item that has the key '{0}' is of type '{1}' but must be of type '{2}'.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.Templates_TypeMustImplementIEnumerable">
            <summary>The '{0}' template was used with an object of type '{1}', which does not implement '{2}'.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.FormatTemplates_TypeMustImplementIEnumerable(System.Object,System.Object,System.Object)">
            <summary>The '{0}' template was used with an object of type '{1}', which does not implement '{2}'.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.TemplateHelpers_TemplateLimitations">
            <summary>Templates can be used only with field access, property access, single-dimension array index, or single-parameter custom indexer expressions.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.TemplateHelpers_NoTemplate">
            <summary>Unable to locate an appropriate template for type {0}.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.FormatTemplateHelpers_NoTemplate(System.Object)">
            <summary>Unable to locate an appropriate template for type {0}.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.ViewData_ModelCannotBeNull">
            <summary>The model item passed is null, but this ViewDataDictionary instance requires a non-null model item of type '{0}'.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.FormatViewData_ModelCannotBeNull(System.Object)">
            <summary>The model item passed is null, but this ViewDataDictionary instance requires a non-null model item of type '{0}'.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.ViewData_WrongTModelType">
            <summary>The model item passed into the ViewDataDictionary is of type '{0}', but this ViewDataDictionary instance requires a model item of type '{1}'.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.FormatViewData_WrongTModelType(System.Object,System.Object)">
            <summary>The model item passed into the ViewDataDictionary is of type '{0}', but this ViewDataDictionary instance requires a model item of type '{1}'.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.ViewEngine_PartialViewNotFound">
            <summary>The partial view '{0}' was not found. The following locations were searched:{1}</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.FormatViewEngine_PartialViewNotFound(System.Object,System.Object)">
            <summary>The partial view '{0}' was not found. The following locations were searched:{1}</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.ViewEngine_ViewNotFound">
            <summary>The view '{0}' was not found. The following locations were searched:{1}</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.FormatViewEngine_ViewNotFound(System.Object,System.Object)">
            <summary>The view '{0}' was not found. The following locations were searched:{1}</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.HtmlHelper_TextAreaParameterOutOfRange">
            <summary>The value must be greater than or equal to zero.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.UnobtrusiveJavascript_ValidationParameterCannotBeEmpty">
            <summary>Validation parameter names in unobtrusive client validation rules cannot be empty. Client rule type: {0}</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.FormatUnobtrusiveJavascript_ValidationParameterCannotBeEmpty(System.Object)">
            <summary>Validation parameter names in unobtrusive client validation rules cannot be empty. Client rule type: {0}</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.UnobtrusiveJavascript_ValidationParameterMustBeLegal">
            <summary>Validation parameter names in unobtrusive client validation rules must start with a lowercase letter and consist of only lowercase letters or digits. Validation parameter name: {0}, client rule type: {1}</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.FormatUnobtrusiveJavascript_ValidationParameterMustBeLegal(System.Object,System.Object)">
            <summary>Validation parameter names in unobtrusive client validation rules must start with a lowercase letter and consist of only lowercase letters or digits. Validation parameter name: {0}, client rule type: {1}</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.UnobtrusiveJavascript_ValidationTypeCannotBeEmpty">
            <summary>Validation type names in unobtrusive client validation rules cannot be empty. Client rule type: {0}</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.FormatUnobtrusiveJavascript_ValidationTypeCannotBeEmpty(System.Object)">
            <summary>Validation type names in unobtrusive client validation rules cannot be empty. Client rule type: {0}</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.UnobtrusiveJavascript_ValidationTypeMustBeLegal">
            <summary>Validation type names in unobtrusive client validation rules must consist of only lowercase letters. Invalid name: "{0}", client rule type: {1}</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.FormatUnobtrusiveJavascript_ValidationTypeMustBeLegal(System.Object,System.Object)">
            <summary>Validation type names in unobtrusive client validation rules must consist of only lowercase letters. Invalid name: "{0}", client rule type: {1}</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.UnobtrusiveJavascript_ValidationTypeMustBeUnique">
            <summary>Validation type names in unobtrusive client validation rules must be unique. The following validation type was seen more than once: {0}</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.FormatUnobtrusiveJavascript_ValidationTypeMustBeUnique(System.Object)">
            <summary>Validation type names in unobtrusive client validation rules must be unique. The following validation type was seen more than once: {0}</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.TemplatedViewLocationExpander_NoReplacementToken">
            <summary>Could not find a replacement for view expansion token '{0}'.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.FormatTemplatedViewLocationExpander_NoReplacementToken(System.Object)">
            <summary>Could not find a replacement for view expansion token '{0}'.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.TemplatedExpander_PopulateValuesMustBeInvokedFirst">
            <summary>{0} must be executed before {1} can be invoked.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.FormatTemplatedExpander_PopulateValuesMustBeInvokedFirst(System.Object,System.Object)">
            <summary>{0} must be executed before {1} can be invoked.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.TemplatedExpander_ValueFactoryCannotReturnNull">
            <summary>The result of value factory cannot be null.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.ViewComponent_AmbiguousTypeMatch_Item">
            <summary>Type: '{0}' - Name: '{1}'</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.FormatViewComponent_AmbiguousTypeMatch_Item(System.Object,System.Object)">
            <summary>Type: '{0}' - Name: '{1}'</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.Common_PropertyNotFound">
            <summary>The property {0}.{1} could not be found.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.FormatCommon_PropertyNotFound(System.Object,System.Object)">
            <summary>The property {0}.{1} could not be found.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.RemoteAttribute_NoUrlFound">
            <summary>No URL for remote validation could be found.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.RemoteAttribute_RemoteValidationFailed">
            <summary>'{0}' is invalid.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.FormatRemoteAttribute_RemoteValidationFailed(System.Object)">
            <summary>'{0}' is invalid.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.HtmlGenerator_FieldNameCannotBeNullOrEmpty">
            <summary>The name of an HTML field cannot be null or empty. Instead use methods {0}.{1} or {2}.{3} with a non-empty {4} argument value.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.FormatHtmlGenerator_FieldNameCannotBeNullOrEmpty(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>The name of an HTML field cannot be null or empty. Instead use methods {0}.{1} or {2}.{3} with a non-empty {4} argument value.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.ViewComponentResult_NameOrTypeMustBeSet">
            <summary>Either the '{0}' or '{1}' property must be set in order to invoke a view component.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.FormatViewComponentResult_NameOrTypeMustBeSet(System.Object,System.Object)">
            <summary>Either the '{0}' or '{1}' property must be set in order to invoke a view component.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.Dictionary_DuplicateKey">
            <summary>The collection already contains an entry with key '{0}'.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.FormatDictionary_DuplicateKey(System.Object)">
            <summary>The collection already contains an entry with key '{0}'.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.ViewComponent_SyncMethod_CannotReturnTask">
            <summary>Method '{0}' of view component '{1}' cannot return a {2}.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.FormatViewComponent_SyncMethod_CannotReturnTask(System.Object,System.Object,System.Object)">
            <summary>Method '{0}' of view component '{1}' cannot return a {2}.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.ViewComponent_AmbiguousMethods">
            <summary>View component '{0}' must have exactly one public method named '{1}' or '{2}'.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.FormatViewComponent_AmbiguousMethods(System.Object,System.Object,System.Object)">
            <summary>View component '{0}' must have exactly one public method named '{1}' or '{2}'.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.ValueInterfaceAbstractOrOpenGenericTypesCannotBeActivated">
            <summary>The type '{0}' cannot be activated by '{1}' because it is either a value type, an interface, an abstract class or an open generic type.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.FormatValueInterfaceAbstractOrOpenGenericTypesCannotBeActivated(System.Object,System.Object)">
            <summary>The type '{0}' cannot be activated by '{1}' because it is either a value type, an interface, an abstract class or an open generic type.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.CreateModelExpression_NullModelMetadata">
            <summary>The {0} was unable to provide metadata for expression '{1}'.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.FormatCreateModelExpression_NullModelMetadata(System.Object,System.Object)">
            <summary>The {0} was unable to provide metadata for expression '{1}'.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.ViewEnginesAreRequired">
            <summary>'{0}.{1}' must not be empty. At least one '{2}' is required to locate a view for rendering.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.FormatViewEnginesAreRequired(System.Object,System.Object,System.Object)">
            <summary>'{0}.{1}' must not be empty. At least one '{2}' is required to locate a view for rendering.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.TempDataProperties_PublicGetterSetter">
            <summary>The '{0}.{1}' property with {2} is invalid. A property using {2} must have a public getter and setter.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.FormatTempDataProperties_PublicGetterSetter(System.Object,System.Object,System.Object)">
            <summary>The '{0}.{1}' property with {2} is invalid. A property using {2} must have a public getter and setter.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.TempDataProperties_InvalidType">
            <summary>TempData serializer '{0}' cannot serialize property '{1}.{2}' of type '{3}'.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.FormatTempDataProperties_InvalidType(System.Object,System.Object,System.Object,System.Object)">
            <summary>TempData serializer '{0}' cannot serialize property '{1}.{2}' of type '{3}'.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.DeserializingTempData">
            <summary>Deserializing TempDataDictionary</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.SerializingTempData">
            <summary>Serializing TempDataDictionary</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.TempData_CannotSerializeType">
            <summary>The '{0}' cannot serialize an object of type '{1}'.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.FormatTempData_CannotSerializeType(System.Object,System.Object)">
            <summary>The '{0}' cannot serialize an object of type '{1}'.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.TempData_CannotDeserializeType">
            <summary>Unsupported data type '{0}'.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.FormatTempData_CannotDeserializeType(System.Object)">
            <summary>Unsupported data type '{0}'.</summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.AsyncDisposableViewsNotSupported">
            <summary>Views implementing '{0}' are not supported.</summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewFeatures.Resources.FormatAsyncDisposableViewsNotSupported(System.Object)">
            <summary>Views implementing '{0}' are not supported.</summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.AutoValidateAntiforgeryTokenAttribute">
            <summary>
            An attribute that causes validation of antiforgery tokens for all unsafe HTTP methods. An antiforgery
            token is required for HTTP methods other than GET, HEAD, OPTIONS, and TRACE.
            </summary>
            <remarks>
            <see cref="T:Microsoft.AspNetCore.Mvc.AutoValidateAntiforgeryTokenAttribute"/> can be applied as a global filter to trigger
            validation of antiforgery tokens by default for an application. Use
            <see cref="T:Microsoft.AspNetCore.Mvc.IgnoreAntiforgeryTokenAttribute"/> to suppress validation of the antiforgery token for
            a controller or action.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.AutoValidateAntiforgeryTokenAttribute.Order">
            <summary>
            Gets the order value for determining the order of execution of filters. Filters execute in
            ascending numeric value of the <see cref="P:Microsoft.AspNetCore.Mvc.AutoValidateAntiforgeryTokenAttribute.Order"/> property.
            </summary>
            <remarks>
            <para>
            Filters are executed in a sequence determined by an ascending sort of the <see cref="P:Microsoft.AspNetCore.Mvc.AutoValidateAntiforgeryTokenAttribute.Order"/> property.
            </para>
            <para>
            The default Order for this attribute is 1000 because it must run after any filter which does authentication
            or login in order to allow them to behave as expected (ie Unauthenticated or Redirect instead of 400).
            </para>
            <para>
            Look at <see cref="P:Microsoft.AspNetCore.Mvc.Filters.IOrderedFilter.Order"/> for more detailed info.
            </para>
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.AutoValidateAntiforgeryTokenAttribute.IsReusable">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.AutoValidateAntiforgeryTokenAttribute.CreateInstance(System.IServiceProvider)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Controller">
            <summary>
            A base class for an MVC controller with view support.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Controller.ViewData">
            <summary>
            Gets or sets <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary"/> used by <see cref="T:Microsoft.AspNetCore.Mvc.ViewResult"/> and <see cref="P:Microsoft.AspNetCore.Mvc.Controller.ViewBag"/>.
            </summary>
            <remarks>
            By default, this property is initialized when <see cref="T:Microsoft.AspNetCore.Mvc.Controllers.IControllerActivator"/> activates
            controllers.
            <para>
            This property can be accessed after the controller has been activated, for example, in a controller action
            or by overriding <see cref="M:Microsoft.AspNetCore.Mvc.Controller.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)"/>.
            </para>
            <para>
            This property can be also accessed from within a unit test where it is initialized with
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.EmptyModelMetadataProvider"/>.
            </para>
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Controller.TempData">
            <summary>
            Gets or sets <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary"/> used by <see cref="T:Microsoft.AspNetCore.Mvc.ViewResult"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Controller.ViewBag">
            <summary>
            Gets the dynamic view bag.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Controller.View">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.ViewResult"/> object that renders a view to the response.
            </summary>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.ViewResult"/> object for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Controller.View(System.String)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.ViewResult"/> object by specifying a <paramref name="viewName"/>.
            </summary>
            <param name="viewName">The name or path of the view that is rendered to the response.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.ViewResult"/> object for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Controller.View(System.Object)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.ViewResult"/> object by specifying a <paramref name="model"/>
            to be rendered by the view.
            </summary>
            <param name="model">The model that is rendered by the view.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.ViewResult"/> object for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Controller.View(System.String,System.Object)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.ViewResult"/> object by specifying a <paramref name="viewName"/>
            and the <paramref name="model"/> to be rendered by the view.
            </summary>
            <param name="viewName">The name or path of the view that is rendered to the response.</param>
            <param name="model">The model that is rendered by the view.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.ViewResult"/> object for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Controller.PartialView">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.PartialViewResult"/> object that renders a partial view to the response.
            </summary>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.PartialViewResult"/> object for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Controller.PartialView(System.String)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.PartialViewResult"/> object by specifying a <paramref name="viewName"/>.
            </summary>
            <param name="viewName">The name or path of the partial view that is rendered to the response.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.PartialViewResult"/> object for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Controller.PartialView(System.Object)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.PartialViewResult"/> object by specifying a <paramref name="model"/>
            to be rendered by the partial view.
            </summary>
            <param name="model">The model that is rendered by the partial view.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.PartialViewResult"/> object for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Controller.PartialView(System.String,System.Object)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.PartialViewResult"/> object by specifying a <paramref name="viewName"/>
            and the <paramref name="model"/> to be rendered by the partial view.
            </summary>
            <param name="viewName">The name or path of the partial view that is rendered to the response.</param>
            <param name="model">The model that is rendered by the partial view.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.PartialViewResult"/> object for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.String)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponentResult"/> by specifying the name of a view component to render.
            </summary>
            <param name="componentName">
            The view component name. Can be a view component
            <see cref="P:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor.ShortName"/> or
            <see cref="P:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor.FullName"/>.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponentResult"/> object for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.Type)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponentResult"/> by specifying the <see cref="T:System.Type"/> of a view component to
            render.
            </summary>
            <param name="componentType">The view component <see cref="T:System.Type"/>.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponentResult"/> object for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.String,System.Object)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponentResult"/> by specifying the name of a view component to render.
            </summary>
            <param name="componentName">
            The view component name. Can be a view component
            <see cref="P:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor.ShortName"/> or
            <see cref="P:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor.FullName"/>.</param>
            <param name="arguments">
            An <see cref="T:System.Object"/> with properties representing arguments to be passed to the invoked view component
            method. Alternatively, an <see cref="T:System.Collections.Generic.IDictionary`2"/> instance
            containing the invocation arguments.
            </param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponentResult"/> object for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Controller.ViewComponent(System.Type,System.Object)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponentResult"/> by specifying the <see cref="T:System.Type"/> of a view component to
            render.
            </summary>
            <param name="componentType">The view component <see cref="T:System.Type"/>.</param>
            <param name="arguments">
            An <see cref="T:System.Object"/> with properties representing arguments to be passed to the invoked view component
            method. Alternatively, an <see cref="T:System.Collections.Generic.IDictionary`2"/> instance
            containing the invocation arguments.
            </param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponentResult"/> object for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Controller.Json(System.Object)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.JsonResult"/> object that serializes the specified <paramref name="data"/> object
            to JSON.
            </summary>
            <param name="data">The object to serialize.</param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.JsonResult"/> that serializes the specified <paramref name="data"/>
            to JSON format for the response.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Controller.Json(System.Object,System.Object)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.JsonResult"/> object that serializes the specified <paramref name="data"/> object
            to JSON.
            </summary>
            <param name="data">The object to serialize.</param>
            <param name="serializerSettings">The serializer settings to be used by the formatter.
            <para>
            When using <c>System.Text.Json</c>, this should be an instance of <see cref="T:System.Text.Json.JsonSerializerOptions" />.
            </para>
            <para>
            When using <c>Newtonsoft.Json</c>, this should be an instance of <c>JsonSerializerSettings</c>.
            </para>
            </param>
            <returns>The created <see cref="T:Microsoft.AspNetCore.Mvc.JsonResult"/> that serializes the specified <paramref name="data"/>
            as JSON format for the response.</returns>
            <remarks>Callers should cache an instance of serializer settings to avoid
            recreating cached data with each call.</remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Controller.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            Called before the action method is invoked.
            </summary>
            <param name="context">The action executing context.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Controller.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)">
            <summary>
            Called after the action method is invoked.
            </summary>
            <param name="context">The action executed context.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Controller.OnActionExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext,Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate)">
            <summary>
            Called before the action method is invoked.
            </summary>
            <param name="context">The action executing context.</param>
            <param name="next">The <see cref="T:Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate"/> to execute. Invoke this delegate in the body
            of <see cref="M:Microsoft.AspNetCore.Mvc.Controller.OnActionExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext,Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate)" /> to continue execution of the action.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> instance.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Controller.Dispose">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Controller.Dispose(System.Boolean)">
            <summary>
            Releases all resources currently used by this <see cref="T:Microsoft.AspNetCore.Mvc.Controller"/> instance.
            </summary>
            <param name="disposing"><c>true</c> if this method is being invoked by the <see cref="M:Microsoft.AspNetCore.Mvc.Controller.Dispose"/> method,
            otherwise <c>false</c>.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.CookieTempDataProviderOptions">
            <summary>
            Provides programmatic configuration for cookies set by <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.CookieTempDataProvider"/>
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.CookieTempDataProviderOptions.Cookie">
            <summary>
            Determines the settings used to create the cookie in <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.CookieTempDataProvider"/>.
            </summary>
            <remarks>
            <list type="bullet">
            <item><description><see cref="P:Microsoft.AspNetCore.Http.CookieBuilder.SameSite"/> defaults to <see cref="F:Microsoft.AspNetCore.Http.SameSiteMode.Lax"/>. Setting this to
            <see cref="F:Microsoft.AspNetCore.Http.SameSiteMode.Strict"/> may cause browsers to not send back the cookie to the server in an
            OAuth login flow.</description></item>
            <item><description><see cref="P:Microsoft.AspNetCore.Http.CookieBuilder.SecurePolicy"/> defaults to <see cref="F:Microsoft.AspNetCore.Http.CookieSecurePolicy.SameAsRequest" />.</description></item>
            <item><description><see cref="P:Microsoft.AspNetCore.Http.CookieBuilder.HttpOnly"/> defaults to <c>true</c>.</description></item>
            <item><description><see cref="P:Microsoft.AspNetCore.Http.CookieBuilder.IsEssential"/> defaults to <c>false</c>. This property is only considered when a
            user opts into the CookiePolicyMiddleware. If you are using the CookiePolicyMiddleware middleware together with 
            <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.CookieTempDataProvider"/>, then either set this property to <c>true</c> or
            request user consent for non-essential cookies.</description></item>
            </list>
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeViewComponentEventData">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.EventData"/> that occurs before a ViewComponent.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeViewComponentEventData.EventName">
            <summary>
            The name of the event.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeViewComponentEventData.#ctor(Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor,Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext,System.Object)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeViewComponentEventData"/>.
            </summary>
            <param name="actionDescriptor">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeViewComponentEventData.ActionDescriptor"/>.</param>
            <param name="viewComponentContext">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeViewComponentEventData.ViewComponentContext"/>.</param>
            <param name="viewComponent">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeViewComponentEventData.ViewComponent"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeViewComponentEventData.ActionDescriptor">
            <summary>
            The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeViewComponentEventData.ActionDescriptor"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeViewComponentEventData.ViewComponentContext">
            <summary>
            The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeViewComponentEventData.ViewComponentContext"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeViewComponentEventData.ViewComponent">
            <summary>
            The view component.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeViewComponentEventData.Count">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeViewComponentEventData.Item(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Diagnostics.AfterViewComponentEventData">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.EventData"/> that occurs after a ViewComponent.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Diagnostics.AfterViewComponentEventData.EventName">
            <summary>
            The name of the event.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Diagnostics.AfterViewComponentEventData.#ctor(Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor,Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext,Microsoft.AspNetCore.Mvc.IViewComponentResult,System.Object)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.AfterViewComponentEventData"/>.
            </summary>
            <param name="actionDescriptor">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterViewComponentEventData.ActionDescriptor"/>.</param>
            <param name="viewComponentContext">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterViewComponentEventData.ViewComponentContext"/>.</param>
            <param name="viewComponentResult">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterViewComponentEventData.ViewComponentResult"/>.</param>
            <param name="viewComponent">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterViewComponentEventData.ViewComponent"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterViewComponentEventData.ActionDescriptor">
            <summary>
            The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterViewComponentEventData.ActionDescriptor"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterViewComponentEventData.ViewComponentContext">
            <summary>
            The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterViewComponentEventData.ViewComponentContext"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterViewComponentEventData.ViewComponentResult">
            <summary>
            The <see cref="T:Microsoft.AspNetCore.Mvc.IViewComponentResult"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterViewComponentEventData.ViewComponent">
            <summary>
            The view component.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterViewComponentEventData.Count">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterViewComponentEventData.Item(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Diagnostics.ViewComponentBeforeViewExecuteEventData">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.EventData"/> that occurs before a view is executed.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Diagnostics.ViewComponentBeforeViewExecuteEventData.EventName">
            <summary>
            The name of the event.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Diagnostics.ViewComponentBeforeViewExecuteEventData.#ctor(Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor,Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext,Microsoft.AspNetCore.Mvc.ViewEngines.IView)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.ViewComponentBeforeViewExecuteEventData"/>.
            </summary>
            <param name="actionDescriptor">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.ViewComponentBeforeViewExecuteEventData.ActionDescriptor"/>.</param>
            <param name="viewComponentContext">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.ViewComponentBeforeViewExecuteEventData.ViewComponentContext"/>.</param>
            <param name="view">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewEngines.IView"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.ViewComponentBeforeViewExecuteEventData.ActionDescriptor">
            <summary>
            The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.ViewComponentBeforeViewExecuteEventData.ActionDescriptor"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.ViewComponentBeforeViewExecuteEventData.ViewComponentContext">
            <summary>
            The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.ViewComponentBeforeViewExecuteEventData.ViewComponentContext"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.ViewComponentBeforeViewExecuteEventData.View">
            <summary>
            The <see cref="T:Microsoft.AspNetCore.Mvc.ViewEngines.IView"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.ViewComponentBeforeViewExecuteEventData.Count">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.ViewComponentBeforeViewExecuteEventData.Item(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Diagnostics.ViewComponentAfterViewExecuteEventData">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.EventData"/> that occurs after a view is executed.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Diagnostics.ViewComponentAfterViewExecuteEventData.EventName">
            <summary>
            The name of the event.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Diagnostics.ViewComponentAfterViewExecuteEventData.#ctor(Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptor,Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext,Microsoft.AspNetCore.Mvc.ViewEngines.IView)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.ViewComponentAfterViewExecuteEventData"/>.
            </summary>
            <param name="actionDescriptor">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.ViewComponentAfterViewExecuteEventData.ActionDescriptor"/>.</param>
            <param name="viewComponentContext">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.ViewComponentAfterViewExecuteEventData.ViewComponentContext"/>.</param>
            <param name="view">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewEngines.IView"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.ViewComponentAfterViewExecuteEventData.ActionDescriptor">
            <summary>
            The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.ViewComponentAfterViewExecuteEventData.ActionDescriptor"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.ViewComponentAfterViewExecuteEventData.ViewComponentContext">
            <summary>
            The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.ViewComponentAfterViewExecuteEventData.ViewComponentContext"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.ViewComponentAfterViewExecuteEventData.View">
            <summary>
            The <see cref="T:Microsoft.AspNetCore.Mvc.ViewEngines.IView"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.ViewComponentAfterViewExecuteEventData.Count">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.ViewComponentAfterViewExecuteEventData.Item(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeViewEventData">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.EventData"/> that occurs before a view.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeViewEventData.EventName">
            <summary>
            The name of the event.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeViewEventData.#ctor(Microsoft.AspNetCore.Mvc.ViewEngines.IView,Microsoft.AspNetCore.Mvc.Rendering.ViewContext)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeViewEventData"/>.
            </summary>
            <param name="view">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewEngines.IView"/>.</param>
            <param name="viewContext">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeViewEventData.ViewContext"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeViewEventData.View">
            <summary>
            The <see cref="T:Microsoft.AspNetCore.Mvc.ViewEngines.IView"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeViewEventData.ViewContext">
            <summary>
            The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeViewEventData.ViewContext"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeViewEventData.Count">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.BeforeViewEventData.Item(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Diagnostics.AfterViewEventData">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.EventData"/> that occurs after a view.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Diagnostics.AfterViewEventData.EventName">
            <summary>
            The name of the event.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Diagnostics.AfterViewEventData.#ctor(Microsoft.AspNetCore.Mvc.ViewEngines.IView,Microsoft.AspNetCore.Mvc.Rendering.ViewContext)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.AfterViewEventData"/>.
            </summary>
            <param name="view">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewEngines.IView"/>.</param>
            <param name="viewContext">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterViewEventData.ViewContext"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterViewEventData.View">
            <summary>
            The <see cref="T:Microsoft.AspNetCore.Mvc.ViewEngines.IView"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterViewEventData.ViewContext">
            <summary>
            The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterViewEventData.ViewContext"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterViewEventData.Count">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.AfterViewEventData.Item(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Diagnostics.ViewFoundEventData">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.EventData"/> that when a view is found.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Diagnostics.ViewFoundEventData.EventName">
            <summary>
            The name of the event.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Diagnostics.ViewFoundEventData.#ctor(Microsoft.AspNetCore.Mvc.ActionContext,System.Boolean,Microsoft.AspNetCore.Mvc.ActionResult,System.String,Microsoft.AspNetCore.Mvc.ViewEngines.IView)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.AfterViewEventData"/>.
            </summary>
            <param name="actionContext">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.ViewFoundEventData.ActionContext"/>.</param>
            <param name="isMainPage">Whether this is a main page.</param>
            <param name="result">The <see cref="T:Microsoft.AspNetCore.Mvc.ActionResult"/>.</param>
            <param name="viewName">The name of the view.</param>
            <param name="view">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewEngines.IView"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.ViewFoundEventData.ActionContext">
            <summary>
            The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.ViewFoundEventData.ActionContext"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.ViewFoundEventData.IsMainPage">
            <summary>
            <see langword="true"/> if a main page.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.ViewFoundEventData.Result">
            <summary>
            The <see cref="T:Microsoft.AspNetCore.Mvc.ActionResult"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.ViewFoundEventData.ViewName">
            <summary>
            The name of the view.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.ViewFoundEventData.View">
            <summary>
            The <see cref="T:Microsoft.AspNetCore.Mvc.ViewEngines.IView"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.ViewFoundEventData.Count">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.ViewFoundEventData.Item(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Diagnostics.ViewNotFoundEventData">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.EventData"/> that when a view is not found.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Diagnostics.ViewNotFoundEventData.EventName">
            <summary>
            The name of the event.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Diagnostics.ViewNotFoundEventData.#ctor(Microsoft.AspNetCore.Mvc.ActionContext,System.Boolean,Microsoft.AspNetCore.Mvc.ActionResult,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Diagnostics.ViewNotFoundEventData"/>.
            </summary>
            <param name="actionContext">The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.ViewNotFoundEventData.ActionContext"/>.</param>
            <param name="isMainPage">Whether this is a main page.</param>
            <param name="result">The <see cref="T:Microsoft.AspNetCore.Mvc.ActionResult"/>.</param>
            <param name="viewName">The name of the view.</param>
            <param name="searchedLocations">The locations searched for the view.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.ViewNotFoundEventData.ActionContext">
            <summary>
            The <see cref="P:Microsoft.AspNetCore.Mvc.Diagnostics.ViewNotFoundEventData.ActionContext"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.ViewNotFoundEventData.IsMainPage">
            <summary>
            <see langword="true"/> if a main page.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.ViewNotFoundEventData.Result">
            <summary>
            The <see cref="T:Microsoft.AspNetCore.Mvc.ActionResult"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.ViewNotFoundEventData.ViewName">
            <summary>
            The name of the view.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.ViewNotFoundEventData.SearchedLocations">
            <summary>
            The locations that were searched.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.ViewNotFoundEventData.Count">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Diagnostics.ViewNotFoundEventData.Item(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.IgnoreAntiforgeryTokenAttribute">
            <summary>
            A filter that skips antiforgery token validation.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.IgnoreAntiforgeryTokenAttribute.Order">
            <summary>
            Gets the order value for determining the order of execution of filters. Filters execute in
            ascending numeric value of the <see cref="P:Microsoft.AspNetCore.Mvc.IgnoreAntiforgeryTokenAttribute.Order"/> property.
            </summary>
            <remarks>
            <para>
            Filters are executed in an ordering determined by an ascending sort of the <see cref="P:Microsoft.AspNetCore.Mvc.IgnoreAntiforgeryTokenAttribute.Order"/> property.
            </para>
            <para>
            The default Order for this attribute is 1000 because it must run after any filter which does authentication
            or login in order to allow them to behave as expected (ie Unauthenticated or Redirect instead of 400).
            </para>
            <para>
            Look at <see cref="P:Microsoft.AspNetCore.Mvc.Filters.IOrderedFilter.Order"/> for more detailed info.
            </para>
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.IViewComponentHelper">
            <summary>
            Supports the rendering of view components in a view.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.IViewComponentHelper.InvokeAsync(System.String,System.Object)">
            <summary>
            Invokes a view component with the specified <paramref name="name"/>.
            </summary>
            <param name="name">The name of the view component.</param>
            <param name="arguments">
            An <see cref="T:System.Object"/> with properties representing arguments to be passed to the invoked view component
            method. Alternatively, an <see cref="T:System.Collections.Generic.IDictionary`2"/> instance
            containing the invocation arguments.
            </param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that on completion returns the rendered <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent" />.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.IViewComponentHelper.InvokeAsync(System.Type,System.Object)">
            <summary>
            Invokes a view component of type <paramref name="componentType" />.
            </summary>
            <param name="componentType">The view component <see cref="T:System.Type"/>.</param>
            <param name="arguments">
            An <see cref="T:System.Object"/> with properties representing arguments to be passed to the invoked view component
            method. Alternatively, an <see cref="T:System.Collections.Generic.IDictionary`2"/> instance
            containing the invocation arguments.
            </param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that on completion returns the rendered <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent" />.
            </returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.IViewComponentResult">
            <summary>
            Result type of a <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponent"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.IViewComponentResult.Execute(Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext)">
            <summary>
            Executes the result of a <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponent"/> using the specified <paramref name="context"/>.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext"/> for the current component execution.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.IViewComponentResult.ExecuteAsync(Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext)">
            <summary>
            Asynchronously executes the result of a <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponent"/> using the specified
            <paramref name="context"/>.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext"/> for the current component execution.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous execution.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions">
            <summary>
            Extensions methods for <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.AddModelError``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String)">
            <summary>
            Adds the specified <paramref name="errorMessage"/> to the <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry.Errors"/> instance
            that is associated with the specified <paramref name="expression"/>. If the maximum number of allowed
            errors has already been recorded, ensures that a <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.TooManyModelErrorsException"/> exception is
            recorded instead.
            </summary>
            <typeparam name="TModel">The type of the model.</typeparam>
            <param name="modelState">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/> instance this method extends.</param>
            <param name="expression">An expression to be evaluated against an item in the current model.</param>
            <param name="errorMessage">The error message to add.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.TryAddModelException``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Exception)">
            <summary>
            Adds the specified <paramref name="exception"/> to the <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry.Errors"/> instance
            that is associated with the specified <paramref name="expression"/>. If the maximum number of allowed
            errors has already been recorded, ensures that a <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.TooManyModelErrorsException"/> exception is
            recorded instead.
            </summary>
            <remarks>
            This method allows adding the <paramref name="exception"/> to the current <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/>
            when <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/> is not available or the exact <paramref name="exception"/>
            must be maintained for later use (even if it is for example a <see cref="T:System.FormatException"/>).
            </remarks>
            <typeparam name="TModel">The type of the model.</typeparam>
            <param name="modelState">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/> instance this method extends.</param>
            <param name="expression">An expression to be evaluated against an item in the current model.</param>
            <param name="exception">The <see cref="T:System.Exception"/> to add.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.AddModelError``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Exception,Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata)">
            <summary>
            Adds the specified <paramref name="exception"/> to the <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateEntry.Errors"/> instance
            that is associated with the specified <paramref name="expression"/>. If the maximum number of allowed
            errors has already been recorded, ensures that a <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.TooManyModelErrorsException"/> exception is
            recorded instead.
            </summary>
            <typeparam name="TModel">The type of the model.</typeparam>
            <param name="modelState">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/> instance this method extends.</param>
            <param name="expression">An expression to be evaluated against an item in the current model.</param>
            <param name="exception">The <see cref="T:System.Exception"/> to add.</param>
            <param name="metadata">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/> associated with the model.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.Remove``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Removes the specified <paramref name="expression"/> from the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/>.
            </summary>
            <typeparam name="TModel">The type of the model.</typeparam>
            <param name="modelState">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/> instance this method extends.</param>
            <param name="expression">An expression to be evaluated against an item in the current model.</param>
            <returns>
            true if the element is successfully removed; otherwise, false.
            This method also returns false if <paramref name="expression"/> was not found in the model-state dictionary.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionaryExtensions.RemoveAll``1(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Removes all the entries for the specified <paramref name="expression"/> from the
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/>.
            </summary>
            <typeparam name="TModel">The type of the model.</typeparam>
            <param name="modelState">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/> instance this method extends.</param>
            <param name="expression">An expression to be evaluated against an item in the current model.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.MvcViewOptions">
            <summary>
            Provides programmatic configuration for views in the MVC framework.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.MvcViewOptions.HtmlHelperOptions">
            <summary>
            Gets or sets programmatic configuration for the HTML helpers and <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.ViewContext"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.MvcViewOptions.ViewEngines">
            <summary>
            Gets a list <see cref="T:Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine"/>s used by this application.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.MvcViewOptions.ClientModelValidatorProviders">
            <summary>
            Gets a list of <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.IClientModelValidatorProvider"/> instances.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.PageRemoteAttribute">
            <summary>
            A <see cref="T:Microsoft.AspNetCore.Mvc.RemoteAttributeBase"/> for razor page handler which configures Unobtrusive validation
            to send an Ajax request to the web site. The invoked handler should return JSON indicating
            whether the value is valid.
            </summary>
            <remarks>Does no server-side validation of the final form submission.</remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.PageRemoteAttribute.PageHandler">
            <summary>
            The handler name used when generating the URL where client should send a validation request.
            </summary>
            <remarks>
            If not set the ambient value will be used when generating the URL.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.PageRemoteAttribute.PageName">
            <summary>
            The page name used when generating the URL where client should send a validation request.
            </summary>
            <remarks>
            If not set the ambient value will be used when generating the URL.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.PageRemoteAttribute.GetUrl(Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientModelValidationContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.PartialViewResult">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.Mvc.ActionResult"/> that renders a partial view to the response.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.PartialViewResult.StatusCode">
            <summary>
            Gets or sets the HTTP status code.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.PartialViewResult.ViewName">
            <summary>
            Gets or sets the name or path of the partial view that is rendered to the response.
            </summary>
            <remarks>
            When <c>null</c>, defaults to <see cref="P:Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor.ActionName"/>.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.PartialViewResult.Model">
            <summary>
            Gets the view data model.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.PartialViewResult.ViewData">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary"/> used for rendering the view for this result.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.PartialViewResult.TempData">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary"/> used for rendering the view for this result.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.PartialViewResult.ViewEngine">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine"/> used to locate views.
            </summary>
            <remarks>When <c>null</c>, an instance of <see cref="T:Microsoft.AspNetCore.Mvc.ViewEngines.ICompositeViewEngine"/> from
            <c>ActionContext.HttpContext.RequestServices</c> is used.</remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.PartialViewResult.ContentType">
            <summary>
            Gets or sets the Content-Type header for the response.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.PartialViewResult.ExecuteResultAsync(Microsoft.AspNetCore.Mvc.ActionContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.RemoteAttribute">
            <summary>
            A <see cref="T:Microsoft.AspNetCore.Mvc.RemoteAttributeBase"/> for controllers which configures Unobtrusive validation to send an Ajax request to the
            web site. The invoked action should return JSON indicating whether the value is valid.
            </summary>
            <remarks>Does no server-side validation of the final form submission.</remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.RemoteAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.RemoteAttribute"/> class.
            </summary>
            <remarks>
            Intended for subclasses that support URL generation with no route, action, or controller names.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.RemoteAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.RemoteAttribute"/> class.
            </summary>
            <param name="routeName">
            The route name used when generating the URL where client should send a validation request.
            </param>
            <remarks>
            Finds the <paramref name="routeName"/> in any area of the application.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.RemoteAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.RemoteAttribute"/> class.
            </summary>
            <param name="action">
            The action name used when generating the URL where client should send a validation request.
            </param>
            <param name="controller">
            The controller name used when generating the URL where client should send a validation request.
            </param>
            <remarks>
            <para>
            If either <paramref name="action"/> or <paramref name="controller"/> is <c>null</c>, uses the corresponding
            ambient value.
            </para>
            <para>Finds the <paramref name="controller"/> in the current area.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.RemoteAttribute.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.RemoteAttribute"/> class.
            </summary>
            <param name="action">
            The action name used when generating the URL where client should send a validation request.
            </param>
            <param name="controller">
            The controller name used when generating the URL where client should send a validation request.
            </param>
            <param name="areaName">The name of the area containing the <paramref name="controller"/>.</param>
            <remarks>
            <para>
            If either <paramref name="action"/> or <paramref name="controller"/> is <c>null</c>, uses the corresponding
            ambient value.
            </para>
            If <paramref name="areaName"/> is <c>null</c>, finds the <paramref name="controller"/> in the root area.
            Use the <see cref="M:Microsoft.AspNetCore.Mvc.RemoteAttribute.#ctor(System.String,System.String)"/> overload find the <paramref name="controller"/> in
            the current area. Or explicitly pass the current area's name as the <paramref name="areaName"/> argument to
            this overload.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.RemoteAttribute.RouteName">
            <summary>
            Gets or sets the route name used when generating the URL where client should send a validation request.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.RemoteAttribute.GetUrl(Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientModelValidationContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.RemoteAttributeBase">
            <summary>
            A <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute"/> which configures Unobtrusive validation to send an Ajax request to the
            web site. The invoked endpoint should return JSON indicating whether the value is valid.
            </summary>
            <remarks>Does no server-side validation of the final form submission.</remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.RemoteAttributeBase.#ctor">
            <summary>
            Initialize a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.RemoteAttributeBase"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.RemoteAttributeBase.RouteData">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Routing.RouteValueDictionary"/> used when generating the URL where client should send a
            validation request.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.RemoteAttributeBase.HttpMethod">
            <summary>
            Gets or sets the HTTP method (<c>"Get"</c> or <c>"Post"</c>) client should use when sending a validation
            request.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.RemoteAttributeBase.AdditionalFields">
            <summary>
            Gets or sets the comma-separated names of fields the client should include in a validation request.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.RemoteAttributeBase.FormatAdditionalFieldsForClientValidation(System.String)">
            <summary>
            Formats <paramref name="property"/> and <see cref="P:Microsoft.AspNetCore.Mvc.RemoteAttributeBase.AdditionalFields"/> for use in generated HTML.
            </summary>
            <param name="property">
            Name of the property associated with this <see cref="T:Microsoft.AspNetCore.Mvc.RemoteAttribute"/> instance.
            </param>
            <returns>Comma-separated names of fields the client should include in a validation request.</returns>
            <remarks>
            Excludes any whitespace from <see cref="P:Microsoft.AspNetCore.Mvc.RemoteAttributeBase.AdditionalFields"/> in the return value.
            Prefixes each field name in the return value with <c>"*."</c>.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.RemoteAttributeBase.FormatPropertyForClientValidation(System.String)">
            <summary>
            Formats <paramref name="property"/> for use in generated HTML.
            </summary>
            <param name="property">One field name the client should include in a validation request.</param>
            <returns>Name of a field the client should include in a validation request.</returns>
            <remarks>Returns <paramref name="property"/> with a <c>"*."</c> prefix.</remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.RemoteAttributeBase.GetUrl(Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientModelValidationContext)">
            <summary>
            Returns the URL where the client should send a validation request.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientModelValidationContext"/> used to generate the URL.</param>
            <returns>The URL where the client should send a validation request.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.RemoteAttributeBase.FormatErrorMessage(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.RemoteAttributeBase.IsValid(System.Object)">
            <inheritdoc />
            <remarks>
            Always returns <c>true</c> since this <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute"/> does no validation itself.
            Related validations occur only when the client sends a validation request.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.RemoteAttributeBase.AddValidation(Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientModelValidationContext)">
            <summary>
            Adds Unobtrusive validation HTML attributes to <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientModelValidationContext"/>.
            </summary>
            <param name="context">
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientModelValidationContext"/> to add Unobtrusive validation HTML attributes to.
            </param>
            <remarks>
            Calls derived <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute"/> implementation of <see cref="M:Microsoft.AspNetCore.Mvc.RemoteAttributeBase.GetUrl(Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientModelValidationContext)"/>.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Rendering.CheckBoxHiddenInputRenderMode">
            <summary>
            Controls the rendering of hidden input fields when using CheckBox tag helpers or html helpers.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Rendering.CheckBoxHiddenInputRenderMode.None">
            <summary>
            Hidden input fields will not be automatically rendered. If checkbox is not checked, no value will be posted.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Rendering.CheckBoxHiddenInputRenderMode.Inline">
            <summary>
            Hidden input fields will be rendered inline with each checkbox. Use this for legacy ASP.NET MVC behavior.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Rendering.CheckBoxHiddenInputRenderMode.EndOfForm">
            <summary>
            Hidden input fields will be rendered for each checkbox at the bottom of the form element. This is the preferred render method and default MVC behavior.
            If <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.FormContext.CanRenderAtEndOfForm"/> is <c>false</c>, will fall back on <see cref="F:Microsoft.AspNetCore.Mvc.Rendering.CheckBoxHiddenInputRenderMode.Inline"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Rendering.FormInputRenderMode">
            <summary>
            Used for configuring how form inputs should be rendered with respect to
            the current locale.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Rendering.FormInputRenderMode.DetectCultureFromInputType">
            <summary>
            When appropriate, use <see cref="P:System.Globalization.CultureInfo.InvariantCulture"/> to format HTML input element values.
            Generate a hidden HTML form input for each value that uses culture-invariant formatting
            so model binding logic can parse with the correct culture.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Rendering.FormInputRenderMode.AlwaysUseCurrentCulture">
            <summary>
            Always use <see cref="P:System.Globalization.CultureInfo.CurrentCulture"/> to format input element values.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Rendering.FormMethod">
            <summary>
            Specifies constants which define the form method used.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Rendering.FormMethod.Get">
            <summary>
            Get form method.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Rendering.FormMethod.Post">
            <summary>
            Post form method.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Rendering.FormMethod.Dialog">
            <summary>
            Dialog form method.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Rendering.Html5DateRenderingMode">
            <summary>
            Controls the value-rendering method For HTML5 input elements of types such as date, time, datetime and
            datetime-local.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Rendering.Html5DateRenderingMode.Rfc3339">
            <summary>
            Render date and time values as Rfc3339 compliant strings to support HTML5 date and time types of input
            elements.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Rendering.Html5DateRenderingMode.CurrentCulture">
            <summary>
            Render date and time values according to the current culture's ToString behavior.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperComponentExtensions">
            <summary>
            Extensions for rendering components.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperComponentExtensions.RenderComponentAsync``1(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,Microsoft.AspNetCore.Mvc.Rendering.RenderMode)">
            <summary>
            Renders the <typeparamref name="TComponent"/>.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/>.</param>
            <param name="renderMode">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.RenderMode"/> for the component.</param>
            <returns>The HTML produced by the rendered <typeparamref name="TComponent"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperComponentExtensions.RenderComponentAsync``1(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,Microsoft.AspNetCore.Mvc.Rendering.RenderMode,System.Object)">
            <summary>
            Renders the <typeparamref name="TComponent"/>.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/>.</param>
            <param name="parameters">An <see cref="T:System.Object"/> containing the parameters to pass
            to the component.</param>
            <param name="renderMode">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.RenderMode"/> for the component.</param>
            <returns>The HTML produced by the rendered <typeparamref name="TComponent"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperComponentExtensions.RenderComponentAsync(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.Type,Microsoft.AspNetCore.Mvc.Rendering.RenderMode,System.Object)">
            <summary>
            Renders the specified <paramref name="componentType"/>.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/>.</param>
            <param name="componentType">The component type.</param>
            <param name="parameters">An <see cref="T:System.Object"/> containing the parameters to pass
            to the component.</param>
            <param name="renderMode">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.RenderMode"/> for the component.</param>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions">
            <summary>
            Display-related extensions for <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> and <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.Display(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)">
            <summary>
            Returns HTML markup for the <paramref name="expression"/>, using a display template. The template is found
            using the <paramref name="expression"/>'s <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/>.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="expression">
            Expression name, relative to the current model. May identify a single property or an
            <see cref="T:System.Object"/> that contains the properties to display.
            </param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the created HTML.</returns>
            <remarks>
            <para>
            For example the default <see cref="T:System.Object"/> display template includes markup for each property in the
            <paramref name="expression"/>'s value.
            </para>
            <para>
            Example <paramref name="expression"/>s include <c>string.Empty</c> which identifies the current model and
            <c>"prop"</c> which identifies the current model's "prop" property.
            </para>
            <para>
            Custom templates are found under a <c>DisplayTemplates</c> folder. The folder name is case-sensitive on
            case-sensitive file systems.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.Display(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object)">
            <summary>
            Returns HTML markup for the <paramref name="expression"/>, using a display template and specified
            additional view data. The template is found using the <paramref name="expression"/>'s
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/>.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="expression">
            Expression name, relative to the current model. May identify a single property or an
            <see cref="T:System.Object"/> that contains the properties to display.
            </param>
            <param name="additionalViewData">
            An anonymous <see cref="T:System.Object"/> or <see cref="T:System.Collections.Generic.IDictionary`2"/>
            that can contain additional view data that will be merged into the
            <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary`1"/> instance created for the template.
            </param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the created HTML.</returns>
            <remarks>
            <para>
            For example the default <see cref="T:System.Object"/> display template includes markup for each property in the
            <paramref name="expression"/>'s value.
            </para>
            <para>
            Example <paramref name="expression"/>s include <c>string.Empty</c> which identifies the current model and
            <c>"prop"</c> which identifies the current model's "prop" property.
            </para>
            <para>
            Custom templates are found under a <c>DisplayTemplates</c> folder. The folder name is case-sensitive on
            case-sensitive file systems.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.Display(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String)">
            <summary>
            Returns HTML markup for the <paramref name="expression"/>, using a display template. The template is found
            using the <paramref name="templateName"/> or the <paramref name="expression"/>'s
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/>.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="expression">
            Expression name, relative to the current model. May identify a single property or an
            <see cref="T:System.Object"/> that contains the properties to display.
            </param>
            <param name="templateName">The name of the template used to create the HTML markup.</param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the created HTML.</returns>
            <remarks>
            <para>
            For example the default <see cref="T:System.Object"/> display template includes markup for each property in the
            <paramref name="expression"/>'s value.
            </para>
            <para>
            Example <paramref name="expression"/>s include <c>string.Empty</c> which identifies the current model and
            <c>"prop"</c> which identifies the current model's "prop" property.
            </para>
            <para>
            Custom templates are found under a <c>DisplayTemplates</c> folder. The folder name is case-sensitive on
            case-sensitive file systems.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.Display(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String,System.Object)">
            <summary>
            Returns HTML markup for the <paramref name="expression"/>, using a display template and specified
            additional view data. The template is found using the <paramref name="templateName"/> or the
            <paramref name="expression"/>'s <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/>.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="expression">
            Expression name, relative to the current model. May identify a single property or an
            <see cref="T:System.Object"/> that contains the properties to display.
            </param>
            <param name="templateName">The name of the template used to create the HTML markup.</param>
            <param name="additionalViewData">
            An anonymous <see cref="T:System.Object"/> or <see cref="T:System.Collections.Generic.IDictionary`2"/>
            that can contain additional view data that will be merged into the
            <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary`1"/> instance created for the template.
            </param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the created HTML.</returns>
            <remarks>
            <para>
            For example the default <see cref="T:System.Object"/> display template includes markup for each property in the
            <paramref name="expression"/>'s value.
            </para>
            <para>
            Example <paramref name="expression"/>s include <c>string.Empty</c> which identifies the current model and
            <c>"prop"</c> which identifies the current model's "prop" property.
            </para>
            <para>
            Custom templates are found under a <c>DisplayTemplates</c> folder. The folder name is case-sensitive on
            case-sensitive file systems.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.Display(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String,System.String)">
            <summary>
            Returns HTML markup for the <paramref name="expression"/>, using a display template and specified HTML
            field name. The template is found using the <paramref name="templateName"/> or the
            <paramref name="expression"/>'s<see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/>.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="expression">
            Expression name, relative to the current model. May identify a single property or an
            <see cref="T:System.Object"/> that contains the properties to display.
            </param>
            <param name="templateName">The name of the template used to create the HTML markup.</param>
            <param name="htmlFieldName">
            A <see cref="T:System.String"/> used to disambiguate the names of HTML elements that are created for
            properties that have the same name.
            </param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the created HTML.</returns>
            <remarks>
            <para>
            For example the default <see cref="T:System.Object"/> display template includes markup for each property in the
            <paramref name="expression"/>'s value.
            </para>
            <para>
            Example <paramref name="expression"/>s include <c>string.Empty</c> which identifies the current model and
            <c>"prop"</c> which identifies the current model's "prop" property.
            </para>
            <para>
            Custom templates are found under a <c>DisplayTemplates</c> folder. The folder name is case-sensitive on
            case-sensitive file systems.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.DisplayFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Returns HTML markup for the <paramref name="expression"/>, using a display template. The template is found
            using the <paramref name="expression"/>'s <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/>.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1"/> instance this method extends.</param>
            <param name="expression">An expression to be evaluated against the current model.</param>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TResult">The type of the <paramref name="expression"/> result.</typeparam>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the created HTML.</returns>
            <remarks>
            <para>
            For example the default <see cref="T:System.Object"/> display template includes markup for each property in the
            <paramref name="expression"/> result.
            </para>
            <para>
            Custom templates are found under a <c>DisplayTemplates</c> folder. The folder name is case-sensitive on
            case-sensitive file systems.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.DisplayFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
            <summary>
            Returns HTML markup for the <paramref name="expression"/>, using a display template and specified
            additional view data. The template is found using the <paramref name="expression"/>'s
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/>.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1"/> instance this method extends.</param>
            <param name="expression">An expression to be evaluated against the current model.</param>
            <param name="additionalViewData">
            An anonymous <see cref="T:System.Object"/> or <see cref="T:System.Collections.Generic.IDictionary`2"/>
            that can contain additional view data that will be merged into the
            <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary`1"/> instance created for the template.
            </param>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TResult">The type of the <paramref name="expression"/> result.</typeparam>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the created HTML.</returns>
            <remarks>
            <para>
            For example the default <see cref="T:System.Object"/> display template includes markup for each property in the
            <paramref name="expression"/> result.
            </para>
            <para>
            Custom templates are found under a <c>DisplayTemplates</c> folder. The folder name is case-sensitive on
            case-sensitive file systems.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.DisplayFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)">
            <summary>
            Returns HTML markup for the <paramref name="expression"/>, using a display template. The template is found
            using the <paramref name="templateName"/> or the <paramref name="expression"/>'s
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/>.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1"/> instance this method extends.</param>
            <param name="expression">An expression to be evaluated against the current model.</param>
            <param name="templateName">The name of the template used to create the HTML markup.</param>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TResult">The type of the <paramref name="expression"/> result.</typeparam>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the created HTML.</returns>
            <remarks>
            <para>
            For example the default <see cref="T:System.Object"/> display template includes markup for each property in the
            <paramref name="expression"/> result.
            </para>
            <para>
            Custom templates are found under a <c>DisplayTemplates</c> folder. The folder name is case-sensitive on
            case-sensitive file systems.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.DisplayFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)">
            <summary>
            Returns HTML markup for the <paramref name="expression"/>, using a display template and specified
            additional view data. The template is found using the <paramref name="templateName"/> or the
            <paramref name="expression"/>'s <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/>.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1"/> instance this method extends.</param>
            <param name="expression">An expression to be evaluated against the current model.</param>
            <param name="templateName">The name of the template used to create the HTML markup.</param>
            <param name="additionalViewData">
            An anonymous <see cref="T:System.Object"/> or <see cref="T:System.Collections.Generic.IDictionary`2"/>
            that can contain additional view data that will be merged into the
            <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary`1"/> instance created for the template.
            </param>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TResult">The type of the <paramref name="expression"/> result.</typeparam>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the created HTML.</returns>
            <remarks>
            <para>
            For example the default <see cref="T:System.Object"/> display template includes markup for each property in the
            <paramref name="expression"/> result.
            </para>
            <para>
            Custom templates are found under a <c>DisplayTemplates</c> folder. The folder name is case-sensitive on
            case-sensitive file systems.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.DisplayFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.String)">
            <summary>
            Returns HTML markup for the <paramref name="expression"/>, using a display template and specified HTML
            field name. The template is found using the <paramref name="templateName"/> or the
            <paramref name="expression"/>'s <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/>.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1"/> instance this method extends.</param>
            <param name="expression">An expression to be evaluated against the current model.</param>
            <param name="templateName">The name of the template used to create the HTML markup.</param>
            <param name="htmlFieldName">
            A <see cref="T:System.String"/> used to disambiguate the names of HTML elements that are created for properties
            that have the same name.
            </param>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TResult">The type of the <paramref name="expression"/> result.</typeparam>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the created HTML.</returns>
            <remarks>
            <para>
            For example the default <see cref="T:System.Object"/> display template includes markup for each property in the
            <paramref name="expression"/> result.
            </para>
            <para>
            Custom templates are found under a <c>DisplayTemplates</c> folder. The folder name is case-sensitive on
            case-sensitive file systems.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.DisplayForModel(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
            <summary>
            Returns HTML markup for the current model, using a display template. The template is found using the
            model's <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/>.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the created HTML.</returns>
            <remarks>
            <para>
            For example the default <see cref="T:System.Object"/> display template includes markup for each property in the
            current model.
            </para>
            <para>
            Custom templates are found under a <c>DisplayTemplates</c> folder. The folder name is case-sensitive on
            case-sensitive file systems.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.DisplayForModel(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.Object)">
            <summary>
            Returns HTML markup for the current model, using a display template and specified additional view data. The
            template is found using the model's <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/>.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="additionalViewData">
            An anonymous <see cref="T:System.Object"/> or <see cref="T:System.Collections.Generic.IDictionary`2"/>
            that can contain additional view data that will be merged into the
            <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary`1"/> instance created for the template.
            </param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the created HTML.</returns>
            <remarks>
            <para>
            For example the default <see cref="T:System.Object"/> display template includes markup for each property in the
            current model.
            </para>
            <para>
            Custom templates are found under a <c>DisplayTemplates</c> folder. The folder name is case-sensitive on
            case-sensitive file systems.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.DisplayForModel(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)">
            <summary>
            Returns HTML markup for the current model, using a display template. The template is found using the
            <paramref name="templateName"/> or the model's <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/>.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="templateName">The name of the template used to create the HTML markup.</param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the created HTML.</returns>
            <remarks>
            <para>
            For example the default <see cref="T:System.Object"/> display template includes markup for each property in the
            current model.
            </para>
            <para>
            Custom templates are found under a <c>DisplayTemplates</c> folder. The folder name is case-sensitive on
            case-sensitive file systems.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.DisplayForModel(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object)">
            <summary>
            Returns HTML markup for the current model, using a display template and specified additional view data. The
            template is found using the <paramref name="templateName"/> or the model's
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/>.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="templateName">The name of the template used to create the HTML markup.</param>
            <param name="additionalViewData">
            An anonymous <see cref="T:System.Object"/> or <see cref="T:System.Collections.Generic.IDictionary`2"/>
            that can contain additional view data that will be merged into the
            <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary`1"/> instance created for the template.
            </param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the created HTML.</returns>
            <remarks>
            <para>
            For example the default <see cref="T:System.Object"/> display template includes markup for each property in the
            current model.
            </para>
            <para>
            Custom templates are found under a <c>DisplayTemplates</c> folder. The folder name is case-sensitive on
            case-sensitive file systems.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.DisplayForModel(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String)">
            <summary>
            Returns HTML markup for the current model, using a display template and specified HTML field name. The
            template is found using the <paramref name="templateName"/> or the model's
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/>.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="templateName">The name of the template used to create the HTML markup.</param>
            <param name="htmlFieldName">
            A <see cref="T:System.String"/> used to disambiguate the names of HTML elements that are created for
            properties that have the same name.
            </param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the created HTML.</returns>
            <remarks>
            <para>
            For example the default <see cref="T:System.Object"/> display template includes markup for each property in the
            current model.
            </para>
            <para>
            Custom templates are found under a <c>DisplayTemplates</c> folder. The folder name is case-sensitive on
            case-sensitive file systems.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayExtensions.DisplayForModel(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String,System.Object)">
            <summary>
            Returns HTML markup for the current model, using a display template, specified HTML field name, and
            additional view data. The template is found using the <paramref name="templateName"/> or the model's
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/>.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="templateName">The name of the template used to create the HTML markup.</param>
            <param name="htmlFieldName">
            A <see cref="T:System.String"/> used to disambiguate the names of HTML elements that are created for
            properties that have the same name.
            </param>
            <param name="additionalViewData">
            An anonymous <see cref="T:System.Object"/> or <see cref="T:System.Collections.Generic.IDictionary`2"/>
            that can contain additional view data that will be merged into the
            <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary`1"/> instance created for the template.
            </param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the created HTML.</returns>
            <remarks>
            <para>
            For example the default <see cref="T:System.Object"/> display template includes markup for each property in the
            current model.
            </para>
            <para>
            Custom templates are found under a <c>DisplayTemplates</c> folder. The folder name is case-sensitive on
            case-sensitive file systems.
            </para>
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayNameExtensions">
            <summary>
            DisplayName-related extensions for <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> and <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayNameExtensions.DisplayNameForModel(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
            <summary>
            Returns the display name for the current model.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <returns>A <see cref="T:System.String"/> containing the display name.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperDisplayNameExtensions.DisplayNameFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{System.Collections.Generic.IEnumerable{``0}},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Returns the display name for the specified <paramref name="expression"/>
            if the current model represents a collection.
            </summary>
            <param name="htmlHelper">
            The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1"/> of <see cref="T:System.Collections.Generic.IEnumerable`1"/> instance this method extends.
            </param>
            <param name="expression">An expression to be evaluated against an item in the current model.</param>
            <typeparam name="TModelItem">The type of items in the model collection.</typeparam>
            <typeparam name="TResult">The type of the <paramref name="expression"/> result.</typeparam>
            <returns>A <see cref="T:System.String"/> containing the display name.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperEditorExtensions">
            <summary>
            Editor-related extensions for <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> and <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperEditorExtensions.Editor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)">
            <summary>
            Returns HTML markup for the <paramref name="expression"/>, using an editor template. The template is found
            using the <paramref name="expression"/>'s <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/>.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="expression">
            Expression name, relative to the current model. May identify a single property or an
            <see cref="T:System.Object"/> that contains the properties to edit.
            </param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;input&gt; element(s).</returns>
            <remarks>
            <para>
            For example the default <see cref="T:System.Object"/> editor template includes &lt;label&gt; and &lt;input&gt;
            elements for each property in the <paramref name="expression"/>'s value.
            </para>
            <para>
            Example <paramref name="expression"/>s include <c>string.Empty</c> which identifies the current model and
            <c>"prop"</c> which identifies the current model's "prop" property.
            </para>
            <para>
            Custom templates are found under a <c>EditorTemplates</c> folder. The folder name is case-sensitive on
            case-sensitive file systems.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperEditorExtensions.Editor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object)">
            <summary>
            Returns HTML markup for the <paramref name="expression"/>, using an editor template and specified
            additional view data. The template is found using the <paramref name="expression"/>'s
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/>.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="expression">
            Expression name, relative to the current model. May identify a single property or an
            <see cref="T:System.Object"/> that contains the properties to edit.
            </param>
            <param name="additionalViewData">
            An anonymous <see cref="T:System.Object"/> or <see cref="T:System.Collections.Generic.IDictionary`2"/>
            that can contain additional view data that will be merged into the
            <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary`1"/> instance created for the template.
            </param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;input&gt; element(s).</returns>
            <remarks>
            <para>
            For example the default <see cref="T:System.Object"/> editor template includes &lt;label&gt; and &lt;input&gt;
            elements for each property in the <paramref name="expression"/>'s value.
            </para>
            <para>
            Example <paramref name="expression"/>s include <c>string.Empty</c> which identifies the current model and
            <c>"prop"</c> which identifies the current model's "prop" property.
            </para>
            <para>
            Custom templates are found under a <c>EditorTemplates</c> folder. The folder name is case-sensitive on
            case-sensitive file systems.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperEditorExtensions.Editor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String)">
            <summary>
            Returns HTML markup for the <paramref name="expression"/>, using an editor template. The template is found
            using the <paramref name="templateName"/> or the <paramref name="expression"/>'s
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/>.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="expression">
            Expression name, relative to the current model. May identify a single property or an
            <see cref="T:System.Object"/> that contains the properties to edit.
            </param>
            <param name="templateName">The name of the template used to create the HTML markup.</param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;input&gt; element(s).</returns>
            <remarks>
            <para>
            For example the default <see cref="T:System.Object"/> editor template includes &lt;label&gt; and &lt;input&gt;
            elements for each property in the <paramref name="expression"/>'s value.
            </para>
            <para>
            Example <paramref name="expression"/>s include <c>string.Empty</c> which identifies the current model and
            <c>"prop"</c> which identifies the current model's "prop" property.
            </para>
            <para>
            Custom templates are found under a <c>EditorTemplates</c> folder. The folder name is case-sensitive on
            case-sensitive file systems.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperEditorExtensions.Editor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String,System.Object)">
            <summary>
            Returns HTML markup for the <paramref name="expression"/>, using an editor template and specified
            additional view data. The template is found using the <paramref name="templateName"/> or the
            <paramref name="expression"/>'s <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/>.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="expression">
            Expression name, relative to the current model. May identify a single property or an
            <see cref="T:System.Object"/> that contains the properties to edit.
            </param>
            <param name="templateName">The name of the template used to create the HTML markup.</param>
            <param name="additionalViewData">
            An anonymous <see cref="T:System.Object"/> or <see cref="T:System.Collections.Generic.IDictionary`2"/>
            that can contain additional view data that will be merged into the
            <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary`1"/> instance created for the template.
            </param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;input&gt; element(s).</returns>
            <remarks>
            <para>
            For example the default <see cref="T:System.Object"/> editor template includes &lt;label&gt; and &lt;input&gt;
            elements for each property in the <paramref name="expression"/>'s value.
            </para>
            <para>
            Example <paramref name="expression"/>s include <c>string.Empty</c> which identifies the current model and
            <c>"prop"</c> which identifies the current model's "prop" property.
            </para>
            <para>
            Custom templates are found under a <c>EditorTemplates</c> folder. The folder name is case-sensitive on
            case-sensitive file systems.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperEditorExtensions.Editor(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String,System.String)">
            <summary>
            Returns HTML markup for the <paramref name="expression"/>, using an editor template and specified HTML
            field name. The template is found using the <paramref name="templateName"/> or the
            <paramref name="expression"/>'s <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/>.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="expression">
            Expression name, relative to the current model. May identify a single property or an
            <see cref="T:System.Object"/> that contains the properties to edit.
            </param>
            <param name="templateName">The name of the template used to create the HTML markup.</param>
            <param name="htmlFieldName">
            A <see cref="T:System.String"/> used to disambiguate the names of HTML elements that are created for
            properties that have the same name.
            </param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;input&gt; element(s).</returns>
            <remarks>
            <para>
            For example the default <see cref="T:System.Object"/> editor template includes &lt;label&gt; and &lt;input&gt;
            elements for each property in the <paramref name="expression"/>'s value.
            </para>
            <para>
            Example <paramref name="expression"/>s include <c>string.Empty</c> which identifies the current model and
            <c>"prop"</c> which identifies the current model's "prop" property.
            </para>
            <para>
            Custom templates are found under a <c>EditorTemplates</c> folder. The folder name is case-sensitive on
            case-sensitive file systems.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperEditorExtensions.EditorFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Returns HTML markup for the <paramref name="expression"/>, using an editor template. The template is found
            using the <paramref name="expression"/>'s <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/>.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1"/> instance this method extends.</param>
            <param name="expression">An expression to be evaluated against the current model.</param>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TResult">The type of the <paramref name="expression"/> result.</typeparam>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;input&gt; element(s).</returns>
            <remarks>
            <para>
            For example the default <see cref="T:System.Object"/> editor template includes &lt;label&gt; and &lt;input&gt;
            elements for each property in the <paramref name="expression"/> result.
            </para>
            <para>
            Custom templates are found under a <c>EditorTemplates</c> folder. The folder name is case-sensitive on
            case-sensitive file systems.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperEditorExtensions.EditorFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
            <summary>
            Returns HTML markup for the <paramref name="expression"/>, using an editor template and specified
            additional view data. The template is found using the <paramref name="expression"/>'s
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/>.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1"/> instance this method extends.</param>
            <param name="expression">An expression to be evaluated against the current model.</param>
            <param name="additionalViewData">
            An anonymous <see cref="T:System.Object"/> or <see cref="T:System.Collections.Generic.IDictionary`2"/>
            that can contain additional view data that will be merged into the
            <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary`1"/> instance created for the template.
            </param>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TResult">The type of the <paramref name="expression"/> result.</typeparam>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;input&gt; element(s).</returns>
            <remarks>
            <para>
            For example the default <see cref="T:System.Object"/> editor template includes &lt;label&gt; and &lt;input&gt;
            elements for each property in the <paramref name="expression"/> result.
            </para>
            <para>
            Custom templates are found under a <c>EditorTemplates</c> folder. The folder name is case-sensitive on
            case-sensitive file systems.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperEditorExtensions.EditorFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)">
            <summary>
            Returns HTML markup for the <paramref name="expression"/>, using an editor template. The template is found
            using the <paramref name="templateName"/> or the <paramref name="expression"/>'s
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/>.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1"/> instance this method extends.</param>
            <param name="expression">An expression to be evaluated against the current model.</param>
            <param name="templateName">The name of the template that is used to create the HTML markup.</param>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TResult">The type of the <paramref name="expression"/> result.</typeparam>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;input&gt; element(s).</returns>
            <remarks>
            <para>
            For example the default <see cref="T:System.Object"/> editor template includes &lt;label&gt; and &lt;input&gt;
            elements for each property in the <paramref name="expression"/> result.
            </para>
            <para>
            Custom templates are found under a <c>EditorTemplates</c> folder. The folder name is case-sensitive on
            case-sensitive file systems.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperEditorExtensions.EditorFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)">
            <summary>
            Returns HTML markup for the <paramref name="expression"/>, using an editor template and specified
            additional view data. The template is found using the <paramref name="templateName"/> or the
            <paramref name="expression"/>'s <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/>.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1"/> instance this method extends.</param>
            <param name="expression">An expression to be evaluated against the current model.</param>
            <param name="templateName">The name of the template that is used to create the HTML markup.</param>
            <param name="additionalViewData">
            An anonymous <see cref="T:System.Object"/> or <see cref="T:System.Collections.Generic.IDictionary`2"/>
            that can contain additional view data that will be merged into the
            <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary`1"/> instance created for the template.
            </param>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TResult">The type of the <paramref name="expression"/> result.</typeparam>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;input&gt; element(s).</returns>
            <remarks>
            <para>
            For example the default <see cref="T:System.Object"/> editor template includes &lt;label&gt; and &lt;input&gt;
            elements for each property in the <paramref name="expression"/> result.
            </para>
            <para>
            Custom templates are found under a <c>EditorTemplates</c> folder. The folder name is case-sensitive on
            case-sensitive file systems.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperEditorExtensions.EditorFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.String)">
            <summary>
            Returns HTML markup for the <paramref name="expression"/>, using an editor template and specified HTML
            field name. The template is found using the <paramref name="templateName"/> or the
            <paramref name="expression"/>'s <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/>.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1"/> instance this method extends.</param>
            <param name="expression">An expression to be evaluated against the current model.</param>
            <param name="templateName">The name of the template that is used to create the HTML markup.</param>
            <param name="htmlFieldName">
            A <see cref="T:System.String"/> used to disambiguate the names of HTML elements that are created for properties
            that have the same name.
            </param>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TResult">The type of the <paramref name="expression"/> result.</typeparam>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;input&gt; element(s).</returns>
            <remarks>
            <para>
            For example the default <see cref="T:System.Object"/> editor template includes &lt;label&gt; and &lt;input&gt;
            elements for each property in the <paramref name="expression"/> result.
            </para>
            <para>
            Custom templates are found under a <c>EditorTemplates</c> folder. The folder name is case-sensitive on
            case-sensitive file systems.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperEditorExtensions.EditorForModel(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
            <summary>
            Returns HTML markup for the current model, using an editor template. The template is found using the
            model's <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/>.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;input&gt; element(s).</returns>
            <remarks>
            <para>
            For example the default <see cref="T:System.Object"/> editor template includes &lt;label&gt; and &lt;input&gt;
            elements for each property in the current model.
            </para>
            <para>
            Custom templates are found under a <c>EditorTemplates</c> folder. The folder name is case-sensitive on
            case-sensitive file systems.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperEditorExtensions.EditorForModel(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.Object)">
            <summary>
            Returns HTML markup for the current model, using an editor template and specified additional view data. The
            template is found using the model's <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/>.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="additionalViewData">
            An anonymous <see cref="T:System.Object"/> or <see cref="T:System.Collections.Generic.IDictionary`2"/>
            that can contain additional view data that will be merged into the
            <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary`1"/> instance created for the template.
            </param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;input&gt; element(s).</returns>
            <remarks>
            <para>
            For example the default <see cref="T:System.Object"/> editor template includes &lt;label&gt; and &lt;input&gt;
            elements for each property in the current model.
            </para>
            <para>
            Custom templates are found under a <c>EditorTemplates</c> folder. The folder name is case-sensitive on
            case-sensitive file systems.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperEditorExtensions.EditorForModel(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)">
            <summary>
            Returns HTML markup for the current model, using an editor template. The template is found using the
            <paramref name="templateName"/> or the model's <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/>.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="templateName">The name of the template used to create the HTML markup.</param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;input&gt; element(s).</returns>
            <remarks>
            <para>
            For example the default <see cref="T:System.Object"/> editor template includes &lt;label&gt; and &lt;input&gt;
            elements for each property in the current model.
            </para>
            <para>
            Custom templates are found under a <c>EditorTemplates</c> folder. The folder name is case-sensitive on
            case-sensitive file systems.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperEditorExtensions.EditorForModel(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object)">
            <summary>
            Returns HTML markup for the current model, using an editor template and specified additional view data. The
            template is found using the <paramref name="templateName"/> or the model's
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/>.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="templateName">The name of the template used to create the HTML markup.</param>
            <param name="additionalViewData">
            An anonymous <see cref="T:System.Object"/> or <see cref="T:System.Collections.Generic.IDictionary`2"/>
            that can contain additional view data that will be merged into the
            <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary`1"/> instance created for the template.
            </param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;input&gt; element(s).</returns>
            <remarks>
            <para>
            For example the default <see cref="T:System.Object"/> editor template includes &lt;label&gt; and &lt;input&gt;
            elements for each property in the current model.
            </para>
            <para>
            Custom templates are found under a <c>EditorTemplates</c> folder. The folder name is case-sensitive on
            case-sensitive file systems.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperEditorExtensions.EditorForModel(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String)">
            <summary>
            Returns HTML markup for the current model, using an editor template and specified HTML field name. The
            template is found using the <paramref name="templateName"/> or the model's
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/>.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="templateName">The name of the template used to create the HTML markup.</param>
            <param name="htmlFieldName">
            A <see cref="T:System.String"/> used to disambiguate the names of HTML elements that are created for
            properties that have the same name.
            </param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;input&gt; element(s).</returns>
            <remarks>
            <para>
            For example the default <see cref="T:System.Object"/> editor template includes &lt;label&gt; and &lt;input&gt;
            elements for each property in the current model.
            </para>
            <para>
            Custom templates are found under a <c>EditorTemplates</c> folder. The folder name is case-sensitive on
            case-sensitive file systems.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperEditorExtensions.EditorForModel(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String,System.Object)">
            <summary>
            Returns HTML markup for the current model, using an editor template, specified HTML field name, and
            additional view data. The template is found using the <paramref name="templateName"/> or the model's
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/>.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="templateName">The name of the template used to create the HTML markup.</param>
            <param name="htmlFieldName">
            A <see cref="T:System.String"/> used to disambiguate the names of HTML elements that are created for
            properties that have the same name.
            </param>
            <param name="additionalViewData">
            An anonymous <see cref="T:System.Object"/> or <see cref="T:System.Collections.Generic.IDictionary`2"/>
            that can contain additional view data that will be merged into the
            <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary`1"/> instance created for the template.
            </param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;input&gt; element(s).</returns>
            <remarks>
            <para>
            For example the default <see cref="T:System.Object"/> editor template includes &lt;label&gt; and &lt;input&gt;
            elements for each property in the current model.
            </para>
            <para>
            Custom templates are found under a <c>EditorTemplates</c> folder. The folder name is case-sensitive on
            case-sensitive file systems.
            </para>
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperFormExtensions">
            <summary>
            Form-related extensions for <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperFormExtensions.BeginForm(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
            <summary>
            Renders a &lt;form&gt; start tag to the response. The &lt;form&gt;'s <c>action</c> attribute value will
            match the current request.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <returns>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.MvcForm"/> instance which renders the &lt;/form&gt; end tag when disposed.
            </returns>
            <remarks>
            In this context, "renders" means the method writes its output using <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.Writer"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperFormExtensions.BeginForm(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.Nullable{System.Boolean})">
            <summary>
            Renders a &lt;form&gt; start tag to the response. The &lt;form&gt;'s <c>action</c> attribute value will
            match the current request.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="antiforgery">
            If <c>true</c>, &lt;form&gt; elements will include an antiforgery token.
            If <c>false</c>, suppresses the generation an &lt;input&gt; of type "hidden" with an antiforgery token.
            If <c>null</c>, &lt;form&gt; elements will include an antiforgery token.
            </param>
            <returns>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.MvcForm"/> instance which renders the &lt;/form&gt; end tag when disposed.
            </returns>
            <remarks>
            In this context, "renders" means the method writes its output using <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.Writer"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperFormExtensions.BeginForm(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,Microsoft.AspNetCore.Mvc.Rendering.FormMethod)">
            <summary>
            Renders a &lt;form&gt; start tag to the response. When the user submits the form, the
            current action will process the request.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="method">The HTTP method for processing the form, either GET or POST.</param>
            <returns>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.MvcForm"/> instance which renders the &lt;/form&gt; end tag when disposed.
            </returns>
            <remarks>
            In this context, "renders" means the method writes its output using <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.Writer"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperFormExtensions.BeginForm(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,Microsoft.AspNetCore.Mvc.Rendering.FormMethod,System.Object)">
            <summary>
            Renders a &lt;form&gt; start tag to the response. When the user submits the form, the
            current action will process the request.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="method">The HTTP method for processing the form, either GET or POST.</param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML
            attributes.
            </param>
            <returns>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.MvcForm"/> instance which renders the &lt;/form&gt; end tag when disposed.
            </returns>
            <remarks>
            In this context, "renders" means the method writes its output using <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.Writer"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperFormExtensions.BeginForm(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,Microsoft.AspNetCore.Mvc.Rendering.FormMethod,System.Nullable{System.Boolean},System.Object)">
            <summary>
            Renders a &lt;form&gt; start tag to the response. When the user submits the form, the
            current action will process the request.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="method">The HTTP method for processing the form, either GET or POST.</param>
            <param name="antiforgery">
            If <c>true</c>, &lt;form&gt; elements will include an antiforgery token.
            If <c>false</c>, suppresses the generation an &lt;input&gt; of type "hidden" with an antiforgery token.
            If <c>null</c>, &lt;form&gt; elements will include an antiforgery token only if
            <paramref name="method"/> is not <see cref="F:Microsoft.AspNetCore.Mvc.Rendering.FormMethod.Get"/>.
            </param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML
            attributes.
            </param>
            <returns>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.MvcForm"/> instance which renders the &lt;/form&gt; end tag when disposed.
            </returns>
            <remarks>
            In this context, "renders" means the method writes its output using <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.Writer"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperFormExtensions.BeginForm(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.Object)">
            <summary>
            Renders a &lt;form&gt; start tag to the response. When the user submits the form, the
            current action will process the request.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="routeValues">
            An <see cref="T:System.Object"/> that contains the parameters for a route. The parameters are retrieved through
            reflection by examining the properties of the <see cref="T:System.Object"/>. This <see cref="T:System.Object"/> is typically
            created using <see cref="T:System.Object"/> initializer syntax. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the route
            parameters.
            </param>
            <returns>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.MvcForm"/> instance which renders the &lt;/form&gt; end tag when disposed.
            </returns>
            <remarks>
            In this context, "renders" means the method writes its output using <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.Writer"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperFormExtensions.BeginForm(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String)">
            <summary>
            Renders a &lt;form&gt; start tag to the response. When the user submits the form, the action with name
            <paramref name="actionName"/> will process the request.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="actionName">The name of the action method.</param>
            <param name="controllerName">The name of the controller.</param>
            <returns>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.MvcForm"/> instance which renders the &lt;/form&gt; end tag when disposed.
            </returns>
            <remarks>
            In this context, "renders" means the method writes its output using <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.Writer"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperFormExtensions.BeginForm(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String,System.Object)">
            <summary>
            Renders a &lt;form&gt; start tag to the response. When the user submits the form, the action with name
            <paramref name="actionName"/> will process the request.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="actionName">The name of the action method.</param>
            <param name="controllerName">The name of the controller.</param>
            <param name="routeValues">
            An <see cref="T:System.Object"/> that contains the parameters for a route. The parameters are retrieved through
            reflection by examining the properties of the <see cref="T:System.Object"/>. This <see cref="T:System.Object"/> is typically
            created using <see cref="T:System.Object"/> initializer syntax. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the route
            parameters.
            </param>
            <returns>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.MvcForm"/> instance which renders the &lt;/form&gt; end tag when disposed.
            </returns>
            <remarks>
            In this context, "renders" means the method writes its output using <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.Writer"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperFormExtensions.BeginForm(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String,Microsoft.AspNetCore.Mvc.Rendering.FormMethod)">
            <summary>
            Renders a &lt;form&gt; start tag to the response. When the user submits the form, the action with name
            <paramref name="actionName"/> will process the request.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="actionName">The name of the action method.</param>
            <param name="controllerName">The name of the controller.</param>
            <param name="method">The HTTP method for processing the form, either GET or POST.</param>
            <returns>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.MvcForm"/> instance which renders the &lt;/form&gt; end tag when disposed.
            </returns>
            <remarks>
            In this context, "renders" means the method writes its output using <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.Writer"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperFormExtensions.BeginForm(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String,System.Object,Microsoft.AspNetCore.Mvc.Rendering.FormMethod)">
            <summary>
            Renders a &lt;form&gt; start tag to the response. When the user submits the form, the action with name
            <paramref name="actionName"/> will process the request.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="actionName">The name of the action method.</param>
            <param name="controllerName">The name of the controller.</param>
            <param name="routeValues">
            An <see cref="T:System.Object"/> that contains the parameters for a route. The parameters are retrieved through
            reflection by examining the properties of the <see cref="T:System.Object"/>. This <see cref="T:System.Object"/> is typically
            created using <see cref="T:System.Object"/> initializer syntax. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the route
            parameters.
            </param>
            <param name="method">The HTTP method for processing the form, either GET or POST.</param>
            <returns>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.MvcForm"/> instance which renders the &lt;/form&gt; end tag when disposed.
            </returns>
            <remarks>
            In this context, "renders" means the method writes its output using <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.Writer"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperFormExtensions.BeginForm(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String,Microsoft.AspNetCore.Mvc.Rendering.FormMethod,System.Object)">
            <summary>
            Renders a &lt;form&gt; start tag to the response. When the user submits the form, the action with name
            <paramref name="actionName"/> will process the request.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="actionName">The name of the action method.</param>
            <param name="controllerName">The name of the controller.</param>
            <param name="method">The HTTP method for processing the form, either GET or POST.</param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML
            attributes.
            </param>
            <returns>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.MvcForm"/> instance which renders the &lt;/form&gt; end tag when disposed.
            </returns>
            <remarks>
            In this context, "renders" means the method writes its output using <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.Writer"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperFormExtensions.BeginRouteForm(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.Object)">
            <summary>
            Renders a &lt;form&gt; start tag to the response. The first route that can provide a URL with the
            specified <paramref name="routeValues"/> generates the &lt;form&gt;'s <c>action</c> attribute value.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="routeValues">
            An <see cref="T:System.Object"/> that contains the parameters for a route. The parameters are retrieved through
            reflection by examining the properties of the <see cref="T:System.Object"/>. This <see cref="T:System.Object"/> is typically
            created using <see cref="T:System.Object"/> initializer syntax. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the route
            parameters.
            </param>
            <returns>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.MvcForm"/> instance which renders the &lt;/form&gt; end tag when disposed.
            </returns>
            <remarks>
            In this context, "renders" means the method writes its output using <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.Writer"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperFormExtensions.BeginRouteForm(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.Object,System.Nullable{System.Boolean})">
            <summary>
            Renders a &lt;form&gt; start tag to the response. The first route that can provide a URL with the
            specified <paramref name="routeValues"/> generates the &lt;form&gt;'s <c>action</c> attribute value.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="routeValues">
            An <see cref="T:System.Object"/> that contains the parameters for a route. The parameters are retrieved through
            reflection by examining the properties of the <see cref="T:System.Object"/>. This <see cref="T:System.Object"/> is typically
            created using <see cref="T:System.Object"/> initializer syntax. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the route
            parameters.
            </param>
            <param name="antiforgery">
            If <c>true</c>, &lt;form&gt; elements will include an antiforgery token.
            If <c>false</c>, suppresses the generation an &lt;input&gt; of type "hidden" with an antiforgery token.
            If <c>null</c>, &lt;form&gt; elements will include an antiforgery token.
            </param>
            <returns>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.MvcForm"/> instance which renders the &lt;/form&gt; end tag when disposed.
            </returns>
            <remarks>
            In this context, "renders" means the method writes its output using <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.Writer"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperFormExtensions.BeginRouteForm(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)">
            <summary>
            Renders a &lt;form&gt; start tag to the response. The route with name <paramref name="routeName"/>
            generates the &lt;form&gt;'s <c>action</c> attribute value.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="routeName">The name of the route.</param>
            <returns>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.MvcForm"/> instance which renders the &lt;/form&gt; end tag when disposed.
            </returns>
            <remarks>
            In this context, "renders" means the method writes its output using <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.Writer"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperFormExtensions.BeginRouteForm(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Nullable{System.Boolean})">
            <summary>
            Renders a &lt;form&gt; start tag to the response. The route with name <paramref name="routeName"/>
            generates the &lt;form&gt;'s <c>action</c> attribute value.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="routeName">The name of the route.</param>
            <param name="antiforgery">
            If <c>true</c>, &lt;form&gt; elements will include an antiforgery token.
            If <c>false</c>, suppresses the generation an &lt;input&gt; of type "hidden" with an antiforgery token.
            If <c>null</c>, &lt;form&gt; elements will include an antiforgery token.
            </param>
            <returns>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.MvcForm"/> instance which renders the &lt;/form&gt; end tag when disposed.
            </returns>
            <remarks>
            In this context, "renders" means the method writes its output using <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.Writer"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperFormExtensions.BeginRouteForm(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object)">
            <summary>
            Renders a &lt;form&gt; start tag to the response. The route with name <paramref name="routeName"/>
            generates the &lt;form&gt;'s <c>action</c> attribute value.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="routeName">The name of the route.</param>
            <param name="routeValues">
            An <see cref="T:System.Object"/> that contains the parameters for a route. The parameters are retrieved through
            reflection by examining the properties of the <see cref="T:System.Object"/>. This <see cref="T:System.Object"/> is typically
            created using <see cref="T:System.Object"/> initializer syntax. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the route
            parameters.
            </param>
            <returns>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.MvcForm"/> instance which renders the &lt;/form&gt; end tag when disposed.
            </returns>
            <remarks>
            In this context, "renders" means the method writes its output using <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.Writer"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperFormExtensions.BeginRouteForm(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,Microsoft.AspNetCore.Mvc.Rendering.FormMethod)">
            <summary>
            Renders a &lt;form&gt; start tag to the response. The route with name <paramref name="routeName"/>
            generates the &lt;form&gt;'s <c>action</c> attribute value.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="routeName">The name of the route.</param>
            <param name="method">The HTTP method for processing the form, either GET or POST.</param>
            <returns>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.MvcForm"/> instance which renders the &lt;/form&gt; end tag when disposed.
            </returns>
            <remarks>
            In this context, "renders" means the method writes its output using <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.Writer"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperFormExtensions.BeginRouteForm(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object,Microsoft.AspNetCore.Mvc.Rendering.FormMethod)">
            <summary>
            Renders a &lt;form&gt; start tag to the response. The route with name <paramref name="routeName"/>
            generates the &lt;form&gt;'s <c>action</c> attribute value.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="routeName">The name of the route.</param>
            <param name="routeValues">
            An <see cref="T:System.Object"/> that contains the parameters for a route. The parameters are retrieved through
            reflection by examining the properties of the <see cref="T:System.Object"/>. This <see cref="T:System.Object"/> is typically
            created using <see cref="T:System.Object"/> initializer syntax. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the route
            parameters.
            </param>
            <param name="method">The HTTP method for processing the form, either GET or POST.</param>
            <returns>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.MvcForm"/> instance which renders the &lt;/form&gt; end tag when disposed.
            </returns>
            <remarks>
            In this context, "renders" means the method writes its output using <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.Writer"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperFormExtensions.BeginRouteForm(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,Microsoft.AspNetCore.Mvc.Rendering.FormMethod,System.Object)">
            <summary>
            Renders a &lt;form&gt; start tag to the response. The route with name <paramref name="routeName"/>
            generates the &lt;form&gt;'s <c>action</c> attribute value.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="routeName">The name of the route.</param>
            <param name="method">The HTTP method for processing the form, either GET or POST.</param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML
            attributes.
            </param>
            <returns>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.MvcForm"/> instance which renders the &lt;/form&gt; end tag when disposed.
            </returns>
            <remarks>
            In this context, "renders" means the method writes its output using <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.Writer"/>.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions">
            <summary>
            Input-related extensions for <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> and <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.CheckBox(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)">
            <summary>
            Returns an &lt;input&gt; element of type "checkbox" with value "true" and an &lt;input&gt; element of type
            "hidden" with value "false" for the specified <paramref name="expression"/>. Adds a "checked" attribute to
            the "checkbox" element based on the first non-<c>null</c> value found in:
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/> entry with full name,
            the <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewData"/> entry with full name, or
            the <paramref name="expression"/> evaluated against <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/>.
            See <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Name(System.String)"/> for more information about a "full name".
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="expression">Expression name, relative to the current model.</param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;input&gt; elements.</returns>
            <remarks>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix"/> and <paramref name="expression"/> to set
            checkbox element's "name" attribute. Sanitizes <paramref name="expression"/> to set checkbox element's "id"
            attribute.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.CheckBox(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Boolean)">
            <summary>
            Returns an &lt;input&gt; element of type "checkbox" with value "true" and an &lt;input&gt; element of type
            "hidden" with value "false" for the specified <paramref name="expression"/>. Adds a "checked" attribute to
            the "checkbox" element based on the first non-<c>null</c> value found in:
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/> entry with full name,
            the <paramref name="isChecked"/> parameter,
            the <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewData"/> entry with full name, or
            the <paramref name="expression"/> evaluated against <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/>.
            See <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Name(System.String)"/> for more information about a "full name".
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="expression">Expression name, relative to the current model.</param>
            <param name="isChecked">If <c>true</c>, checkbox is initially checked.</param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;input&gt; elements.</returns>
            <remarks>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix"/> and <paramref name="expression"/> to set
            checkbox element's "name" attribute. Sanitizes <paramref name="expression"/> to set checkbox element's "id"
            attribute.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.CheckBox(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object)">
            <summary>
            Returns an &lt;input&gt; element of type "checkbox" with value "true" and an &lt;input&gt; element of type
            "hidden" with value "false" for the specified <paramref name="expression"/>. Adds a "checked" attribute to
            the "checkbox" element based on the first non-<c>null</c> value found in:
            the <paramref name="htmlAttributes"/> dictionary entry with key "checked",
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/> entry with full name,
            the <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewData"/> entry with full name, or
            the <paramref name="expression"/> evaluated against <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/>.
            See <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Name(System.String)"/> for more information about a "full name".
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="expression">Expression name, relative to the current model.</param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the checkbox element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML
            attributes.
            </param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;input&gt; elements.</returns>
            <remarks>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix"/> and <paramref name="expression"/> to set
            checkbox element's "name" attribute. Sanitizes <paramref name="expression"/> to set checkbox element's "id"
            attribute.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.CheckBoxFor``1(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Returns an &lt;input&gt; element of type "checkbox" with value "true" and an &lt;input&gt; element of type
            "hidden" with value "false" for the specified <paramref name="expression"/>. Adds a "checked" attribute to
            the "checkbox" element based on the first non-<c>null</c> value found in:
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/> entry with full name, or
            the <paramref name="expression"/> evaluated against <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/>.
            See <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1.NameFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})"/> for more information about a "full name".
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1"/> instance this method extends.</param>
            <param name="expression">An expression to be evaluated against the current model.</param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;input&gt; elements.</returns>
            <remarks>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix"/> and the string representation of the
            <paramref name="expression"/> to set checkbox element's "name" attribute. Sanitizes the string
            representation of the <paramref name="expression"/> to set checkbox element's "id" attribute.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.Hidden(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)">
            <summary>
            Returns an &lt;input&gt; element of type "hidden" for the specified <paramref name="expression"/>. Adds a
            "value" attribute to the element containing the first non-<c>null</c> value found in:
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/> entry with full name,
            the <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewData"/> entry with full name, or
            the <paramref name="expression"/> evaluated against <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/>.
            See <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Name(System.String)"/> for more information about a "full name".
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="expression">Expression name, relative to the current model.</param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;input&gt; element.</returns>
            <remarks>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix"/> and <paramref name="expression"/> to set
            &lt;input&gt; element's "name" attribute. Sanitizes <paramref name="expression"/> to set element's "id"
            attribute.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.Hidden(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object)">
            <summary>
            Returns an &lt;input&gt; element of type "hidden" for the specified <paramref name="expression"/>. Adds a
            "value" attribute to the element containing the first non-<c>null</c> value found in:
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/> entry with full name,
            the <paramref name="value"/> parameter,
            the <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewData"/> entry with full name, or
            the <paramref name="expression"/> evaluated against <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/>.
            See <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Name(System.String)"/> for more information about a "full name".
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="expression">Expression name, relative to the current model.</param>
            <param name="value">If non-<c>null</c>, value to include in the element.</param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;input&gt; element.</returns>
            <remarks>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix"/> and <paramref name="expression"/> to set
            &lt;input&gt; element's "name" attribute. Sanitizes <paramref name="expression"/> to set element's "id"
            attribute.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.HiddenFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Returns an &lt;input&gt; element of type "hidden" for the specified <paramref name="expression"/>. Adds a
            "value" attribute to the element containing the first non-<c>null</c> value found in:
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/> entry with full name, or
            the <paramref name="expression"/> evaluated against <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/>.
            See <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1.NameFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})"/> for more information about a "full name".
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1"/> instance this method extends.</param>
            <param name="expression">An expression to be evaluated against the current model.</param>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TResult">The type of the <paramref name="expression"/> result.</typeparam>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;input&gt; element.</returns>
            <remarks>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix"/> and the string representation of the
            <paramref name="expression"/> to set &lt;input&gt; element's "name" attribute. Sanitizes the string
            representation of the <paramref name="expression"/> to set element's "id" attribute.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.Password(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)">
            <summary>
            Returns an &lt;input&gt; element of type "password" for the specified <paramref name="expression"/>. Does
            not add a "value" attribute.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="expression">Expression name, relative to the current model.</param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;input&gt; element.</returns>
            <remarks>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix"/> and <paramref name="expression"/> to set
            &lt;input&gt; element's "name" attribute. Sanitizes <paramref name="expression"/> to set element's "id"
            attribute. Sets &lt;input&gt; element's "value" attribute to <c>string.Empty</c>.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.Password(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object)">
            <summary>
            Returns an &lt;input&gt; element of type "password" for the specified <paramref name="expression"/>. Adds a
            "value" attribute containing the <paramref name="value"/> parameter if that is non-<c>null</c>.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="expression">Expression name, relative to the current model.</param>
            <param name="value">If non-<c>null</c>, value to include in the element.</param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;input&gt; element.</returns>
            <remarks>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix"/> and <paramref name="expression"/> to set
            &lt;input&gt; element's "name" attribute. Sanitizes <paramref name="expression"/> to set element's "id"
            attribute.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.PasswordFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Returns an &lt;input&gt; element of type "password" for the specified <paramref name="expression"/>. Does
            not add a "value" attribute.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1"/> instance this method extends.</param>
            <param name="expression">An expression to be evaluated against the current model.</param>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TResult">The type of the <paramref name="expression"/> result.</typeparam>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;input&gt; element.</returns>
            <remarks>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix"/> and the string representation of the
            <paramref name="expression"/> to set &lt;input&gt; element's "name" attribute. Sanitizes the string
            representation of the <paramref name="expression"/> to set element's "id" attribute.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.RadioButton(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object)">
            <summary>
            Returns an &lt;input&gt; element of type "radio" for the specified <paramref name="expression"/>.
            Adds a "value" attribute to the element containing the <paramref name="value"/> parameter if that is
            non-<c>null</c>.
            Adds a "checked" attribute to the element if <paramref name="value"/> matches the first non-<c>null</c>
            value found in:
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/> entry with full name,
            the <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewData"/> entry with full name, or
            the <paramref name="expression"/> evaluated against <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/>.
            See <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Name(System.String)"/> for more information about a "full name".
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="expression">Expression name, relative to the current model.</param>
            <param name="value">Value to include in the element. Must not be <c>null</c>.</param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;input&gt; element.</returns>
            <remarks>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix"/> and <paramref name="expression"/> to set
            &lt;input&gt; element's "name" attribute. Sanitizes <paramref name="expression"/> to set element's "id"
            attribute. Sets &lt;input&gt; element's "value" attribute to <paramref name="value"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.RadioButton(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object,System.Object)">
            <summary>
            Returns an &lt;input&gt; element of type "radio" for the specified <paramref name="expression"/>.
            Adds a "value" attribute to the element containing the first non-<c>null</c> value found in:
            the <paramref name="value"/> parameter, or
            the <paramref name="htmlAttributes"/> dictionary entry with key "value".
            Adds a "checked" attribute to the element if <paramref name="value"/> matches the first non-<c>null</c>
            value found in:
            the <paramref name="htmlAttributes"/> dictionary entry with key "checked",
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/> entry with full name,
            the <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewData"/> entry with full name, or
            the <paramref name="expression"/> evaluated against <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/>.
            See <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Name(System.String)"/> for more information about a "full name".
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="expression">Expression name, relative to the current model.</param>
            <param name="value">
            If non-<c>null</c>, value to include in the element. Must not be <c>null</c> if no "checked" entry exists
            in <paramref name="htmlAttributes"/>.
            </param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML
            attributes.
            </param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;input&gt; element.</returns>
            <remarks>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix"/> and <paramref name="expression"/> to set
            &lt;input&gt; element's "name" attribute. Sanitizes <paramref name="expression"/> to set element's "id"
            attribute.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.RadioButton(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object,System.Boolean)">
            <summary>
            Returns an &lt;input&gt; element of type "radio" for the specified <paramref name="expression"/>.
            Adds a "value" attribute to the element containing the <paramref name="value"/> parameter if that is
            non-<c>null</c>.
            Adds a "checked" attribute to the element if <paramref name="value"/> matches the first non-<c>null</c>
            value found in:
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/> entry with full name,
            the <paramref name="isChecked"/> parameter,
            the <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewData"/> entry with full name, or
            the <paramref name="expression"/> evaluated against <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/>.
            See <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Name(System.String)"/> for more information about a "full name".
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="expression">Expression name, relative to the current model.</param>
            <param name="value">
            If non-<c>null</c>, value to include in the element. Must not be <c>null</c> if
            <paramref name="isChecked"/> is also <c>null</c>.
            </param>
            <param name="isChecked">
            If <c>true</c>, radio button is initially selected. Must not be <c>null</c> if
            <paramref name="value"/> is also <c>null</c>.
            </param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;input&gt; element.</returns>
            <remarks>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix"/> and <paramref name="expression"/> to set
            &lt;input&gt; element's "name" attribute. Sanitizes <paramref name="expression"/> to set element's "id"
            attribute.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.RadioButtonFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
            <summary>
            Returns an &lt;input&gt; element of type "radio" for the specified <paramref name="expression"/>.
            Adds a "value" attribute to the element containing the <paramref name="value"/> parameter.
            Adds a "checked" attribute to the element if <paramref name="value"/> matches the first non-<c>null</c>
            value found in:
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/> entry with full name, or
            the <paramref name="expression"/> evaluated against <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/>.
            See <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1.NameFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})"/> for more information about a "full name".
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1"/> instance this method extends.</param>
            <param name="expression">An expression to be evaluated against the current model.</param>
            <param name="value">Value to include in the element. Must not be <c>null</c>.</param>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TResult">The type of the <paramref name="expression"/> result.</typeparam>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;input&gt; element.</returns>
            <remarks>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix"/> and the string representation of the
            <paramref name="expression"/> to set &lt;select&gt; element's "name" attribute. Sanitizes the string
            representation of the <paramref name="expression"/> to set element's "id" attribute. Converts the
            <paramref name="value"/> to a <see cref="T:System.String"/> to set element's "value" attribute.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextBox(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)">
            <summary>
            Returns an &lt;input&gt; element of type "text" for the specified <paramref name="expression"/>. Adds a
            "value" attribute to the element containing the first non-<c>null</c> value found in:
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/> entry with full name,
            the <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewData"/> entry with full name, or
            the <paramref name="expression"/> evaluated against <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/>.
            See <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Name(System.String)"/> for more information about a "full name".
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="expression">Expression name, relative to the current model.</param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;input&gt; element.</returns>
            <remarks>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix"/> and <paramref name="expression"/> to set
            &lt;input&gt; element's "name" attribute. Sanitizes <paramref name="expression"/> to set element's "id"
            attribute.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextBox(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object)">
            <summary>
            Returns an &lt;input&gt; element of type "text" for the specified <paramref name="expression"/>. Adds a
            "value" attribute to the element containing the first non-<c>null</c> value found in:
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/> entry with full name,
            the <paramref name="value"/> parameter,
            the <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewData"/> entry with full name, or
            the <paramref name="expression"/> evaluated against <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/>.
            See <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Name(System.String)"/> for more information about a "full name".
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="expression">Expression name, relative to the current model.</param>
            <param name="value">If non-<c>null</c>, value to include in the element.</param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;input&gt; element.</returns>
            <remarks>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix"/> and <paramref name="expression"/> to set
            &lt;input&gt; element's "name" attribute. Sanitizes <paramref name="expression"/> to set element's "id"
            attribute.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextBox(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object,System.String)">
            <summary>
            Returns an &lt;input&gt; element of type "text" for the specified <paramref name="expression"/>. Adds a
            "value" attribute to the element containing the first non-<c>null</c> value found in:
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/> entry with full name,
            the <paramref name="value"/> parameter,
            the <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewData"/> entry with full name, or
            the <paramref name="expression"/> evaluated against <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/>.
            See <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Name(System.String)"/> for more information about a "full name".
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="expression">Expression name, relative to the current model.</param>
            <param name="value">If non-<c>null</c>, value to include in the element.</param>
            <param name="format">
            The format string (see <see href="https://msdn.microsoft.com/en-us/library/txafckwd.aspx"/>) used to format the "value"
            attribute unless that came from model binding.
            </param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;input&gt; element.</returns>
            <remarks>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix"/> and <paramref name="expression"/> to set
            &lt;input&gt; element's "name" attribute. Sanitizes <paramref name="expression"/> to set element's "id"
            attribute.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextBox(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object,System.Object)">
            <summary>
            Returns an &lt;input&gt; element of type "text" for the specified <paramref name="expression"/>. Adds a
            "value" attribute to the element containing the first non-<c>null</c> value found in:
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/> entry with full name,
            the <paramref name="value"/> parameter,
            the <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewData"/> entry with full name,
            the <paramref name="expression"/> evaluated against <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/>, or
            the <paramref name="htmlAttributes"/> dictionary entry with key "value".
            See <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Name(System.String)"/> for more information about a "full name".
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="expression">Expression name, relative to the current model.</param>
            <param name="value">If non-<c>null</c>, value to include in the element.</param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML
            attributes.
            </param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;input&gt; element.</returns>
            <remarks>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix"/> and <paramref name="expression"/> to set
            &lt;input&gt; element's "name" attribute. Sanitizes <paramref name="expression"/> to set element's "id"
            attribute.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextBoxFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Returns an &lt;input&gt; element of type "text" for the specified <paramref name="expression"/>. Adds a
            "value" attribute to the element containing the first non-<c>null</c> value found in:
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/> entry with full name, or
            the <paramref name="expression"/> evaluated against <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/>.
            See <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1.NameFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})"/> for more information about a "full name".
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1"/> instance this method extends.</param>
            <param name="expression">An expression to be evaluated against the current model.</param>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TResult">The type of the <paramref name="expression"/> result.</typeparam>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;input&gt; element.</returns>
            <remarks>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix"/> and the string representation of the
            <paramref name="expression"/> to set &lt;input&gt; element's "name" attribute. Sanitizes the string
            representation of the <paramref name="expression"/> to set element's "id" attribute.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextBoxFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)">
            <summary>
            Returns an &lt;input&gt; element of type "text" for the specified <paramref name="expression"/>. Adds a
            "value" attribute to the element containing the first non-<c>null</c> value found in:
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/> entry with full name, or
            the <paramref name="expression"/> evaluated against <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/>.
            See <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1.NameFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})"/> for more information about a "full name".
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1"/> instance this method extends.</param>
            <param name="expression">An expression to be evaluated against the current model.</param>
            <param name="format">
            The format string (see <see href="https://msdn.microsoft.com/en-us/library/txafckwd.aspx"/>) used to format the
            <paramref name="expression"/> value when using that in the "value" attribute.
            </param>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TResult">The type of the <paramref name="expression"/> result.</typeparam>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;input&gt; element.</returns>
            <remarks>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix"/> and the string representation of the
            <paramref name="expression"/> to set &lt;input&gt; element's "name" attribute. Sanitizes the string
            representation of the <paramref name="expression"/> to set element's "id" attribute.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextBoxFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
            <summary>
            Returns an &lt;input&gt; element of type "text" for the specified <paramref name="expression"/>. Adds a
            "value" attribute to the element containing the first non-<c>null</c> value found in:
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/> entry with full name,
            the <paramref name="expression"/> evaluated against <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/>, or
            the <paramref name="htmlAttributes"/> dictionary entry with key "value".
            See <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1.NameFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})"/> for more information about a "full name".
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1"/> instance this method extends.</param>
            <param name="expression">An expression to be evaluated against the current model.</param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML
            attributes.
            </param>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TResult">The type of the <paramref name="expression"/> result.</typeparam>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;input&gt; element.</returns>
            <remarks>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix"/> and the string representation of the
            <paramref name="expression"/> to set &lt;input&gt; element's "name" attribute. Sanitizes the string
            representation of the <paramref name="expression"/> to set element's "id" attribute.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextArea(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)">
            <summary>
            Returns a &lt;textarea&gt; element for the specified <paramref name="expression"/>. Adds content to the
            element body based on the first non-<c>null</c> value found in:
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/> entry with full name,
            the <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewData"/> entry with full name, or
            the <paramref name="expression"/> evaluated against <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/>.
            See <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Name(System.String)"/> for more information about a "full name".
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="expression">Expression name, relative to the current model.</param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;textarea&gt; element.</returns>
            <remarks>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix"/> and <paramref name="expression"/> to set
            &lt;textarea&gt; element's "name" attribute. Sanitizes <paramref name="expression"/> to set element's "id"
            attribute.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextArea(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object)">
            <summary>
            Returns a &lt;textarea&gt; element for the specified <paramref name="expression"/>. Adds content to the
            element body based on the first non-<c>null</c> value found in:
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/> entry with full name,
            the <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewData"/> entry with full name, or
            the <paramref name="expression"/> evaluated against <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/>.
            See <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Name(System.String)"/> for more information about a "full name".
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="expression">Expression name, relative to the current model.</param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML
            attributes.
            </param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;textarea&gt; element.</returns>
            <remarks>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix"/> and <paramref name="expression"/> to set
            &lt;textarea&gt; element's "name" attribute. Sanitizes <paramref name="expression"/> to set element's "id"
            attribute.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextArea(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String)">
            <summary>
            Returns a &lt;textarea&gt; element for the specified <paramref name="expression"/>. Adds content to the
            element body based on the first non-<c>null</c> value found in:
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/> entry with full name,
            the <paramref name="value"/> parameter,
            the <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewData"/> entry with full name, or
            the <paramref name="expression"/> evaluated against <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/>.
            See <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Name(System.String)"/> for more information about a "full name".
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="expression">Expression name, relative to the current model.</param>
            <param name="value">If non-<c>null</c>, value to include in the element.</param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;textarea&gt; element.</returns>
            <remarks>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix"/> and <paramref name="expression"/> to set
            &lt;textarea&gt; element's "name" attribute. Sanitizes <paramref name="expression"/> to set element's "id"
            attribute.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextArea(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String,System.Object)">
            <summary>
            Returns a &lt;textarea&gt; element for the specified <paramref name="expression"/>. Adds content to the
            element body based on the first non-<c>null</c> value found in:
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/> entry with full name,
            the <paramref name="value"/> parameter,
            the <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewData"/> entry with full name, or
            the <paramref name="expression"/> evaluated against <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/>.
            See <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Name(System.String)"/> for more information about a "full name".
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="expression">Expression name, relative to the current model.</param>
            <param name="value">If non-<c>null</c>, value to include in the element.</param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML
            attributes.
            </param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;textarea&gt; element.</returns>
            <remarks>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix"/> and <paramref name="expression"/> to set
            &lt;textarea&gt; element's "name" attribute. Sanitizes <paramref name="expression"/> to set element's "id"
            attribute.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextAreaFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Returns a &lt;textarea&gt; element for the specified <paramref name="expression"/>. Adds content to the
            element body based on the first non-<c>null</c> value found in:
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/> entry with full name, or
            the <paramref name="expression"/> evaluated against <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/>.
            See <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1.NameFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})"/> for more information about a "full name".
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1"/> instance this method extends.</param>
            <param name="expression">An expression to be evaluated against the current model.</param>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TResult">The type of the <paramref name="expression"/> result.</typeparam>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;textarea&gt; element.</returns>
            <remarks>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix"/> and the string representation of the
            <paramref name="expression"/> to set &lt;textarea&gt; element's "name" attribute. Sanitizes the string
            representation of the <paramref name="expression"/> to set element's "id" attribute.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperInputExtensions.TextAreaFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
            <summary>
            Returns a &lt;textarea&gt; element for the specified <paramref name="expression"/>. Adds content to the
            element body based on the first non-<c>null</c> value found in:
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/> entry with full name, or
            the <paramref name="expression"/> evaluated against <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/>.
            See <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1.NameFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})"/> for more information about a "full name".
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1"/> instance this method extends.</param>
            <param name="expression">An expression to be evaluated against the current model.</param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML
            attributes.
            </param>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TResult">The type of the <paramref name="expression"/> result.</typeparam>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;textarea&gt; element.</returns>
            <remarks>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix"/> and the string representation of the
            <paramref name="expression"/> to set &lt;textarea&gt; element's "name" attribute. Sanitizes the string
            representation of the <paramref name="expression"/> to set element's "id" attribute.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperLabelExtensions">
            <summary>
            Label-related extensions for <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> and <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperLabelExtensions.Label(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)">
            <summary>
            Returns a &lt;label&gt; element for the specified <paramref name="expression"/>.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="expression">Expression name, relative to the current model.</param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;label&gt; element.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperLabelExtensions.Label(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String)">
            <summary>
            Returns a &lt;label&gt; element for the specified <paramref name="expression"/>.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="expression">Expression name, relative to the current model.</param>
            <param name="labelText">The inner text of the element.</param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;label&gt; element.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperLabelExtensions.LabelFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Returns a &lt;label&gt; element for the specified <paramref name="expression"/>.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1"/> instance this method extends.</param>
            <param name="expression">An expression to be evaluated against the current model.</param>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TResult">The type of the <paramref name="expression"/> result.</typeparam>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;label&gt; element.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperLabelExtensions.LabelFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)">
            <summary>
            Returns a &lt;label&gt; element for the specified <paramref name="expression"/>.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1"/> instance this method extends.</param>
            <param name="expression">An expression to be evaluated against the current model.</param>
            <param name="labelText">The inner text of the element.</param>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TResult">The type of the <paramref name="expression"/> result.</typeparam>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;label&gt; element.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperLabelExtensions.LabelFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
            <summary>
            Returns a &lt;label&gt; element for the specified <paramref name="expression"/>.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1"/> instance this method extends.</param>
            <param name="expression">An expression to be evaluated against the current model.</param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML
            attributes.
            </param>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TResult">The type of the <paramref name="expression"/> result.</typeparam>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;label&gt; element.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperLabelExtensions.LabelForModel(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
            <summary>
            Returns a &lt;label&gt; element for the current model.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;label&gt; element.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperLabelExtensions.LabelForModel(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)">
            <summary>
            Returns a &lt;label&gt; element for the current model.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="labelText">The inner text of the element.</param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;label&gt; element.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperLabelExtensions.LabelForModel(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.Object)">
            <summary>
            Returns a &lt;label&gt; element for the current model.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML
            attributes.
            </param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;label&gt; element.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperLabelExtensions.LabelForModel(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object)">
            <summary>
            Returns a &lt;label&gt; element for the current model.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="labelText">The inner text of the element.</param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML
            attributes.
            </param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;label&gt; element.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperLinkExtensions">
            <summary>
            Link-related extensions for <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperLinkExtensions.ActionLink(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String)">
            <summary>
            Returns an anchor (&lt;a&gt;) element that contains a URL path to the specified action.
            </summary>
            <param name="helper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="linkText">The inner text of the anchor element. Must not be <c>null</c>.</param>
            <param name="actionName">The name of the action.</param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the anchor element.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperLinkExtensions.ActionLink(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String,System.Object)">
            <summary>
            Returns an anchor (&lt;a&gt;) element that contains a URL path to the specified action.
            </summary>
            <param name="helper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="linkText">The inner text of the anchor element. Must not be <c>null</c>.</param>
            <param name="actionName">The name of the action.</param>
            <param name="routeValues">
            An <see cref="T:System.Object"/> that contains the parameters for a route. The parameters are retrieved through
            reflection by examining the properties of the <see cref="T:System.Object"/>. This <see cref="T:System.Object"/> is typically
            created using <see cref="T:System.Object"/> initializer syntax. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the route
            parameters.
            </param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the anchor element.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperLinkExtensions.ActionLink(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String,System.Object,System.Object)">
            <summary>
            Returns an anchor (&lt;a&gt;) element that contains a URL path to the specified action.
            </summary>
            <param name="helper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="linkText">The inner text of the anchor element. Must not be <c>null</c>.</param>
            <param name="actionName">The name of the action.</param>
            <param name="routeValues">
            An <see cref="T:System.Object"/> that contains the parameters for a route. The parameters are retrieved through
            reflection by examining the properties of the <see cref="T:System.Object"/>. This <see cref="T:System.Object"/> is typically
            created using <see cref="T:System.Object"/> initializer syntax. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the route
            parameters.
            </param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML
            attributes.
            </param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the anchor element.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperLinkExtensions.ActionLink(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String,System.String)">
            <summary>
            Returns an anchor (&lt;a&gt;) element that contains a URL path to the specified action.
            </summary>
            <param name="helper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="linkText">The inner text of the anchor element. Must not be <c>null</c>.</param>
            <param name="actionName">The name of the action.</param>
            <param name="controllerName">The name of the controller.</param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the anchor element.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperLinkExtensions.ActionLink(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String,System.String,System.Object)">
            <summary>
            Returns an anchor (&lt;a&gt;) element that contains a URL path to the specified action.
            </summary>
            <param name="helper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="linkText">The inner text of the anchor element. Must not be <c>null</c>.</param>
            <param name="actionName">The name of the action.</param>
            <param name="controllerName">The name of the controller.</param>
            <param name="routeValues">
            An <see cref="T:System.Object"/> that contains the parameters for a route. The parameters are retrieved through
            reflection by examining the properties of the <see cref="T:System.Object"/>. This <see cref="T:System.Object"/> is typically
            created using <see cref="T:System.Object"/> initializer syntax. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the route
            parameters.
            </param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the anchor element.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperLinkExtensions.ActionLink(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String,System.String,System.Object,System.Object)">
            <summary>
            Returns an anchor (&lt;a&gt;) element that contains a URL path to the specified action.
            </summary>
            <param name="helper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="linkText">The inner text of the anchor element. Must not be <c>null</c>.</param>
            <param name="actionName">The name of the action.</param>
            <param name="controllerName">The name of the controller.</param>
            <param name="routeValues">
            An <see cref="T:System.Object"/> that contains the parameters for a route. The parameters are retrieved through
            reflection by examining the properties of the <see cref="T:System.Object"/>. This <see cref="T:System.Object"/> is typically
            created using <see cref="T:System.Object"/> initializer syntax. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the route
            parameters.
            </param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML
            attributes.
            </param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the anchor element.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperLinkExtensions.RouteLink(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object)">
            <summary>
            Returns an anchor (&lt;a&gt;) element that contains a URL path to the specified route.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="linkText">The inner text of the anchor element. Must not be <c>null</c>.</param>
            <param name="routeValues">
            An <see cref="T:System.Object"/> that contains the parameters for a route. The parameters are retrieved through
            reflection by examining the properties of the <see cref="T:System.Object"/>. This <see cref="T:System.Object"/> is typically
            created using <see cref="T:System.Object"/> initializer syntax. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the route
            parameters.
            </param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the anchor element.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperLinkExtensions.RouteLink(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String)">
            <summary>
            Returns an anchor (&lt;a&gt;) element that contains a URL path to the specified route.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="linkText">The inner text of the anchor element. Must not be <c>null</c>.</param>
            <param name="routeName">The name of the route.</param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the anchor element.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperLinkExtensions.RouteLink(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String,System.Object)">
            <summary>
            Returns an anchor (&lt;a&gt;) element that contains a URL path to the specified route.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="linkText">The inner text of the anchor element. Must not be <c>null</c>.</param>
            <param name="routeName">The name of the route.</param>
            <param name="routeValues">
            An <see cref="T:System.Object"/> that contains the parameters for a route. The parameters are retrieved through
            reflection by examining the properties of the <see cref="T:System.Object"/>. This <see cref="T:System.Object"/> is typically
            created using <see cref="T:System.Object"/> initializer syntax. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the route
            parameters.
            </param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the anchor element.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperLinkExtensions.RouteLink(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object,System.Object)">
            <summary>
            Returns an anchor (&lt;a&gt;) element that contains a URL path to the specified route.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="linkText">The inner text of the anchor element. Must not be <c>null</c>.</param>
            <param name="routeValues">
            An <see cref="T:System.Object"/> that contains the parameters for a route. The parameters are retrieved through
            reflection by examining the properties of the <see cref="T:System.Object"/>. This <see cref="T:System.Object"/> is typically
            created using <see cref="T:System.Object"/> initializer syntax. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the route
            parameters.
            </param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML
            attributes.
            </param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the anchor element.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperLinkExtensions.RouteLink(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String,System.Object,System.Object)">
            <summary>
            Returns an anchor (&lt;a&gt;) element that contains a URL path to the specified route.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="linkText">The inner text of the anchor element. Must not be <c>null</c>.</param>
            <param name="routeName">The name of the route.</param>
            <param name="routeValues">
            An <see cref="T:System.Object"/> that contains the parameters for a route. The parameters are retrieved through
            reflection by examining the properties of the <see cref="T:System.Object"/>. This <see cref="T:System.Object"/> is typically
            created using <see cref="T:System.Object"/> initializer syntax. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the route
            parameters.
            </param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML
            attributes.
            </param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the anchor element.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperNameExtensions">
            <summary>
            Name-related extensions for <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperNameExtensions.NameForModel(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
            <summary>
            Returns the full HTML element name for the current model. Uses
            <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix"/> (if non-empty) to reflect relationship between
            current <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/> and the top-level view's model.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <returns>A <see cref="T:System.String"/> containing the element name.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperNameExtensions.IdForModel(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
            <summary>
            Returns the HTML element Id for the current model.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <returns>A <see cref="T:System.String"/> containing the element Id.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperPartialExtensions">
            <summary>
            PartialView-related extensions for <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperPartialExtensions.PartialAsync(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)">
            <summary>
            Returns HTML markup for the specified partial view.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="partialViewName">
            The name or path of the partial view used to create the HTML markup. Must not be <c>null</c>.
            </param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that on completion returns a new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> instance containing
            the created HTML.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperPartialExtensions.PartialAsync(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary)">
            <summary>
            Returns HTML markup for the specified partial view.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="partialViewName">
            The name or path of the partial view used to create the HTML markup. Must not be <c>null</c>.
            </param>
            <param name="viewData">A <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary"/> to pass into the partial view.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that on completion returns a new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> instance containing
            the created HTML.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperPartialExtensions.PartialAsync(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object)">
            <summary>
            Returns HTML markup for the specified partial view.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="partialViewName">
            The name or path of the partial view used to create the HTML markup. Must not be <c>null</c>.
            </param>
            <param name="model">A model to pass into the partial view.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that on completion returns a new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> instance containing
            the created HTML.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperPartialExtensions.Partial(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)">
            <summary>
            Returns HTML markup for the specified partial view.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="partialViewName">
            The name or path of the partial view used to create the HTML markup. Must not be <c>null</c>.
            </param>
            <returns>
            Returns a new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> instance containing the created HTML.
            </returns>
            <remarks>
            This method synchronously calls and blocks on
            <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.PartialAsync(System.String,System.Object,Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary)"/>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperPartialExtensions.Partial(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary)">
            <summary>
            Returns HTML markup for the specified partial view.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="partialViewName">
            The name or path of the partial view used to create the HTML markup. Must not be <c>null</c>.
            </param>
            <param name="viewData">A <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary"/> to pass into the partial view.</param>
            <returns>
            Returns a new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> instance containing the created HTML.
            </returns>
            <remarks>
            This method synchronously calls and blocks on
            <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.PartialAsync(System.String,System.Object,Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary)"/>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperPartialExtensions.Partial(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object)">
            <summary>
            Returns HTML markup for the specified partial view.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="partialViewName">
            The name or path of the partial view used to create the HTML markup. Must not be <c>null</c>.
            </param>
            <param name="model">A model to pass into the partial view.</param>
            <returns>
            Returns a new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> instance containing the created HTML.
            </returns>
            <remarks>
            This method synchronously calls and blocks on
            <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.PartialAsync(System.String,System.Object,Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary)"/>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperPartialExtensions.Partial(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object,Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary)">
            <summary>
            Returns HTML markup for the specified partial view.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="partialViewName">
            The name or path of the partial view used to create the HTML markup. Must not be <c>null</c>.
            </param>
            <param name="model">A model to pass into the partial view.</param>
            <param name="viewData">A <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary"/> to pass into the partial view.</param>
            <returns>
            Returns a new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> instance containing the created HTML.
            </returns>
            <remarks>
            This method synchronously calls and blocks on
            <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.PartialAsync(System.String,System.Object,Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary)"/>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperPartialExtensions.RenderPartial(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)">
            <summary>
            Renders HTML markup for the specified partial view.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="partialViewName">
            The name or path of the partial view used to create the HTML markup. Must not be <c>null</c>.
            </param>
            <remarks>
            In this context, "renders" means the method writes its output using <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.Writer"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperPartialExtensions.RenderPartial(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary)">
            <summary>
            Renders HTML markup for the specified partial view.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="partialViewName">
            The name or path of the partial view used to create the HTML markup. Must not be <c>null</c>.
            </param>
            <param name="viewData">A <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary"/> to pass into the partial view.</param>
            <remarks>
            In this context, "renders" means the method writes its output using <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.Writer"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperPartialExtensions.RenderPartial(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object)">
            <summary>
            Renders HTML markup for the specified partial view.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="partialViewName">
            The name or path of the partial view used to create the HTML markup. Must not be <c>null</c>.
            </param>
            <param name="model">A model to pass into the partial view.</param>
            <remarks>
            In this context, "renders" means the method writes its output using <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.Writer"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperPartialExtensions.RenderPartial(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object,Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary)">
            <summary>
            Renders HTML markup for the specified partial view.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="partialViewName">
            The name or path of the partial view used to create the HTML markup. Must not be <c>null</c>.
            </param>
            <param name="model">A model to pass into the partial view.</param>
            <param name="viewData">A <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary"/> to pass into the partial view.</param>
            <remarks>
            In this context, "renders" means the method writes its output using <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.Writer"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperPartialExtensions.RenderPartialAsync(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)">
            <summary>
            Renders HTML markup for the specified partial view.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="partialViewName">
            The name or path of the partial view used to create the HTML markup. Must not be <c>null</c>.
            </param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that renders the created HTML when it executes.</returns>
            <remarks>
            In this context, "renders" means the method writes its output using <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.Writer"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperPartialExtensions.RenderPartialAsync(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary)">
            <summary>
            Renders HTML markup for the specified partial view.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="partialViewName">
            The name or path of the partial view used to create the HTML markup. Must not be <c>null</c>.
            </param>
            <param name="viewData">A <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary"/> to pass into the partial view.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that renders the created HTML when it executes.</returns>
            <remarks>
            In this context, "renders" means the method writes its output using <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.Writer"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperPartialExtensions.RenderPartialAsync(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object)">
            <summary>
            Renders HTML markup for the specified partial view.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="partialViewName">
            The name or path of the partial view used to create the HTML markup. Must not be <c>null</c>.
            </param>
            <param name="model">A model to pass into the partial view.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that renders the created HTML when it executes.</returns>
            <remarks>
            In this context, "renders" means the method writes its output using <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.Writer"/>.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions">
            <summary>
            Select-related extensions for <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> and <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions.DropDownList(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)">
            <summary>
            Returns a single-selection HTML &lt;select&gt; element for the <paramref name="expression"/>. Adds
            &lt;option&gt; elements based on the <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewData"/> entry with full name. Adds a
            "selected" attribute to an &lt;option&gt; if its <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Value"/> (if non-<c>null</c>) or
            <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Text"/> matches the first non-<c>null</c> value found in:
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/> entry with full name, or
            the <paramref name="expression"/> evaluated against <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/>.
            See <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Name(System.String)"/> for more information about a "full name".
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="expression">Expression name, relative to the current model.</param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;select&gt; element.</returns>
            <remarks>
            <para>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix"/> and <paramref name="expression"/> to set
            &lt;select&gt; element's "name" attribute. Sanitizes <paramref name="expression"/> to set element's "id"
            attribute.
            </para>
            <para>
            The <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewData"/> entry with full name must be a non-<c>null</c> collection of
            <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/> objects.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions.DropDownList(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String)">
            <summary>
            Returns a single-selection HTML &lt;select&gt; element for the <paramref name="expression"/>. Adds
            &lt;option&gt; elements based on <paramref name="optionLabel"/> and the <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewData"/>
            entry with full name. Adds a "selected" attribute to an &lt;option&gt; if its
            <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Value"/> (if non-<c>null</c>) or <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Text"/> matches the
            first non-<c>null</c> value found in:
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/> entry with full name, or
            the <paramref name="expression"/> evaluated against <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/>.
            See <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Name(System.String)"/> for more information about a "full name".
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="expression">Expression name, relative to the current model.</param>
            <param name="optionLabel">
            The text for a default empty item. Does not include such an item if argument is <c>null</c>.
            </param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;select&gt; element.</returns>
            <remarks>
            <para>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix"/> and <paramref name="expression"/> to set
            &lt;select&gt; element's "name" attribute. Sanitizes <paramref name="expression"/> to set element's "id"
            attribute.
            </para>
            <para>
            The <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewData"/> entry with full name must be a non-<c>null</c> collection of
            <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/> objects.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions.DropDownList(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem})">
            <summary>
            Returns a single-selection HTML &lt;select&gt; element for the <paramref name="expression"/>. Adds
            &lt;option&gt; elements based on <paramref name="selectList"/>. Adds a "selected" attribute to an
            &lt;option&gt; if its <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Value"/> (if non-<c>null</c>) or
            <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Text"/> matches the first non-<c>null</c> value found in:
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/> entry with full name,
            the <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewData"/> entry with full name (unless used instead of
            <paramref name="selectList"/>), or
            the <paramref name="expression"/> evaluated against <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/>.
            See <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Name(System.String)"/> for more information about a "full name".
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="expression">Expression name, relative to the current model.</param>
            <param name="selectList">
            A collection of <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/> objects used to populate the &lt;select&gt; element with
            &lt;optgroup&gt; and &lt;option&gt; elements. If <c>null</c>, uses the <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewData"/>
            entry with full name and that entry must be a collection of <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/> objects.
            </param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;select&gt; element.</returns>
            <remarks>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix"/> and <paramref name="expression"/> to set
            &lt;select&gt; element's "name" attribute. Sanitizes <paramref name="expression"/> to set element's "id"
            attribute.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions.DropDownList(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem},System.Object)">
            <summary>
            Returns a single-selection HTML &lt;select&gt; element for the <paramref name="expression"/>. Adds
            &lt;option&gt; elements based on <paramref name="selectList"/>. Adds a "selected" attribute to an
            &lt;option&gt; if its <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Value"/> (if non-<c>null</c>) or
            <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Text"/> matches the first non-<c>null</c> value found in:
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/> entry with full name,
            the <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewData"/> entry with full name (unless used instead of
            <paramref name="selectList"/>), or
            the <paramref name="expression"/> evaluated against <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/>.
            See <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Name(System.String)"/> for more information about a "full name".
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="expression">Expression name, relative to the current model.</param>
            <param name="selectList">
            A collection of <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/> objects used to populate the &lt;select&gt; element with
            &lt;optgroup&gt; and &lt;option&gt; elements. If <c>null</c>, uses the <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewData"/>
            entry with full name and that entry must be a collection of <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/> objects.
            </param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the &lt;select&gt; element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;select&gt; element.</returns>
            <remarks>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix"/> and <paramref name="expression"/> to set
            &lt;select&gt; element's "name" attribute. Sanitizes <paramref name="expression"/> to set element's "id"
            attribute.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions.DropDownList(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem},System.String)">
            <summary>
            Returns a single-selection HTML &lt;select&gt; element for the <paramref name="expression"/>. Adds
            &lt;option&gt; elements based on <paramref name="optionLabel"/> and <paramref name="selectList"/>. Adds a
            "selected" attribute to an &lt;option&gt; if its <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Value"/> (if non-<c>null</c>) or
            <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Text"/> matches the first non-<c>null</c> value found in:
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/> entry with full name,
            the <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewData"/> entry with full name (unless used instead of
            <paramref name="selectList"/>), or
            the <paramref name="expression"/> evaluated against <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/>.
            See <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Name(System.String)"/> for more information about a "full name".
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="expression">Expression name, relative to the current model.</param>
            <param name="selectList">
            A collection of <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/> objects used to populate the &lt;select&gt; element with
            &lt;optgroup&gt; and &lt;option&gt; elements. If <c>null</c>, uses the <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewData"/>
            entry with full name and that entry must be a collection of <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/> objects.
            </param>
            <param name="optionLabel">
            The text for a default empty item. Does not include such an item if argument is <c>null</c>.
            </param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;select&gt; element.</returns>
            <remarks>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix"/> and <paramref name="expression"/> to set
            &lt;select&gt; element's "name" attribute. Sanitizes <paramref name="expression"/> to set element's "id"
            attribute.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions.DropDownListFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem})">
            <summary>
            Returns a single-selection HTML &lt;select&gt; element for the <paramref name="expression"/>. Adds
            &lt;option&gt; elements based on <paramref name="selectList"/>. Adds a "selected" attribute to an
            &lt;option&gt; if its <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Value"/> (if non-<c>null</c>) or
            <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Text"/> matches the first non-<c>null</c> value found in:
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/> entry with full name, or
            the <paramref name="expression"/> evaluated against <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/>.
            See <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1.NameFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})"/> for more information about a "full name".
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1"/> instance this method extends.</param>
            <param name="expression">An expression to be evaluated against the current model.</param>
            <param name="selectList">
            A collection of <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/> objects used to populate the &lt;select&gt; element with
            &lt;optgroup&gt; and &lt;option&gt; elements. If <c>null</c>, uses the <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewData"/>
            entry with full name and that entry must be a collection of <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/> objects.
            </param>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TResult">The type of the <paramref name="expression"/> result.</typeparam>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;select&gt; element.</returns>
            <remarks>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix"/> and the string representation of the
            <paramref name="expression"/> to set &lt;select&gt; element's "name" attribute. Sanitizes the string
            representation of the <paramref name="expression"/> to set element's "id" attribute.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions.DropDownListFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem},System.Object)">
            <summary>
            Returns a single-selection HTML &lt;select&gt; element for the <paramref name="expression"/>. Adds
            &lt;option&gt; elements based on <paramref name="selectList"/>. Adds a "selected" attribute to an
            &lt;option&gt; if its <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Value"/> (if non-<c>null</c>) or
            <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Text"/> matches the first non-<c>null</c> value found in:
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/> entry with full name, or
            the <paramref name="expression"/> evaluated against <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/>.
            See <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1.NameFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})"/> for more information about a "full name".
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1"/> instance this method extends.</param>
            <param name="expression">An expression to be evaluated against the current model.</param>
            <param name="selectList">
            A collection of <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/> objects used to populate the &lt;select&gt; element with
            &lt;optgroup&gt; and &lt;option&gt; elements. If <c>null</c>, uses the <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewData"/>
            entry with full name and that entry must be a collection of <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/> objects.
            </param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the &lt;select&gt; element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TResult">The type of the <paramref name="expression"/> result.</typeparam>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;select&gt; element.</returns>
            <remarks>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix"/> and the string representation of the
            <paramref name="expression"/> to set &lt;select&gt; element's "name" attribute. Sanitizes the string
            representation of the <paramref name="expression"/> to set element's "id" attribute.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions.DropDownListFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem},System.String)">
            <summary>
            Returns a single-selection HTML &lt;select&gt; element for the <paramref name="expression"/>. Adds
            &lt;option&gt; elements based on <paramref name="optionLabel"/> and <paramref name="selectList"/>. Adds a
            "selected" attribute to an &lt;option&gt; if its <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Value"/> (if non-<c>null</c>) or
            <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Text"/> matches the first non-<c>null</c> value found in:
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/> entry with full name, or
            the <paramref name="expression"/> evaluated against <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/>.
            See <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1.NameFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})"/> for more information about a "full name".
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1"/> instance this method extends.</param>
            <param name="expression">An expression to be evaluated against the current model.</param>
            <param name="selectList">
            A collection of <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/> objects used to populate the &lt;select&gt; element with
            &lt;optgroup&gt; and &lt;option&gt; elements. If <c>null</c>, uses the <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewData"/>
            entry with full name and that entry must be a collection of <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/> objects.
            </param>
            <param name="optionLabel">
            The text for a default empty item. Does not include such an item if argument is <c>null</c>.
            </param>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TResult">The type of the <paramref name="expression"/> result.</typeparam>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;select&gt; element.</returns>
            <remarks>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix"/> and the string representation of the
            <paramref name="expression"/> to set &lt;select&gt; element's "name" attribute. Sanitizes the string
            representation of the <paramref name="expression"/> to set element's "id" attribute.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions.ListBox(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)">
            <summary>
            Returns a multi-selection &lt;select&gt; element for the <paramref name="expression"/>. Adds
            &lt;option&gt; elements based on the <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewData"/> entry with full name. Adds a
            "selected" attribute to an &lt;option&gt; if its <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Value"/> (if non-<c>null</c>) or
            <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Text"/> matches the first non-<c>null</c> value found in:
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/> entry with full name, or
            the <paramref name="expression"/> evaluated against <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/>.
            See <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Name(System.String)"/> for more information about a "full name".
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="expression">Expression name, relative to the current model.</param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;select&gt; element.</returns>
            <remarks>
            <para>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix"/> and <paramref name="expression"/> to set
            &lt;select&gt; element's "name" attribute. Sanitizes <paramref name="expression"/> to set element's "id"
            attribute.
            </para>
            <para>
            The <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewData"/> entry with full name must be a non-<c>null</c> collection of
            <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/> objects.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions.ListBox(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem})">
            <summary>
            Returns a multi-selection &lt;select&gt; element for the <paramref name="expression"/>. Adds
            &lt;option&gt; elements based on <paramref name="selectList"/>. Adds a "selected" attribute to an
            &lt;option&gt; if its <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Value"/> (if non-<c>null</c>) or
            <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Text"/> matches the first non-<c>null</c> value found in:
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/> entry with full name,
            the <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewData"/> entry with full name (unless used instead of
            <paramref name="selectList"/>), or
            the <paramref name="expression"/> evaluated against <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/>.
            See <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Name(System.String)"/> for more information about a "full name".
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="expression">Expression name, relative to the current model.</param>
            <param name="selectList">
            A collection of <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/> objects used to populate the &lt;select&gt; element with
            &lt;optgroup&gt; and &lt;option&gt; elements. If <c>null</c>, uses the <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewData"/>
            entry with full name and that entry must be a collection of <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/> objects.
            </param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;select&gt; element.</returns>
            <remarks>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix"/> and <paramref name="expression"/> to set
            &lt;select&gt; element's "name" attribute. Sanitizes <paramref name="expression"/> to set element's "id"
            attribute.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperSelectExtensions.ListBoxFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem})">
            <summary>
            Returns a multi-selection &lt;select&gt; element for the  <paramref name="expression"/>. Adds
            &lt;option&gt; elements based on <paramref name="selectList"/>. Adds a "selected" attribute to an
            &lt;option&gt; if its <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Value"/> (if non-<c>null</c>) or
            <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Text"/> matches the first non-<c>null</c> value found in:
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/> entry with full name, or
            the <paramref name="expression"/> evaluated against <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/>.
            See <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Name(System.String)"/> for more information about a "full name".
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1"/> instance this method extends.</param>
            <param name="expression">An expression to be evaluated against the current model.</param>
            <param name="selectList">
            A collection of <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/> objects used to populate the &lt;select&gt; element with
            &lt;optgroup&gt; and &lt;option&gt; elements. If <c>null</c>, uses the <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewData"/>
            entry with full name and that entry must be a collection of <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/> objects.
            </param>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TResult">The type of the <paramref name="expression"/> result.</typeparam>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;select&gt; element.</returns>
            <remarks>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix"/> and the string representation of the
            <paramref name="expression"/> to set &lt;select&gt; element's "name" attribute. Sanitizes the string
            representation of the <paramref name="expression"/> to set element's "id" attribute.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions">
            <summary>
            Validation-related extensions for <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> and <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessage(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)">
            <summary>
            Returns the validation message if an error exists in the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/>
            object for the specified <paramref name="expression"/>.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="expression">Expression name, relative to the current model.</param>
            <returns>
            A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing a <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.ValidationMessageElement"/> element.
            An empty <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> if the <paramref name="expression"/> is valid and client-side
            validation is disabled.
            </returns>
            <remarks>
            Method extracts an error string from the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/> object. Message
            will always be visible but client-side validation may update the associated CSS class.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessage(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String)">
            <summary>
            Returns the validation message if an error exists in the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/>
            object for the specified <paramref name="expression"/>.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="expression">Expression name, relative to the current model.</param>
            <param name="message">
            The message to be displayed. If <c>null</c> or empty, method extracts an error string from the
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/> object. Message will always be visible but client-side
            validation may update the associated CSS class.
            </param>
            <returns>
            A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing a <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.ValidationMessageElement"/> element.
            An empty <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> if the <paramref name="expression"/> is valid and client-side
            validation is disabled.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessage(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object)">
            <summary>
            Returns the validation message if an error exists in the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/>
            object for the specified <paramref name="expression"/>.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="expression">Expression name, relative to the current model.</param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the
            (<see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.ValidationMessageElement"/>) element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML
            attributes.
            </param>
            <returns>
            A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing a <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.ValidationMessageElement"/> element.
            An empty <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> if the <paramref name="expression"/> is valid and client-side
            validation is disabled.
            </returns>
            <remarks>
            Method extracts an error string from the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/> object. Message
            will always be visible but client-side validation may update the associated CSS class.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessage(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String,System.String)">
            <summary>
            Returns the validation message if an error exists in the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/>
            object for the specified <paramref name="expression"/>.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="expression">Expression name, relative to the current model.</param>
            <param name="message">
            The message to be displayed. If <c>null</c> or empty, method extracts an error string from the
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/> object. Message will always be visible but client-side
            validation may update the associated CSS class.
            </param>
            <param name="tag">
            The tag to wrap the <paramref name="message"/> in the generated HTML. Its default value is
            <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.ValidationMessageElement"/>.
            </param>
            <returns>
            A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing a <paramref name="tag"/> element. An empty
            <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> if the <paramref name="expression"/> is valid and client-side validation is
            disabled.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessage(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String,System.Object)">
            <summary>
            Returns the validation message if an error exists in the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/>
            object for the specified <paramref name="expression"/>.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="expression">Expression name, relative to the current model.</param>
            <param name="message">
            The message to be displayed. If <c>null</c> or empty, method extracts an error string from the
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/> object. Message will always be visible but client-side
            validation may update the associated CSS class.
            </param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the
            (<see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.ValidationMessageElement"/>) element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML
            attributes.
            </param>
            <returns>
            A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing a <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.ValidationMessageElement"/> element.
            An empty <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> if the <paramref name="expression"/> is valid and client-side
            validation is disabled.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessageFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Returns the validation message if an error exists in the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/>
            object for the specified <paramref name="expression"/>.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="expression">An expression to be evaluated against the current model.</param>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TResult">The type of the <paramref name="expression"/> result.</typeparam>
            <returns>
            A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing a <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.ValidationMessageElement"/> element.
            An empty <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> if the <paramref name="expression"/> is valid and client-side
            validation is disabled.
            </returns>
            <remarks>
            Method extracts an error string from the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/> object. Message
            will always be visible but client-side validation may update the associated CSS class.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessageFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)">
            <summary>
            Returns the validation message if an error exists in the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/>
            object for the specified <paramref name="expression"/>.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="expression">An expression to be evaluated against the current model.</param>
            <param name="message">
            The message to be displayed. If <c>null</c> or empty, method extracts an error string from the
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/> object. Message will always be visible but client-side
            validation may update the associated CSS class.
            </param>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TResult">The type of the <paramref name="expression"/> result.</typeparam>
            <returns>
            A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing a <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.ValidationMessageElement"/> element.
            An empty <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> if the <paramref name="expression"/> is valid and client-side
            validation is disabled.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessageFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)">
            <summary>
            Returns the validation message if an error exists in the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/>
            object for the specified <paramref name="expression"/>.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="expression">An expression to be evaluated against the current model.</param>
            <param name="message">
            The message to be displayed. If <c>null</c> or empty, method extracts an error string from the
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/> object. Message will always be visible but client-side
            validation may update the associated CSS class.
            </param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the
            (<see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.ValidationMessageElement"/>) element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML
            attributes.
            </param>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TResult">The type of the <paramref name="expression"/> result.</typeparam>
            <returns>
            A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing a <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.ValidationMessageElement"/> element.
            An empty <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> if the <paramref name="expression"/> is valid and client-side
            validation is disabled.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationMessageFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.String)">
            <summary>
            Returns the validation message if an error exists in the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/>
            object for the specified <paramref name="expression"/>.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="expression">An expression to be evaluated against the current model.</param>
            <param name="message">
            The message to be displayed. If <c>null</c> or empty, method extracts an error string from the
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/> object. Message will always be visible but client-side
            validation may update the associated CSS class.
            </param>
            <param name="tag">
            The tag to wrap the <paramref name="message"/> in the generated HTML. Its default value is
            <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.ValidationMessageElement"/>.
            </param>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TResult">The type of the <paramref name="expression"/> result.</typeparam>
            <returns>
            A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the <paramref name="tag"/> element. An empty
            <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> if the <paramref name="expression"/> is valid and client-side validation is
            disabled.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationSummary(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
            <summary>
            Returns an unordered list (&lt;ul&gt; element) of validation messages that are in the
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/> object.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <returns>
            New <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing a &lt;div&gt; element wrapping the &lt;ul&gt; element.
            An empty <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> if the current model is valid and client-side validation is disabled.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationSummary(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.Boolean)">
            <summary>
            Returns an unordered list (&lt;ul&gt; element) of validation messages that are in the
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/> object.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="excludePropertyErrors">
            If <c>true</c>, display model-level errors only; otherwise display all errors.
            </param>
            <returns>
            New <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing a &lt;div&gt; element wrapping the &lt;ul&gt; element.
            An empty <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> if the current model is valid and client-side validation is disabled.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationSummary(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)">
            <summary>
            Returns an unordered list (&lt;ul&gt; element) of validation messages that are in the
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/> object.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="message">The message to display with the validation summary.</param>
            <returns>
            New <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing a &lt;div&gt; element wrapping the
            <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.ValidationSummaryMessageElement" /> element (which wraps the
            <paramref name="message"/>) and the &lt;ul&gt; element. An empty <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> if the current
            model is valid and client-side validation is disabled.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationSummary(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.String)">
            <summary>
            Returns an unordered list (&lt;ul&gt; element) of validation messages that are in the
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/> object.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="message">The message to display with the validation summary.</param>
            <param name="tag">
            The tag to wrap the <paramref name="message"/> in the generated HTML. Its default value is
            <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.ValidationSummaryMessageElement" />.
            </param>
            <returns>
            New <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing a &lt;div&gt; element wrapping the <paramref name="tag"/> element
            and the &lt;ul&gt; element. An empty <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> if the current model is valid and
            client-side validation is disabled.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationSummary(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.Boolean,System.String)">
            <summary>
            Returns an unordered list (&lt;ul&gt; element) of validation messages that are in the
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/> object.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="excludePropertyErrors">
            If <c>true</c>, display model-level errors only; otherwise display all errors.
            </param>
            <param name="message">The message to display with the validation summary.</param>
            <returns>
            New <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing a &lt;div&gt; element wrapping the
            <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.ValidationSummaryMessageElement" /> element (which, in turn, wraps the
            <paramref name="message"/>) and the &lt;ul&gt; element. An empty <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> if the current
            model is valid and client-side validation is disabled.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationSummary(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object)">
            <summary>
            Returns an unordered list (&lt;ul&gt; element) of validation messages that are in the
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/> object.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="message">The message to display with the validation summary.</param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the topmost (&lt;div&gt;) element.
            Alternatively, an <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing
            the HTML attributes.
            </param>
            <returns>
            New <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing a &lt;div&gt; element wrapping the
            <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.ValidationSummaryMessageElement" /> element (which wraps the
            <paramref name="message"/>) and the &lt;ul&gt; element. An empty <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> if the current
            model is valid and client-side validation is disabled.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationSummary(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String,System.Object,System.String)">
            <summary>
            Returns an unordered list (&lt;ul&gt; element) of validation messages that are in the
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/> object.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="message">The message to display with the validation summary.</param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the topmost (&lt;div&gt;) element.
            Alternatively, an <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing
            the HTML attributes.
            </param>
            <param name="tag">
            The tag to wrap the <paramref name="message"/> in the generated HTML. Its default value is
            <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.ValidationSummaryMessageElement" />.
            </param>
            <returns>
            New <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing a &lt;div&gt; element wrapping the <paramref name="tag"/> element
            and the &lt;ul&gt; element. An empty <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> if the current model is valid and
            client-side validation is disabled.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationSummary(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.Boolean,System.String,System.String)">
            <summary>
            Returns an unordered list (&lt;ul&gt; element) of validation messages that are in the
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/> object.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="excludePropertyErrors">
            If <c>true</c>, display model-level errors only; otherwise display all errors.
            </param>
            <param name="message">The message to display with the validation summary.</param>
            <param name="tag">
            The tag to wrap the <paramref name="message"/> in the generated HTML. Its default value is
            <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.ValidationSummaryMessageElement" />.
            </param>
            <returns>
            New <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing a &lt;div&gt; element wrapping the <paramref name="tag"/> element
            and the &lt;ul&gt; element. An empty <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> if the current model is valid and
            client-side validation is disabled.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValidationExtensions.ValidationSummary(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.Boolean,System.String,System.Object)">
            <summary>
            Returns an unordered list (&lt;ul&gt; element) of validation messages that are in the
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/> object.
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="excludePropertyErrors">
            If <c>true</c>, display model-level errors only; otherwise display all errors.
            </param>
            <param name="message">The message to display with the validation summary.</param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the topmost (&lt;div&gt;) element.
            Alternatively, an <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing
            the HTML attributes.
            </param>
            <returns>
            New <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing a &lt;div&gt; element wrapping the
            <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.ValidationSummaryMessageElement" /> element (which wraps the
            <paramref name="message"/>) and the &lt;ul&gt; element. An empty <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> if the current
            model is valid and client-side validation is disabled.
            </returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValueExtensions">
            <summary>
            Value-related extensions for <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> and <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValueExtensions.Value(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)">
            <summary>
            Returns the formatted value for the specified <paramref name="expression"/>. Specifically, returns the
            first non-<c>null</c> value found in:
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/> entry with full name,
            the <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewData"/> entry with full name, or
            the <paramref name="expression"/> evaluated against <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/>.
            See <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Name(System.String)"/> for more information about a "full name".
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="expression">Expression name, relative to the current model.</param>
            <returns>A <see cref="T:System.String"/> containing the formatted value.</returns>
            <remarks>
            Converts the expression result to a <see cref="T:System.String"/> directly.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValueExtensions.ValueFor``2(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Returns the formatted value for the specified <paramref name="expression"/>. Specifically, returns the
            first non-<c>null</c> value found in:
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/> entry with full name, or
            the <paramref name="expression"/> evaluated against <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/>.
            See <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1.NameFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})"/> for more information about a "full name".
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1"/> instance this method extends.</param>
            <param name="expression">An expression to be evaluated against the current model.</param>
            <typeparam name="TModel">The type of the model.</typeparam>
            <typeparam name="TResult">The type of the <paramref name="expression"/> result.</typeparam>
            <returns>A <see cref="T:System.String"/> containing the formatted value.</returns>
            <remarks>
            Converts the <paramref name="expression"/> result to a <see cref="T:System.String"/> directly.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValueExtensions.ValueForModel(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper)">
            <summary>
            Returns the formatted value for the current model. Specifically, returns the
            first non-<c>null</c> value found in:
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/> entry with full name,
            the <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewData"/> entry with full name, or
            the <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/>.
            See <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Name(System.String)"/> for more information about a "full name".
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <returns>A <see cref="T:System.String"/> containing the formatted value.</returns>
            <remarks>
            Converts the model value to a <see cref="T:System.String"/> directly.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.HtmlHelperValueExtensions.ValueForModel(Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper,System.String)">
            <summary>
            Returns the formatted value for the current model. Specifically, returns the
            first non-<c>null</c> value found in:
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/> entry with full name,
            the <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewData"/> entry with full name, or
            the <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/>.
            See <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Name(System.String)"/> for more information about a "full name".
            </summary>
            <param name="htmlHelper">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> instance this method extends.</param>
            <param name="format">
            The format string (see <see href="https://msdn.microsoft.com/en-us/library/txafckwd.aspx"/>) used to format the return
            value unless that came from model binding.
            </param>
            <returns>A <see cref="T:System.String"/> containing the formatted value.</returns>
            <remarks>
            Converts the model value to a <see cref="T:System.String"/> directly if
            <paramref name="format"/> is <c>null</c> or empty.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper">
            <summary>
            Base HTML helpers.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Html5DateRenderingMode">
            <summary>
            Set this property to <see cref="F:Microsoft.AspNetCore.Mvc.Rendering.Html5DateRenderingMode.CurrentCulture" /> to have templated helpers such as
            <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Editor(System.String,System.String,System.String,System.Object)" /> and <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1.EditorFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String,System.String,System.Object)" /> render date and time
            values using the current culture. By default, these helpers render dates and times as RFC 3339 compliant strings.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.IdAttributeDotReplacement">
            <summary>
            Gets the <see cref="T:System.String"/> that replaces periods in the ID attribute of an element.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.MetadataProvider">
            <summary>
            Gets the metadata provider. Intended for use in <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> extension methods.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewBag">
            <summary>
            Gets the view bag.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewContext">
            <summary>
            Gets the context information about the view.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewData">
            <summary>
            Gets the current view data.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.TempData">
            <summary>
            Gets the current <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary"/> instance.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.UrlEncoder">
            <summary>
            Gets the <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.UrlEncoder"/> to be used for encoding a URL.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ActionLink(System.String,System.String,System.String,System.String,System.String,System.String,System.Object,System.Object)">
            <summary>
            Returns an anchor (&lt;a&gt;) element that contains a URL path to the specified action.
            </summary>
            <param name="linkText">The inner text of the anchor element. Must not be <c>null</c>.</param>
            <param name="actionName">The name of the action.</param>
            <param name="controllerName">The name of the controller.</param>
            <param name="protocol">The protocol for the URL, such as &quot;http&quot; or &quot;https&quot;.</param>
            <param name="hostname">The host name for the URL.</param>
            <param name="fragment">The URL fragment name (the anchor name).</param>
            <param name="routeValues">
            An <see cref="T:System.Object"/> that contains the parameters for a route. The parameters are retrieved through
            reflection by examining the properties of the <see cref="T:System.Object"/>. This <see cref="T:System.Object"/> is typically
            created using <see cref="T:System.Object"/> initializer syntax. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the route parameters.
            </param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the anchor element.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.AntiForgeryToken">
            <summary>
            Returns a &lt;hidden&gt; element (antiforgery token) that will be validated when the containing
            &lt;form&gt; is submitted.
            </summary>
            <returns><see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;hidden&gt; element.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.BeginForm(System.String,System.String,System.Object,Microsoft.AspNetCore.Mvc.Rendering.FormMethod,System.Nullable{System.Boolean},System.Object)">
            <summary>
            Renders a &lt;form&gt; start tag to the response. When the user submits the form, the action with name
            <paramref name="actionName"/> will process the request.
            </summary>
            <param name="actionName">The name of the action method.</param>
            <param name="controllerName">The name of the controller.</param>
            <param name="routeValues">
            An <see cref="T:System.Object"/> that contains the parameters for a route. The parameters are retrieved through
            reflection by examining the properties of the <see cref="T:System.Object"/>. This <see cref="T:System.Object"/> is typically
            created using <see cref="T:System.Object"/> initializer syntax. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the route parameters.
            </param>
            <param name="method">The HTTP method for processing the form, either GET or POST.</param>
            <param name="antiforgery">
            If <c>true</c>, &lt;form&gt; elements will include an antiforgery token.
            If <c>false</c>, suppresses the generation an &lt;input&gt; of type "hidden" with an antiforgery token.
            If <c>null</c>, &lt;form&gt; elements will include an antiforgery token only if
            <paramref name="method"/> is not <see cref="F:Microsoft.AspNetCore.Mvc.Rendering.FormMethod.Get"/>.
            </param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <returns>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.MvcForm"/> instance which renders the &lt;/form&gt; end tag when disposed.
            </returns>
            <remarks>
            In this context, "renders" means the method writes its output using <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.Writer"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.BeginRouteForm(System.String,System.Object,Microsoft.AspNetCore.Mvc.Rendering.FormMethod,System.Nullable{System.Boolean},System.Object)">
            <summary>
            Renders a &lt;form&gt; start tag to the response. The route with name <paramref name="routeName"/>
            generates the &lt;form&gt;'s <c>action</c> attribute value.
            </summary>
            <param name="routeName">The name of the route.</param>
            <param name="routeValues">
            An <see cref="T:System.Object"/> that contains the parameters for a route. The parameters are retrieved through
            reflection by examining the properties of the <see cref="T:System.Object"/>. This <see cref="T:System.Object"/> is typically
            created using <see cref="T:System.Object"/> initializer syntax. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the route parameters.
            </param>
            <param name="method">The HTTP method for processing the form, either GET or POST.</param>
            <param name="antiforgery">
            If <c>true</c>, &lt;form&gt; elements will include an antiforgery token.
            If <c>false</c>, suppresses the generation an &lt;input&gt; of type "hidden" with an antiforgery token.
            If <c>null</c>, &lt;form&gt; elements will include an antiforgery token only if
            <paramref name="method"/> is not <see cref="F:Microsoft.AspNetCore.Mvc.Rendering.FormMethod.Get"/>.
            </param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <returns>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.MvcForm"/> instance which renders the &lt;/form&gt; end tag when disposed.
            </returns>
            <remarks>
            In this context, "renders" means the method writes its output using <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.Writer"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.CheckBox(System.String,System.Nullable{System.Boolean},System.Object)">
            <summary>
            Returns an &lt;input&gt; element of type "checkbox" with value "true" and an &lt;input&gt; element of type
            "hidden" with value "false" for the specified <paramref name="expression"/>. Adds a "checked" attribute to
            the "checkbox" element based on the first non-<c>null</c> value found in:
            the <paramref name="htmlAttributes"/> dictionary entry with key "checked",
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/> entry with full name,
            the <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewData"/> entry with full name, or
            the <paramref name="expression"/> evaluated against <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/>.
            If <paramref name="isChecked"/> is non-<c>null</c>, instead uses the first non-<c>null</c> value found in:
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/> entry with full name, or
            the <paramref name="isChecked"/> parameter.
            See <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Name(System.String)"/> for more information about a "full name".
            </summary>
            <param name="expression">Expression name, relative to the current model.</param>
            <param name="isChecked">If <c>true</c>, checkbox is initially checked.</param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the checkbox element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;input&gt; elements.</returns>
            <remarks>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix"/> and <paramref name="expression"/> to set checkbox
            element's "name" attribute. Sanitizes <paramref name="expression"/> to set checkbox element's "id"
            attribute.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Display(System.String,System.String,System.String,System.Object)">
            <summary>
            Returns HTML markup for the <paramref name="expression"/>, using a display template, specified HTML field
            name, and additional view data. The template is found using the <paramref name="templateName"/> or the
            <paramref name="expression"/>'s <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/>.
            </summary>
            <param name="expression">
            Expression name, relative to the current model. May identify a single property or an
            <see cref="T:System.Object"/> that contains the properties to display.
            </param>
            <param name="templateName">The name of the template used to create the HTML markup.</param>
            <param name="htmlFieldName">
            A <see cref="T:System.String"/> used to disambiguate the names of HTML elements that are created for
            properties that have the same name.
            </param>
            <param name="additionalViewData">
            An anonymous <see cref="T:System.Object"/> or <see cref="T:System.Collections.Generic.IDictionary`2"/> that can contain additional
            view data that will be merged into the <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary`1"/> instance created for the
            template.
            </param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the created HTML.</returns>
            <remarks>
            <para>
            For example the default <see cref="T:System.Object"/> display template includes markup for each property in the
            <paramref name="expression"/>'s value.
            </para>
            <para>
            Example <paramref name="expression"/>s include <c>string.Empty</c> which identifies the current model and
            <c>"prop"</c> which identifies the current model's "prop" property.
            </para>
            <para>
            Custom templates are found under a <c>DisplayTemplates</c> folder. The folder name is case-sensitive on
            case-sensitive file systems.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.DisplayName(System.String)">
            <summary>
            Returns the display name for the specified <paramref name="expression"/>.
            </summary>
            <param name="expression">Expression name, relative to the current model.</param>
            <returns>A <see cref="T:System.String"/> containing the display name.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.DisplayText(System.String)">
            <summary>
            Returns the simple display text for the specified <paramref name="expression"/>.
            </summary>
            <param name="expression">Expression name, relative to the current model.</param>
            <returns>
            A <see cref="T:System.String"/> containing the simple display text.
            If the expression result is <c>null</c>, returns <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.NullDisplayText"/>.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.DropDownList(System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem},System.String,System.Object)">
            <summary>
            Returns a single-selection HTML &lt;select&gt; element for the <paramref name="expression"/>. Adds
            &lt;option&gt; elements based on <paramref name="optionLabel"/> and <paramref name="selectList"/>. Adds a
            "selected" attribute to an &lt;option&gt; if its <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Value"/> (if non-<c>null</c>) or
            <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Text"/> matches the first non-<c>null</c> value found in:
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/> entry with full name,
            the <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewData"/> entry with full name (unless used instead of <paramref name="selectList"/>), or
            the <paramref name="expression"/> evaluated against <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/>.
            See <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Name(System.String)"/> for more information about a "full name".
            </summary>
            <param name="expression">Expression name, relative to the current model.</param>
            <param name="selectList">
            A collection of <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/> objects used to populate the &lt;select&gt; element with
            &lt;optgroup&gt; and &lt;option&gt; elements. If <c>null</c>, uses the <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewData"/> entry with
            full name and that entry must be a collection of <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/> objects.
            </param>
            <param name="optionLabel">
            The text for a default empty item. Does not include such an item if argument is <c>null</c>.
            </param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the &lt;select&gt; element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;select&gt; element.</returns>
            <remarks>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix"/> and <paramref name="expression"/> to set
            &lt;select&gt; element's "name" attribute. Sanitizes <paramref name="expression"/> to set element's "id"
            attribute.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Editor(System.String,System.String,System.String,System.Object)">
            <summary>
            Returns HTML markup for the <paramref name="expression"/>, using an editor template, specified HTML field
            name, and additional view data. The template is found using the <paramref name="templateName"/> or the
            <paramref name="expression"/>'s <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/>.
            </summary>
            <param name="expression">
            Expression name, relative to the current model. May identify a single property or an
            <see cref="T:System.Object"/> that contains the properties to edit.
            </param>
            <param name="templateName">The name of the template used to create the HTML markup.</param>
            <param name="htmlFieldName">
            A <see cref="T:System.String"/> used to disambiguate the names of HTML elements that are created for
            properties that have the same name.
            </param>
            <param name="additionalViewData">
            An anonymous <see cref="T:System.Object"/> or <see cref="T:System.Collections.Generic.IDictionary`2"/> that can contain additional
            view data that will be merged into the <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary`1"/> instance created for the
            template.
            </param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;input&gt; element(s).</returns>
            <remarks>
            <para>
            For example the default <see cref="T:System.Object"/> editor template includes &lt;label&gt; and &lt;input&gt;
            elements for each property in the <paramref name="expression"/>'s value.
            </para>
            <para>
            Example <paramref name="expression"/>s include <c>string.Empty</c> which identifies the current model and
            <c>"prop"</c> which identifies the current model's "prop" property.
            </para>
            <para>
            Custom templates are found under a <c>EditorTemplates</c> folder. The folder name is case-sensitive on
            case-sensitive file systems.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Encode(System.Object)">
            <summary>
            Converts the <paramref name="value"/> to an HTML-encoded <see cref="T:System.String"/>.
            </summary>
            <param name="value">The <see cref="T:System.Object"/> to encode.</param>
            <returns>The HTML-encoded <see cref="T:System.String"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Encode(System.String)">
            <summary>
            Converts the specified <see cref="T:System.String"/> to an HTML-encoded <see cref="T:System.String"/>.
            </summary>
            <param name="value">The <see cref="T:System.String"/> to encode.</param>
            <returns>The HTML-encoded <see cref="T:System.String"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.EndForm">
            <summary>
            Renders the &lt;/form&gt; end tag to the response.
            </summary>
            <remarks>
            In this context, "renders" means the method writes its output using <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.Writer"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.FormatValue(System.Object,System.String)">
            <summary>
            Formats the value.
            </summary>
            <param name="value">The value.</param>
            <param name="format">
            The format string (see <see href="https://msdn.microsoft.com/en-us/library/txafckwd.aspx"/>) used to format the return
            value.
            </param>
            <returns>A <see cref="T:System.String"/> containing the formatted value.</returns>
            <remarks>
            Converts <paramref name="value"/> to a <see cref="T:System.String"/> directly if
            <paramref name="format"/> is <c>null</c> or empty.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.GenerateIdFromName(System.String)">
            <summary>
            Returns an HTML element Id for the specified expression <paramref name="fullName"/>.
            </summary>
            <param name="fullName">
            Fully-qualified expression name, ignoring the current model. Must not be <c>null</c>. See
            <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Name(System.String)"/> for more information about a "full name".
            </param>
            <returns>A <see cref="T:System.String"/> containing the element Id.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.GetEnumSelectList``1">
            <summary>
            Returns a select list for the given <typeparamref name="TEnum"/>.
            </summary>
            <typeparam name="TEnum">Type to generate a select list for.</typeparam>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing the select list for the given
            <typeparamref name="TEnum"/>,
            with a decimal representation of the ordinal as <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Value"/>
            and the display name as <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Text"/>.
            </returns>
            <exception cref="T:System.ArgumentException">
            Thrown if <typeparamref name="TEnum"/> is not an <see cref="T:System.Enum"/> or if it has a
            <see cref="T:System.FlagsAttribute"/>.
            </exception>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.GetEnumSelectList(System.Type)">
            <summary>
            Returns a select list for the given <paramref name="enumType"/>.
            </summary>
            <param name="enumType"><see cref="T:System.Type"/> to generate a select list for.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing the select list for the given
            <paramref name="enumType"/>.
            </returns>
            <exception cref="T:System.ArgumentException">
            Thrown if <paramref name="enumType"/> is not an <see cref="T:System.Enum"/> or if it has a
            <see cref="T:System.FlagsAttribute"/>.
            </exception>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Hidden(System.String,System.Object,System.Object)">
            <summary>
            Returns an &lt;input&gt; element of type "hidden" for the specified <paramref name="expression"/>. Adds a
            "value" attribute to the element containing the first non-<c>null</c> value found in:
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/> entry with full name,
            the <paramref name="value"/> parameter,
            the <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewData"/> entry with full name,
            the <paramref name="expression"/> evaluated against <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/>, or
            the <paramref name="htmlAttributes"/> dictionary entry with key "value".
            See <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Name(System.String)"/> for more information about a "full name".
            </summary>
            <param name="expression">Expression name, relative to the current model.</param>
            <param name="value">If non-<c>null</c>, value to include in the element.</param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;input&gt; element.</returns>
            <remarks>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix"/> and <paramref name="expression"/> to set
            &lt;input&gt; element's "name" attribute. Sanitizes <paramref name="expression"/> to set element's "id"
            attribute.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Id(System.String)">
            <summary>
            Returns the HTML element Id for the specified <paramref name="expression"/>.
            </summary>
            <param name="expression">Expression name, relative to the current model.</param>
            <returns>A <see cref="T:System.String"/> containing the element Id.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Label(System.String,System.String,System.Object)">
            <summary>
            Returns a &lt;label&gt; element for the specified <paramref name="expression"/>.
            </summary>
            <param name="expression">Expression name, relative to the current model.</param>
            <param name="labelText">The inner text of the element.</param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;label&gt; element.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ListBox(System.String,System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem},System.Object)">
            <summary>
            Returns a multi-selection &lt;select&gt; element for the <paramref name="expression"/>. Adds
            &lt;option&gt; elements based on <paramref name="selectList"/>. Adds a "selected" attribute to an
            &lt;option&gt; if its <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Value"/> (if non-<c>null</c>) or
            <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Text"/> matches an entry in the first non-<c>null</c> collection found in:
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/> entry with full name,
            the <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewData"/> entry with full name (unless used instead of <paramref name="selectList"/>), or
            the <paramref name="expression"/> evaluated against <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/>.
            See <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Name(System.String)"/> for more information about a "full name".
            </summary>
            <param name="expression">Expression name, relative to the current model.</param>
            <param name="selectList">
            A collection of <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/> objects used to populate the &lt;select&gt; element with
            &lt;optgroup&gt; and &lt;option&gt; elements. If <c>null</c>, finds the <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/>
            collection with name <paramref name="expression"/> in <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewData"/>.
            </param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the &lt;select&gt; element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;select&gt; element.</returns>
            <remarks>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix"/> and <paramref name="expression"/> to set
            &lt;select&gt; element's "name" attribute. Sanitizes <paramref name="expression"/> to set element's "id"
            attribute.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Name(System.String)">
            <summary>
            Returns the full HTML element name for the specified <paramref name="expression"/>. Uses
            <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix"/> (if non-empty) to reflect relationship between current
            <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/> and the top-level view's model.
            </summary>
            <param name="expression">Expression name, relative to the current model.</param>
            <returns>A <see cref="T:System.String"/> containing the element name.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.PartialAsync(System.String,System.Object,Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary)">
            <summary>
            Returns HTML markup for the specified partial view.
            </summary>
            <param name="partialViewName">
            The name of the partial view used to create the HTML markup. Must not be <c>null</c>.
            </param>
            <param name="model">A model to pass into the partial view.</param>
            <param name="viewData">A <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary"/> to pass into the partial view.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task"/> that on completion returns a new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> instance containing
            the created HTML.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Password(System.String,System.Object,System.Object)">
            <summary>
            Returns an &lt;input&gt; element of type "password" for the specified <paramref name="expression"/>. Adds a
            "value" attribute containing the first non-<c>null</c> value in:
            the <paramref name="value"/> parameter, or
            the <paramref name="htmlAttributes"/> dictionary entry with key "value".
            </summary>
            <param name="expression">Expression name, relative to the current model.</param>
            <param name="value">If non-<c>null</c>, value to include in the element.</param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;input&gt; element.</returns>
            <remarks>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix"/> and <paramref name="expression"/> to set
            &lt;input&gt; element's "name" attribute. Sanitizes <paramref name="expression"/> to set element's "id"
            attribute.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.RadioButton(System.String,System.Object,System.Nullable{System.Boolean},System.Object)">
            <summary>
            Returns an &lt;input&gt; element of type "radio" for the specified <paramref name="expression"/>.
            Adds a "value" attribute to the element containing the first non-<c>null</c> value found in:
            the <paramref name="value"/> parameter, or
            the <paramref name="htmlAttributes"/> dictionary entry with key "value".
            Adds a "checked" attribute to the element if <paramref name="value"/> matches the first non-<c>null</c>
            value found in:
            the <paramref name="htmlAttributes"/> dictionary entry with key "checked",
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/> entry with full name,
            the <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewData"/> entry with full name, or
            the <paramref name="expression"/> evaluated against <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/>.
            If <paramref name="isChecked"/> is non-<c>null</c>, instead uses the first non-<c>null</c> value found in:
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/> entry with full name, or
            the <paramref name="isChecked"/> parameter.
            See <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Name(System.String)"/> for more information about a "full name".
            </summary>
            <param name="expression">Expression name, relative to the current model.</param>
            <param name="value">
            If non-<c>null</c>, value to include in the element. Must not be <c>null</c> if
            <paramref name="isChecked"/> is also <c>null</c> and no "checked" entry exists in
            <paramref name="htmlAttributes"/>.
            </param>
            <param name="isChecked">
            If <c>true</c>, radio button is initially selected. Must not be <c>null</c> if
            <paramref name="value"/> is also <c>null</c> and no "checked" entry exists in
            <paramref name="htmlAttributes"/>.
            </param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;input&gt; element.</returns>
            <remarks>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix"/> and <paramref name="expression"/> to set
            &lt;input&gt; element's "name" attribute. Sanitizes <paramref name="expression"/> to set element's "id"
            attribute.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Raw(System.String)">
            <summary>
            Wraps HTML markup in an <see cref="T:Microsoft.AspNetCore.Html.HtmlString"/>, without HTML-encoding the specified
            <paramref name="value"/>.
            </summary>
            <param name="value">HTML markup <see cref="T:System.String"/>.</param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the wrapped <see cref="T:System.String"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Raw(System.Object)">
            <summary>
            Wraps HTML markup from the string representation of an <see cref="T:System.Object"/> in an
            <see cref="T:Microsoft.AspNetCore.Html.HtmlString"/>, without HTML-encoding the string representation.
            </summary>
            <param name="value">The <see cref="T:System.Object"/> to wrap.</param>
            <returns><see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the wrapped string representation.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.RenderPartialAsync(System.String,System.Object,Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary)">
            <summary>
            Renders HTML markup for the specified partial view.
            </summary>
            <param name="partialViewName">
            The name or path of the partial view used to create the HTML markup. Must not be <c>null</c>.
            </param>
            <param name="model">A model to pass into the partial view.</param>
            <param name="viewData">A <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary"/> to pass into the partial view.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that renders the created HTML when it executes.</returns>
            <remarks>
            In this context, "renders" means the method writes its output using <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.Writer"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.RouteLink(System.String,System.String,System.String,System.String,System.String,System.Object,System.Object)">
            <summary>
            Returns an anchor (&lt;a&gt;) element that contains a URL path to the specified route.
            </summary>
            <param name="linkText">The inner text of the anchor element. Must not be <c>null</c>.</param>
            <param name="routeName">The name of the route.</param>
            <param name="protocol">The protocol for the URL, such as &quot;http&quot; or &quot;https&quot;.</param>
            <param name="hostName">The host name for the URL.</param>
            <param name="fragment">The URL fragment name (the anchor name).</param>
            <param name="routeValues">
            An <see cref="T:System.Object"/> that contains the parameters for a route. The parameters are retrieved through
            reflection by examining the properties of the <see cref="T:System.Object"/>. This <see cref="T:System.Object"/> is typically
            created using <see cref="T:System.Object"/> initializer syntax. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the route parameters.
            </param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the anchor element.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.TextArea(System.String,System.String,System.Int32,System.Int32,System.Object)">
            <summary>
            Returns a &lt;textarea&gt; element for the specified <paramref name="expression"/>. Adds content to the
            element body based on the first non-<c>null</c> value found in:
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/> entry with full name,
            the <paramref name="value"/> parameter,
            the <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewData"/> entry with full name, or
            the <paramref name="expression"/> evaluated against <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/>.
            See <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Name(System.String)"/> for more information about a "full name".
            </summary>
            <param name="expression">Expression name, relative to the current model.</param>
            <param name="value">If non-<c>null</c>, value to include in the element.</param>
            <param name="rows">Number of rows in the textarea.</param>
            <param name="columns">Number of columns in the textarea.</param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;textarea&gt; element.</returns>
            <remarks>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix"/> and <paramref name="expression"/> to set
            &lt;textarea&gt; element's "name" attribute. Sanitizes <paramref name="expression"/> to set element's "id"
            attribute.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.TextBox(System.String,System.Object,System.String,System.Object)">
            <summary>
            Returns an &lt;input&gt; element of type "text" for the specified <paramref name="expression"/>. Adds a
            "value" attribute to the element containing the first non-<c>null</c> value found in:
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/> entry with full name,
            the <paramref name="value"/> parameter,
            the <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewData"/> entry with full name,
            the <paramref name="expression"/> evaluated against <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/>, or
            the <paramref name="htmlAttributes"/> dictionary entry with key "value".
            See <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Name(System.String)"/> for more information about a "full name".
            </summary>
            <param name="expression">Expression name, relative to the current model.</param>
            <param name="value">If non-<c>null</c>, value to include in the element.</param>
            <param name="format">
            The format string (see <see href="https://msdn.microsoft.com/en-us/library/txafckwd.aspx"/>) used to format the "value"
            attribute unless that came from model binding.
            </param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;input&gt; element.</returns>
            <remarks>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix"/> and <paramref name="expression"/> to set
            &lt;input&gt; element's "name" attribute. Sanitizes <paramref name="expression"/> to set element's "id"
            attribute.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ValidationMessage(System.String,System.String,System.Object,System.String)">
            <summary>
            Returns the validation message if an error exists in the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/> object
            for the specified <paramref name="expression"/>.
            </summary>
            <param name="expression">Expression name, relative to the current model.</param>
            <param name="message">
            The message to be displayed. If <c>null</c> or empty, method extracts an error string from the
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/> object. Message will always be visible but client-side validation may
            update the associated CSS class.
            </param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the <paramref name="tag"/> element.
            Alternatively, an <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <param name="tag">
            The tag to wrap the <paramref name="message"/> in the generated HTML. Its default value is
            <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.ValidationMessageElement"/>.
            </param>
            <returns>
            A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing a <paramref name="tag"/> element. An empty
            <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> if the <paramref name="expression"/> is valid and client-side validation is
            disabled.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ValidationSummary(System.Boolean,System.String,System.Object,System.String)">
            <summary>
            Returns an unordered list (&lt;ul&gt; element) of validation messages that are in the
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/> object.
            </summary>
            <param name="excludePropertyErrors">
            If <c>true</c>, display model-level errors only; otherwise display all errors.
            </param>
            <param name="message">The message to display with the validation summary.</param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the topmost (&lt;div&gt;) element.
            Alternatively, an <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <param name="tag">
            The tag to wrap the <paramref name="message"/> in the generated HTML. Its default value is
            <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.ValidationSummaryMessageElement" />.
            </param>
            <returns>
            New <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing a &lt;div&gt; element wrapping the <paramref name="tag"/> element
            and the &lt;ul&gt; element. An empty <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> if the current model is valid and
            client-side validation is disabled.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Value(System.String,System.String)">
            <summary>
            Returns the formatted value for the specified <paramref name="expression"/>. Specifically, returns the
            first non-<c>null</c> value found in:
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/> entry with full name,
            the <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ViewData"/> entry with full name, or
            the <paramref name="expression"/> evaluated against <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/>.
            See <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Name(System.String)"/> for more information about a "full name".
            </summary>
            <param name="expression">Expression name, relative to the current model.</param>
            <param name="format">
            The format string (see <see href="https://msdn.microsoft.com/en-us/library/txafckwd.aspx"/>) used to format the return
            value unless that came from model binding.
            </param>
            <returns>A <see cref="T:System.String"/> containing the formatted value.</returns>
            <remarks>
            Converts the expression result to a <see cref="T:System.String"/> directly if
            <paramref name="format"/> is <c>null</c> or empty.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper"/> for Linq expressions.
            </summary>
            <typeparam name="TModel">The type of the model.</typeparam>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1.ViewData">
            <summary>
            Gets the current view data.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1.CheckBoxFor(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Object)">
            <summary>
            Returns an &lt;input&gt; element of type "checkbox" with value "true" and an &lt;input&gt; element of type
            "hidden" with value "false" for the specified <paramref name="expression"/>. Adds a "checked" attribute to
            the "checkbox" element based on the first non-<c>null</c> value found in:
            the <paramref name="htmlAttributes"/> dictionary entry with key "checked", or
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/> entry with full name.
            If <paramref name="expression"/> evaluates to a non-<c>null</c> value, instead uses the first
            non-<c>null</c> value found in:
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/> entry with full name, or
            the <paramref name="expression"/> evaluated against <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/>.
            See <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1.NameFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})"/> for more information about a "full name".
            </summary>
            <param name="expression">An expression to be evaluated against the current model.</param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the checkbox element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;input&gt; elements.</returns>
            <remarks>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix"/> and the string representation of the
            <paramref name="expression"/> to set checkbox element's "name" attribute. Sanitizes the string
            representation of the <paramref name="expression"/> to set checkbox element's "id" attribute.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1.DisplayFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String,System.String,System.Object)">
            <summary>
            Returns HTML markup for the <paramref name="expression"/>, using a display template, specified HTML field
            name, and additional view data. The template name is taken from the <paramref name="templateName"/> or the
            <paramref name="expression"/>’s <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.TemplateHint"/>.
            If the template file is not found, a default template will be used.
            </summary>
            <param name="expression">An expression to be evaluated against the current model.</param>
            <param name="templateName">The name of the template used to create the HTML markup.</param>
            <param name="htmlFieldName">
            A <see cref="T:System.String"/> used to disambiguate the names of HTML elements that are created for properties
            that have the same name.
            </param>
            <param name="additionalViewData">
            An anonymous <see cref="T:System.Object"/> or <see cref="T:System.Collections.Generic.IDictionary`2"/> that can contain additional
            view data that will be merged into the <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary`1"/> instance created for the
            template.
            </param>
            <typeparam name="TResult">The type of the <paramref name="expression"/> result.</typeparam>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the created HTML.</returns>
            <remarks>
            <para>
            For example the default <see cref="T:System.Object"/> display template includes markup for each property in the
            <paramref name="expression"/> result.
            </para>
            <para>
            Custom templates are found under a <c>DisplayTemplates</c> folder within the
            <see href="https://aka.ms/aspnet/7.0/razorpages-pages-folder">Pages</see> folder.
            The folder name is case-sensitive on case-sensitive file systems.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1.DisplayNameFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Returns the display name for the specified <paramref name="expression"/>.
            </summary>
            <param name="expression">An expression to be evaluated against the current model.</param>
            <typeparam name="TResult">The type of the <paramref name="expression"/> result.</typeparam>
            <returns>A <see cref="T:System.String"/> containing the display name.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1.DisplayNameForInnerType``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Returns the display name for the specified <paramref name="expression"/>
            if the current model represents a collection.
            </summary>
            <param name="expression">An expression to be evaluated against an item in the current model.</param>
            <typeparam name="TModelItem">The type of items in the model collection.</typeparam>
            <typeparam name="TResult">The type of the <paramref name="expression"/> result.</typeparam>
            <returns>A <see cref="T:System.String"/> containing the display name.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1.DisplayTextFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Returns the simple display text for the specified <paramref name="expression"/>.
            </summary>
            <param name="expression">An expression to be evaluated against the current model.</param>
            <typeparam name="TResult">The type of the <paramref name="expression"/> result.</typeparam>
            <returns>
            A <see cref="T:System.String"/> containing the simple display text.
            If the <paramref name="expression"/> result is <c>null</c>, returns
            <see cref="P:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata.NullDisplayText"/>.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1.DropDownListFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem},System.String,System.Object)">
            <summary>
            Returns a single-selection HTML &lt;select&gt; element for the <paramref name="expression"/>. Adds
            &lt;option&gt; elements based on <paramref name="optionLabel"/> and <paramref name="selectList"/>. Adds a
            "selected" attribute to an &lt;option&gt; if its <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Value"/> (if non-<c>null</c>) or
            <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Text"/> matches the first non-<c>null</c> value found in:
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/> entry with full name, or
            the <paramref name="expression"/> evaluated against <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/>.
            See <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1.NameFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})"/> for more information about a "full name".
            </summary>
            <param name="expression">An expression to be evaluated against the current model.</param>
            <param name="selectList">
            A collection of <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/> objects used to populate the &lt;select&gt; element with
            &lt;optgroup&gt; and &lt;option&gt; elements. If <c>null</c>, uses the <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1.ViewData"/> entry with
            full name and that entry must be a collection of <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/> objects.
            </param>
            <param name="optionLabel">
            The text for a default empty item. Does not include such an item if argument is <c>null</c>.
            </param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the &lt;select&gt; element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <typeparam name="TResult">The type of the <paramref name="expression"/> result.</typeparam>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;select&gt; element.</returns>
            <remarks>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix"/> and the string representation of the
            <paramref name="expression"/> to set &lt;select&gt; element's "name" attribute. Sanitizes the string
            representation of the <paramref name="expression"/> to set element's "id" attribute.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1.EditorFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String,System.String,System.Object)">
            <summary>
            Returns HTML markup for the <paramref name="expression"/>, using an editor template, specified HTML field
            name, and additional view data. The template is found using the <paramref name="templateName"/> or the
            <paramref name="expression"/>'s <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelMetadata"/>.
            </summary>
            <param name="expression">An expression to be evaluated against the current model.</param>
            <param name="templateName">The name of the template that is used to create the HTML markup.</param>
            <param name="htmlFieldName">
            A <see cref="T:System.String"/> used to disambiguate the names of HTML elements that are created for properties
            that have the same name.
            </param>
            <param name="additionalViewData">
            An anonymous <see cref="T:System.Object"/> or <see cref="T:System.Collections.Generic.IDictionary`2"/> that can contain additional
            view data that will be merged into the <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary`1"/> instance created for the
            template.
            </param>
            <typeparam name="TResult">The type of the <paramref name="expression"/> result.</typeparam>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;input&gt; element(s).</returns>
            <remarks>
            <para>
            For example the default <see cref="T:System.Object"/> editor template includes &lt;label&gt; and &lt;input&gt;
            elements for each property in the <paramref name="expression"/> result.
            </para>
            <para>
            Custom templates are found under a <c>EditorTemplates</c> folder. The folder name is case-sensitive on
            case-sensitive file systems.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1.Encode(System.Object)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Encode(System.Object)"/>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1.Encode(System.String)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Encode(System.String)"/>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1.HiddenFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Object)">
            <summary>
            Returns an &lt;input&gt; element of type "hidden" for the specified <paramref name="expression"/>. Adds a
            "value" attribute to the element containing the first non-<c>null</c> value found in:
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/> entry with full name,
            the <paramref name="expression"/> evaluated against <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/>, or
            the <paramref name="htmlAttributes"/> dictionary entry with key "value".
            See <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1.NameFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})"/> for more information about a "full name".
            </summary>
            <param name="expression">An expression to be evaluated against the current model.</param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <typeparam name="TResult">The type of the <paramref name="expression"/> result.</typeparam>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;input&gt; element.</returns>
            <remarks>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix"/> and the string representation of the
            <paramref name="expression"/> to set &lt;input&gt; element's "name" attribute. Sanitizes the string
            representation of the <paramref name="expression"/> to set element's "id" attribute.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1.IdFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Returns the HTML element Id for the specified <paramref name="expression"/>.
            </summary>
            <param name="expression">An expression to be evaluated against the current model.</param>
            <typeparam name="TResult">The type of the <paramref name="expression"/> result.</typeparam>
            <returns>A <see cref="T:System.String"/> containing the element Id.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1.LabelFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String,System.Object)">
            <summary>
            Returns a &lt;label&gt; element for the specified <paramref name="expression"/>.
            </summary>
            <param name="expression">An expression to be evaluated against the current model.</param>
            <param name="labelText">The inner text of the element.</param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <typeparam name="TResult">The type of the <paramref name="expression"/> result.</typeparam>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;label&gt; element.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1.ListBoxFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.Rendering.SelectListItem},System.Object)">
            <summary>
            Returns a multi-selection &lt;select&gt; element for the <paramref name="expression"/>. Adds
            &lt;option&gt; elements based on <paramref name="selectList"/>. Adds a "selected" attribute to an
            &lt;option&gt; if its <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Value"/> (if non-<c>null</c>) or
            <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Text"/> matches an entry in the first non-<c>null</c> collection found in:
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/> entry with full name, or
            the <paramref name="expression"/> evaluated against <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/>.
            See <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1.NameFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})"/> for more information about a "full name".
            </summary>
            <param name="expression">An expression to be evaluated against the current model.</param>
            <param name="selectList">
            A collection of <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/> objects used to populate the &lt;select&gt; element with
            &lt;optgroup&gt; and &lt;option&gt; elements. If <c>null</c>, finds the <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/>
            collection with name <paramref name="expression"/> in <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1.ViewData"/>.
            </param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the &lt;select&gt; element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <typeparam name="TResult">The type of the <paramref name="expression"/> result.</typeparam>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;select&gt; element.</returns>
            <remarks>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix"/> and the string representation of the
            <paramref name="expression"/> to set &lt;select&gt; element's "name" attribute. Sanitizes the string
            representation of the <paramref name="expression"/> to set element's "id" attribute.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1.NameFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Returns the full HTML element name for the specified <paramref name="expression"/>. Uses
            <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix"/> (if non-empty) to reflect relationship between current
            <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/> and the top-level view's model.
            </summary>
            <param name="expression">An expression to be evaluated against the current model.</param>
            <typeparam name="TResult">The type of the <paramref name="expression"/> result.</typeparam>
            <returns>A <see cref="T:System.String"/> containing the element name.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1.PasswordFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Object)">
            <summary>
            Returns an &lt;input&gt; element of type "password" for the specified <paramref name="expression"/>. Adds a
            "value" attribute containing the <paramref name="htmlAttributes"/> dictionary entry with key "value" (if
            any).
            </summary>
            <param name="expression">An expression to be evaluated against the current model.</param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <typeparam name="TResult">The type of the <paramref name="expression"/> result.</typeparam>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;input&gt; element.</returns>
            <remarks>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix"/> and the string representation of the
            <paramref name="expression"/> to set &lt;input&gt; element's "name" attribute. Sanitizes the string
            representation of the <paramref name="expression"/> to set element's "id" attribute.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1.RadioButtonFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Object,System.Object)">
            <summary>
            Returns an &lt;input&gt; element of type "radio" for the specified <paramref name="expression"/>.
            Adds a "value" attribute to the element containing the first non-<c>null</c> value found in:
            the <paramref name="value"/> parameter, or
            the <paramref name="htmlAttributes"/> dictionary entry with key "value".
            Adds a "checked" attribute to the element if <paramref name="value"/> matches the first non-<c>null</c>
            value found in:
            the <paramref name="htmlAttributes"/> dictionary entry with key "checked", or
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/> entry with full name.
            If <paramref name="expression"/> evaluates to a non-<c>null</c> value, instead uses the first
            non-<c>null</c> value found in:
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/> entry with full name, or
            the <paramref name="expression"/> evaluated against <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/>.
            See <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1.NameFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})"/> for more information about a "full name".
            Adds a "value" attribute to the element containing the <paramref name="value"/> parameter.
            </summary>
            <param name="expression">An expression to be evaluated against the current model.</param>
            <param name="value">Value to include in the element. Must not be <c>null</c>.</param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <typeparam name="TResult">The type of the <paramref name="expression"/> result.</typeparam>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;input&gt; element.</returns>
            <remarks>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix"/> and the string representation of the
            <paramref name="expression"/> to set &lt;select&gt; element's "name" attribute. Sanitizes the string
            representation of the <paramref name="expression"/> to set element's "id" attribute.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1.Raw(System.Object)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Raw(System.Object)"/>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1.Raw(System.String)">
            <inheritdoc cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Raw(System.String)"/>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1.TextAreaFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Int32,System.Int32,System.Object)">
            <summary>
            Returns a &lt;textarea&gt; element for the specified <paramref name="expression"/>. Adds content to the
            element body based on the first non-<c>null</c> value found in:
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/> entry with full name, or
            the <paramref name="expression"/> evaluated against <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/>.
            See <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1.NameFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})"/> for more information about a "full name".
            </summary>
            <param name="expression">An expression to be evaluated against the current model.</param>
            <param name="rows">Number of rows in the textarea.</param>
            <param name="columns">Number of columns in the textarea.</param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <typeparam name="TResult">The type of the <paramref name="expression"/> result.</typeparam>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;textarea&gt; element.</returns>
            <remarks>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix"/> and the string representation of the
            <paramref name="expression"/> to set &lt;textarea&gt; element's "name" attribute. Sanitizes the string
            representation of the <paramref name="expression"/> to set element's "id" attribute.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1.TextBoxFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String,System.Object)">
            <summary>
            Returns an &lt;input&gt; element of type "text" for the specified <paramref name="expression"/>. Adds a
            "value" attribute to the element containing the first non-<c>null</c> value found in:
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/> entry with full name,
            the <paramref name="expression"/> evaluated against <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/>, or
            the <paramref name="htmlAttributes"/> dictionary entry with key "value".
            See <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1.NameFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})"/> for more information about a "full name".
            </summary>
            <param name="expression">An expression to be evaluated against the current model.</param>
            <param name="format">
            The format string (see <see href="https://msdn.microsoft.com/en-us/library/txafckwd.aspx"/>) used to format the
            <paramref name="expression"/> value when using that in the "value" attribute.
            </param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the element. Alternatively, an
            <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <typeparam name="TResult">The type of the <paramref name="expression"/> result.</typeparam>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the &lt;input&gt; element.</returns>
            <remarks>
            Combines <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.TemplateInfo.HtmlFieldPrefix"/> and the string representation of the
            <paramref name="expression"/> to set &lt;input&gt; element's "name" attribute. Sanitizes the string
            representation of the <paramref name="expression"/> to set element's "id" attribute.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1.ValidationMessageFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String,System.Object,System.String)">
            <summary>
            Returns the validation message if an error exists in the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/>
            object for the specified <paramref name="expression"/>.
            </summary>
            <param name="expression">An expression to be evaluated against the current model.</param>
            <param name="message">
            The message to be displayed. If <c>null</c> or empty, method extracts an error string from the
            <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/> object. Message will always be visible but client-side
            validation may update the associated CSS class.
            </param>
            <param name="htmlAttributes">
            An <see cref="T:System.Object"/> that contains the HTML attributes for the <paramref name="tag"/> element.
            Alternatively, an <see cref="T:System.Collections.Generic.IDictionary`2"/> instance containing the HTML attributes.
            </param>
            <param name="tag">
            The tag to wrap the <paramref name="message"/> in the generated HTML. Its default value is
            <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.ValidationMessageElement"/>.
            </param>
            <typeparam name="TResult">The type of the <paramref name="expression"/> result.</typeparam>
            <returns>
            A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the <paramref name="tag"/> element. <c>null</c> if the
            <paramref name="expression"/> is valid and client-side validation is disabled.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1.ValueFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String)">
            <summary>
            Returns the formatted value for the specified <paramref name="expression"/>. Specifically, returns the
            first non-<c>null</c> value found in:
            the <see cref="P:Microsoft.AspNetCore.Mvc.ActionContext.ModelState"/> entry with full name, or
            the <paramref name="expression"/> evaluated against <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary.Model"/>.
            See <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1.NameFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})"/> for more information about a "full name".
            </summary>
            <param name="expression">An expression to be evaluated against the current model.</param>
            <param name="format">
            The format string (see <see href="https://msdn.microsoft.com/en-us/library/txafckwd.aspx"/>) used to format the
            <paramref name="expression"/> value when returning that value.
            </param>
            <typeparam name="TResult">The type of the <paramref name="expression"/> result.</typeparam>
            <returns>A <see cref="T:System.String"/> containing the formatted value.</returns>
            <remarks>
            Converts the <paramref name="expression"/> result to a <see cref="T:System.String"/> directly if
            <paramref name="format"/> is <c>null</c> or empty.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper">
            <summary>
            Base JSON helpers.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper.Serialize(System.Object)">
            <summary>
            Returns serialized JSON for the <paramref name="value"/>.
            </summary>
            <param name="value">The value to serialize as JSON.</param>
            <returns>A new <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> containing the serialized JSON.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Rendering.MultiSelectList">
            <summary>
            Represents a list that lets users select multiple items.
            This class is typically rendered as an HTML <c>&lt;select multiple="multiple"&gt;</c> element with the specified collection
            of <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.MultiSelectList.#ctor(System.Collections.IEnumerable)">
            <summary>
            Initialize a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.MultiSelectList"/>.
            </summary>
            <param name="items">The items.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.MultiSelectList.#ctor(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Initialize a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.MultiSelectList"/>.
            </summary>
            <param name="items">The items.</param>
            <param name="selectedValues">The selected values.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.MultiSelectList.#ctor(System.Collections.IEnumerable,System.String,System.String)">
            <summary>
            Initialize a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.MultiSelectList"/>.
            </summary>
            <param name="items">The items.</param>
            <param name="dataValueField">The data value field.</param>
            <param name="dataTextField">The data text field.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.MultiSelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.Collections.IEnumerable)">
            <summary>
            Initialize a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.MultiSelectList"/>.
            </summary>
            <param name="items">The items.</param>
            <param name="dataValueField">The data value field.</param>
            <param name="dataTextField">The data text field.</param>
            <param name="selectedValues">The selected values.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.MultiSelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.Collections.IEnumerable,System.String)">
            <summary>
            Initializes a new instance of the MultiSelectList class by using the items to include in the list,
            the data value field, the data text field, the selected values, and the data group field.
            </summary>
            <param name="items">The items used to build each <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/> of the list.</param>
            <param name="dataValueField">The data value field. Used to match the Value property of the corresponding
            <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/>.</param>
            <param name="dataTextField">The data text field. Used to match the Text property of the corresponding
            <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/>.</param>
            <param name="selectedValues">The selected values field. Used to match the Selected property of the
            corresponding <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/>.</param>
            <param name="dataGroupField">The data group field. Used to match the Group property of the corresponding
            <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Rendering.MultiSelectList.DataGroupField">
            <summary>
            Gets the data group field.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Rendering.MultiSelectList.DataTextField">
            <summary>
            Gets the data text field.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Rendering.MultiSelectList.DataValueField">
            <summary>
            Gets the data value field.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Rendering.MultiSelectList.Items">
            <summary>
            Gets the items.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Rendering.MultiSelectList.SelectedValues">
            <summary>
            Gets the selected values.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.MultiSelectList.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Rendering.MvcForm">
            <summary>
            An HTML form element in an MVC view.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.MvcForm.#ctor(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,System.Text.Encodings.Web.HtmlEncoder)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.MvcForm"/>.
            </summary>
            <param name="viewContext">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.ViewContext"/>.</param>
            <param name="htmlEncoder">The <see cref="T:System.Text.Encodings.Web.HtmlEncoder"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.MvcForm.Dispose">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.MvcForm.EndForm">
            <summary>
            Renders the &lt;/form&gt; end tag to the response.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.MvcForm.GenerateEndForm">
            <summary>
            Renders <see cref="P:Microsoft.AspNetCore.Mvc.ViewFeatures.FormContext.EndOfFormContent"/> and
            the &lt;/form&gt;.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Rendering.SelectList">
            <summary>
            Represents a list that lets users select a single item.
            This class is typically rendered as an HTML <c>&lt;select&gt;</c> element with the specified collection
            of <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/> objects.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.SelectList.#ctor(System.Collections.IEnumerable)">
            <summary>
            Initialize a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectList"/>.
            </summary>
            <param name="items">The items.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.SelectList.#ctor(System.Collections.IEnumerable,System.Object)">
            <summary>
            Initialize a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectList"/>.
            </summary>
            <param name="items">The items.</param>
            <param name="selectedValue">The selected value.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.SelectList.#ctor(System.Collections.IEnumerable,System.String,System.String)">
            <summary>
            Initialize a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectList"/>.
            </summary>
            <param name="items">The items.</param>
            <param name="dataValueField">The data value field.</param>
            <param name="dataTextField">The data text field.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.SelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.Object)">
            <summary>
            Initialize a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectList"/>.
            </summary>
            <param name="items">The items.</param>
            <param name="dataValueField">The data value field.</param>
            <param name="dataTextField">The data text field.</param>
            <param name="selectedValue">The selected value.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.SelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.Object,System.String)">
            <summary>
            Initializes a new instance of the SelectList class by using the specified items for the list,
            the data value field, the data text field, a selected value, and the data group field.
            </summary>
            <param name="items">The items used to build each <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/> of the list.</param>
            <param name="dataValueField">The data value field. Used to match the Value property of the corresponding
            <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/>.</param>
            <param name="dataTextField">The data text field. Used to match the Text property of the corresponding
            <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/>.</param>
            <param name="selectedValue">The selected values. Used to match the Selected property of the corresponding
            <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/>.</param>
            <param name="dataGroupField">The data group field. Used to match the Group property of the corresponding
            <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Rendering.SelectList.SelectedValue">
            <summary>
            The selected value.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListGroup">
            <summary>
            Represents the optgroup HTML element and its attributes.
            In a select list, multiple groups with the same name are supported.
            They are compared with reference equality.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Rendering.SelectListGroup.Disabled">
            <summary>
            Gets or sets a value that indicates whether this <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListGroup"/> is disabled.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Rendering.SelectListGroup.Name">
            <summary>
            Represents the value of the optgroup's label.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem">
            <summary>
            Represents an item in a <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectList"/> or <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.MultiSelectList"/>.
            This class is typically rendered as an HTML <c>&lt;option&gt;</c> element with the specified
            attribute values.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/>.
            </summary>
            <param name="text">The display text of this <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/>.</param>
            <param name="value">The value of this <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/>.
            </summary>
            <param name="text">The display text of this <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/>.</param>
            <param name="value">The value of this <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/>.</param>
            <param name="selected">Value that indicates whether this <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/> is selected.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.#ctor(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/>.
            </summary>
            <param name="text">The display text of this <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/>.</param>
            <param name="value">The value of this <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/>.</param>
            <param name="selected">Value that indicates whether this <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/> is selected.</param>
            <param name="disabled">Value that indicates whether this <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/> is disabled.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Disabled">
            <summary>
            Gets or sets a value that indicates whether this <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/> is disabled.
            This property is typically rendered as a <c>disabled="disabled"</c> attribute in the HTML
            <c>&lt;option&gt;</c> element.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Group">
            <summary>
            Represents the optgroup HTML element this item is wrapped into.
            In a select list, multiple groups with the same name are supported.
            They are compared with reference equality.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Selected">
            <summary>
            Gets or sets a value that indicates whether this <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/> is selected.
            This property is typically rendered as a <c>selected="selected"</c> attribute in the HTML
            <c>&lt;option&gt;</c> element.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Text">
            <summary>
            Gets or sets a value that indicates the display text of this <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/>.
            This property is typically rendered as the inner HTML in the HTML <c>&lt;option&gt;</c> element.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem.Value">
            <summary>
            Gets or sets a value that indicates the value of this <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem"/>.
            This property is typically rendered as a <c>value="..."</c> attribute in the HTML
            <c>&lt;option&gt;</c> element.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.SystemTextJsonHelper.Serialize(System.Object)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder">
            <summary>
            Contains methods and properties that are used to create HTML elements. This class is often used to write HTML
            helpers and tag helpers.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.#ctor(System.String)">
            <summary>
            Creates a new HTML tag that has the specified tag name.
            </summary>
            <param name="tagName">An HTML tag name.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.#ctor(Microsoft.AspNetCore.Mvc.Rendering.TagBuilder)">
            <summary>
            Creates a copy of the HTML tag passed as <paramref name="tagBuilder"/>.
            </summary>
            <param name="tagBuilder">Tag to copy.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.Attributes">
            <summary>
            Gets the set of attributes that will be written to the tag.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.InnerHtml">
            <summary>
            Gets the inner HTML content of the element.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.HasInnerHtml">
            <summary>
            Gets an indication <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.InnerHtml"/> is not empty.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.TagName">
            <summary>
            Gets the tag name for this tag.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.TagRenderMode">
            <summary>
            The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.TagRenderMode"/> with which the tag is written.
            </summary>
            <remarks>Defaults to <see cref="F:Microsoft.AspNetCore.Mvc.Rendering.TagRenderMode.Normal"/>.</remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.AddCssClass(System.String)">
            <summary>
            Adds a CSS class to the list of CSS classes in the tag.
            If there are already CSS classes on the tag then a space character and the new class will be appended to
            the existing list.
            </summary>
            <param name="value">The CSS class name to add.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.CreateSanitizedId(System.String,System.String)">
            <summary>
            Returns a valid HTML 4.01 "id" attribute value for an element with the given <paramref name="name"/>.
            </summary>
            <param name="name">
            The fully-qualified expression name, ignoring the current model. Also the original HTML element name.
            </param>
            <param name="invalidCharReplacement">
            The <see cref="T:System.String"/> (normally a single <see cref="T:System.Char"/>) to substitute for invalid characters in
            <paramref name="name"/>.
            </param>
            <returns>
            Valid HTML 4.01 "id" attribute value for an element with the given <paramref name="name"/>.
            </returns>
            <remarks>
            Valid "id" attributes are defined in <see href="https://www.w3.org/TR/html401/types.html#type-id"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.GenerateId(System.String,System.String)">
            <summary>
            Adds a valid HTML 4.01 "id" attribute for an element with the given <paramref name="name"/>. Does
            nothing if <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.Attributes"/> already contains an "id" attribute or the <paramref name="name"/>
            is <c>null</c> or empty.
            </summary>
            <param name="name">
            The fully-qualified expression name, ignoring the current model. Also the original HTML element name.
            </param>
            <param name="invalidCharReplacement">
            The <see cref="T:System.String"/> (normally a single <see cref="T:System.Char"/>) to substitute for invalid characters in
            <paramref name="name"/>.
            </param>
            <seealso cref="M:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.CreateSanitizedId(System.String,System.String)"/>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.MergeAttribute(System.String,System.String)">
            <summary>
            Merge an attribute.
            </summary>
            <param name="key">The attribute key.</param>
            <param name="value">The attribute value.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.MergeAttribute(System.String,System.String,System.Boolean)">
            <summary>
            Merge an attribute.
            </summary>
            <param name="key">The attribute key.</param>
            <param name="value">The attribute value.</param>
            <param name="replaceExisting">Whether to replace an existing value.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.MergeAttributes``2(System.Collections.Generic.IDictionary{``0,``1})">
            <summary>
            Merge an attribute dictionary.
            </summary>
            <typeparam name="TKey">The key type.</typeparam>
            <typeparam name="TValue">The value type.</typeparam>
            <param name="attributes">The attributes.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.MergeAttributes``2(System.Collections.Generic.IDictionary{``0,``1},System.Boolean)">
            <summary>
            Merge an attribute dictionary.
            </summary>
            <typeparam name="TKey">The key type.</typeparam>
            <typeparam name="TValue">The value type.</typeparam>
            <param name="attributes">The attributes.</param>
            <param name="replaceExisting">Whether to replace existing attributes.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.WriteTo(System.IO.TextWriter,System.Text.Encodings.Web.HtmlEncoder)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.RenderBody">
            <summary>
            Returns an <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> that renders the body.
            </summary>
            <returns>An <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> that renders the body.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.RenderStartTag">
            <summary>
            Returns an <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> that renders the start tag.
            </summary>
            <returns>An <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> that renders the start tag.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.RenderEndTag">
            <summary>
            Returns an <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> that renders the end tag.
            </summary>
            <returns>An <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> that renders the end tag.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.TagBuilder.RenderSelfClosingTag">
            <summary>
            Returns an <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> that renders the self-closing tag.
            </summary>
            <returns>An <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> that renders the self-closing tag.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Rendering.TagRenderMode">
            <summary>
            Specifies constants for tag rendering modes.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Rendering.TagRenderMode.Normal">
            <summary>
            Normal mode.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Rendering.TagRenderMode.StartTag">
            <summary>
            Start tag mode.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Rendering.TagRenderMode.EndTag">
            <summary>
            End tag mode.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Rendering.TagRenderMode.SelfClosing">
            <summary>
            Self closing mode.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Rendering.ViewComponentHelperExtensions">
            <summary>
            Extension methods for <see cref="T:Microsoft.AspNetCore.Mvc.IViewComponentHelper"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.ViewComponentHelperExtensions.InvokeAsync(Microsoft.AspNetCore.Mvc.IViewComponentHelper,System.String)">
            <summary>
            Invokes a view component with the specified <paramref name="name"/>.
            </summary>
            <param name="helper">The <see cref="T:Microsoft.AspNetCore.Mvc.IViewComponentHelper"/>.</param>
            <param name="name">The name of the view component.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that on completion returns the rendered <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent" />.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.ViewComponentHelperExtensions.InvokeAsync(Microsoft.AspNetCore.Mvc.IViewComponentHelper,System.Type)">
            <summary>
            Invokes a view component of type <paramref name="componentType" />.
            </summary>
            <param name="helper">The <see cref="T:Microsoft.AspNetCore.Mvc.IViewComponentHelper"/>.</param>
            <param name="componentType">The view component <see cref="T:System.Type"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that on completion returns the rendered <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent" />.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.ViewComponentHelperExtensions.InvokeAsync``1(Microsoft.AspNetCore.Mvc.IViewComponentHelper,System.Object)">
            <summary>
            Invokes a view component of type <typeparamref name="TComponent"/>.
            </summary>
            <param name="helper">The <see cref="T:Microsoft.AspNetCore.Mvc.IViewComponentHelper"/>.</param>
            <param name="arguments">Arguments to be passed to the invoked view component method.</param>
            <typeparam name="TComponent">The <see cref="T:System.Type"/> of the view component.</typeparam>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that on completion returns the rendered <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent" />.
            </returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.ViewComponentHelperExtensions.InvokeAsync``1(Microsoft.AspNetCore.Mvc.IViewComponentHelper)">
            <summary>
            Invokes a view component of type <typeparamref name="TComponent"/>.
            </summary>
            <param name="helper">The <see cref="T:Microsoft.AspNetCore.Mvc.IViewComponentHelper"/>.</param>
            <typeparam name="TComponent">The <see cref="T:System.Type"/> of the view component.</typeparam>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that on completion returns the rendered <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent" />.
            </returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Rendering.ViewContext">
            <summary>
            Context for view execution.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.#ctor">
            <summary>
            Creates an empty <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.ViewContext"/>.
            </summary>
            <remarks>
            The default constructor is provided for unit test purposes only.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.#ctor(Microsoft.AspNetCore.Mvc.ActionContext,Microsoft.AspNetCore.Mvc.ViewEngines.IView,Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary,Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary,System.IO.TextWriter,Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelperOptions)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.ViewContext"/>.
            </summary>
            <param name="actionContext">The <see cref="T:Microsoft.AspNetCore.Mvc.ActionContext"/>.</param>
            <param name="view">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewEngines.IView"/> being rendered.</param>
            <param name="viewData">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary"/>.</param>
            <param name="tempData">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary"/>.</param>
            <param name="writer">The <see cref="T:System.IO.TextWriter"/> to render output to.</param>
            <param name="htmlHelperOptions">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.HtmlHelperOptions"/> to apply to this instance.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.#ctor(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,Microsoft.AspNetCore.Mvc.ViewEngines.IView,Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary,System.IO.TextWriter)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.ViewContext"/>.
            </summary>
            <param name="viewContext">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.ViewContext"/> to copy values from.</param>
            <param name="view">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewEngines.IView"/> being rendered.</param>
            <param name="viewData">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary"/>.</param>
            <param name="writer">The <see cref="T:System.IO.TextWriter"/> to render output to.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.FormContext">
            <summary>
            Gets or sets the <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.FormContext"/> for the form element being rendered.
            A default context is returned if no form is currently being rendered.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.ClientValidationEnabled">
            <summary>
            Gets or sets a value that indicates whether client-side validation is enabled.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.Html5DateRenderingMode">
            <summary>
            Set this property to <see cref="F:Microsoft.AspNetCore.Mvc.Rendering.Html5DateRenderingMode.CurrentCulture" /> to have templated helpers such as
            <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.Editor(System.String,System.String,System.String,System.Object)" /> and <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper`1.EditorFor``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String,System.String,System.Object)" /> render date and time
            values using the current culture. By default, these helpers render dates and times as RFC 3339 compliant strings.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.ValidationSummaryMessageElement">
            <summary>
            Element name used to wrap a top-level message generated by <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ValidationSummary(System.Boolean,System.String,System.Object,System.String)"/> and
            other overloads.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.ValidationMessageElement">
            <summary>
            Element name used to wrap a top-level message generated by <see cref="M:Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper.ValidationMessage(System.String,System.String,System.Object,System.String)"/> and
            other overloads.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.CheckBoxHiddenInputRenderMode">
            <summary>
            Gets or sets the way hidden inputs are rendered for checkbox tag helpers and html helpers.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.ViewBag">
            <summary>
            Gets the dynamic view bag.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.View">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Mvc.ViewEngines.IView"/> currently being rendered, if any.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.ViewData">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.TempData">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary"/> instance.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.Writer">
            <summary>
            Gets or sets the <see cref="T:System.IO.TextWriter"/> used to write the output.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.ExecutingFilePath">
            <summary>
            Gets or sets the path of the view file currently being rendered.
            </summary>
            <remarks>
            The rendering of a view may involve one or more files (e.g. _ViewStart, Layouts etc).
            This property contains the path of the file currently being rendered.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.Items">
            <summary>
            Gets a key/value collection that can be used to share data within the scope of this view execution.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.GetFormContextForClientValidation">
            <summary>
            Gets the <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.FormContext"/> if <see cref="P:Microsoft.AspNetCore.Mvc.Rendering.ViewContext.ClientValidationEnabled"/> is enabled.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.Rendering.RenderMode">
            <summary>
            Describes the render mode of the component.
            </summary>
            <remarks>
            The rendering mode determines how the component gets rendered on the page. It configures whether the component
            is prerendered into the page or not and whether it simply renders static HTML on the page or if it includes the necessary
            information to bootstrap a Blazor application from the user agent.
            </remarks>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Rendering.RenderMode.Static">
            <summary>
            Renders the component into static HTML.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Rendering.RenderMode.Server">
            <summary>
            Renders a marker for a Blazor server-side application. This doesn't include any output from the component.
            When the user-agent starts, it uses this marker to bootstrap a blazor application.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Rendering.RenderMode.ServerPrerendered">
            <summary>
            Renders the component into static HTML and includes a marker for a Blazor server-side application.
            When the user-agent starts, it uses this marker to bootstrap a blazor application.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Rendering.RenderMode.WebAssembly">
            <summary>
            Renders a marker for a Blazor webassembly application. This doesn't include any output from the component.
            When the user-agent starts, it uses this marker to bootstrap a blazor client-side application.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.Rendering.RenderMode.WebAssemblyPrerendered">
            <summary>
            Renders the component into static HTML and includes a marker for a Blazor webassembly application.
            When the user-agent starts, it uses this marker to bootstrap a blazor client-side application.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.SkipStatusCodePagesAttribute">
            <summary>
            A filter that prevents execution of the StatusCodePages middleware.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.SkipStatusCodePagesAttribute.OnResourceExecuted(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutedContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.SkipStatusCodePagesAttribute.OnResourceExecuting(Microsoft.AspNetCore.Mvc.Filters.ResourceExecutingContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.TempDataAttribute">
            <summary>
            Properties decorated with <see cref="T:Microsoft.AspNetCore.Mvc.TempDataAttribute"/> will have their values stored in
            and loaded from the <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary"/>. <see cref="T:Microsoft.AspNetCore.Mvc.TempDataAttribute"/>
            is supported on properties of Controllers, Razor Pages, and Razor Page Models.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.TempDataAttribute.Key">
            <summary>
            Gets or sets the key used to get or add the property from value from <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary"/>.
            When unspecified, the key is derived from the property name.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ValidateAntiForgeryTokenAttribute">
            <summary>
            Specifies that the class or method that this attribute is applied validates the anti-forgery token.
            If the anti-forgery token is not available, or if the token is invalid, the validation will fail
            and the action method will not execute.
            </summary>
            <remarks>
            This attribute helps defend against cross-site request forgery. It won't prevent other forgery or tampering
            attacks.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ValidateAntiForgeryTokenAttribute.Order">
            <summary>
            Gets the order value for determining the order of execution of filters. Filters execute in
            ascending numeric value of the <see cref="P:Microsoft.AspNetCore.Mvc.ValidateAntiForgeryTokenAttribute.Order"/> property.
            </summary>
            <remarks>
            <para>
            Filters are executed in an ordering determined by an ascending sort of the <see cref="P:Microsoft.AspNetCore.Mvc.ValidateAntiForgeryTokenAttribute.Order"/> property.
            </para>
            <para>
            The default Order for this attribute is 1000 because it must run after any filter which does authentication
            or login in order to allow them to behave as expected (ie Unauthenticated or Redirect instead of 400).
            </para>
            <para>
            Look at <see cref="P:Microsoft.AspNetCore.Mvc.Filters.IOrderedFilter.Order"/> for more detailed info.
            </para>
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ValidateAntiForgeryTokenAttribute.IsReusable">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ValidateAntiForgeryTokenAttribute.CreateInstance(System.IServiceProvider)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewComponent">
            <summary>
            A base class for view components.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewComponent.HttpContext">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewComponent.Request">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Http.HttpRequest"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewComponent.User">
            <summary>
            Gets the <see cref="T:System.Security.Principal.IPrincipal"/> for the current user.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewComponent.UserClaimsPrincipal">
            <summary>
            Gets the <see cref="T:System.Security.Claims.ClaimsPrincipal"/> for the current user.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewComponent.RouteData">
            <summary>
            Gets the <see cref="P:Microsoft.AspNetCore.Mvc.ViewComponent.RouteData"/> for the current request.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewComponent.ViewBag">
            <summary>
            Gets the view bag.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewComponent.ModelState">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewComponent.Url">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Mvc.IUrlHelper"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewComponent.ViewComponentContext">
            <summary>
            Gets or sets the <see cref="P:Microsoft.AspNetCore.Mvc.ViewComponent.ViewComponentContext"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewComponent.ViewContext">
            <summary>
            Gets the <see cref="P:Microsoft.AspNetCore.Mvc.ViewComponent.ViewContext"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewComponent.ViewData">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewComponent.TempData">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewComponent.ViewEngine">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Mvc.ViewEngines.ICompositeViewEngine"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewComponent.Content(System.String)">
            <summary>
            Returns a result which will render HTML encoded text.
            </summary>
            <param name="content">The content, will be HTML encoded before output.</param>
            <returns>A <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.ContentViewComponentResult"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewComponent.View">
            <summary>
            Returns a result which will render the partial view with name <c>&quot;Default&quot;</c>.
            </summary>
            <returns>A <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.ViewViewComponentResult"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewComponent.View(System.String)">
            <summary>
            Returns a result which will render the partial view with name <paramref name="viewName"/>.
            </summary>
            <param name="viewName">The name of the partial view to render.</param>
            <returns>A <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.ViewViewComponentResult"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewComponent.View``1(``0)">
            <summary>
            Returns a result which will render the partial view with name <c>&quot;Default&quot;</c>.
            </summary>
            <param name="model">The model object for the view.</param>
            <returns>A <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.ViewViewComponentResult"/>.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewComponent.View``1(System.String,``0)">
            <summary>
            Returns a result which will render the partial view with name <paramref name="viewName"/>.
            </summary>
            <param name="viewName">The name of the partial view to render.</param>
            <param name="model">The model object for the view.</param>
            <returns>A <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.ViewViewComponentResult"/>.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewComponentAttribute">
            <summary>
            Indicates the class and all subclasses are view components. Optionally specifies a view component's name. If
            defining a base class for multiple view components, associate this attribute with that base.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewComponentAttribute.Name">
            <summary>
            Gets or sets the name of the view component. Do not supply a name in an attribute associated with a view
            component base class.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewComponentResult">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> which renders a view component to the response.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewComponentResult.Arguments">
            <summary>
            Gets or sets the arguments provided to the view component.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewComponentResult.StatusCode">
            <summary>
            Gets or sets the HTTP status code.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewComponentResult.ViewComponentName">
            <summary>
            Gets or sets the name of the view component to invoke. Will be ignored if <see cref="P:Microsoft.AspNetCore.Mvc.ViewComponentResult.ViewComponentType"/>
            is set to a non-<c>null</c> value.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewComponentResult.ViewComponentType">
            <summary>
            Gets or sets the type of the view component to invoke.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewComponentResult.Model">
            <summary>
            Get the view data model.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewComponentResult.ViewData">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary"/> for this result.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewComponentResult.TempData">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary"/> for this result.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewComponentResult.ContentType">
            <summary>
            Gets or sets the Content-Type header for the response.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewComponentResult.ExecuteResultAsync(Microsoft.AspNetCore.Mvc.ActionContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewComponents.ContentViewComponentResult">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.IViewComponentResult"/> which writes text when executed.
            </summary>
            <remarks>
            The provided content will be HTML-encoded when written. To write pre-encoded content, use an
            <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.HtmlContentViewComponentResult"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewComponents.ContentViewComponentResult.#ctor(System.String)">
            <summary>
            Initializes a new <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.ContentViewComponentResult"/>.
            </summary>
            <param name="content">Content to write. The content will be HTML encoded when written.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewComponents.ContentViewComponentResult.Content">
            <summary>
            Gets the content.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewComponents.ContentViewComponentResult.Execute(Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext)">
            <summary>
            Encodes and writes the <see cref="P:Microsoft.AspNetCore.Mvc.ViewComponents.ContentViewComponentResult.Content"/>.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewComponents.ContentViewComponentResult.ExecuteAsync(Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext)">
            <summary>
            Encodes and writes the <see cref="P:Microsoft.AspNetCore.Mvc.ViewComponents.ContentViewComponentResult.Content"/>.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext"/>.</param>
            <returns>A completed <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewComponents.DefaultViewComponentActivator">
            <summary>
            A default implementation of <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.IViewComponentActivator"/>.
            </summary>
            <remarks>
            The <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.DefaultViewComponentActivator"/> can provide the current instance of
            <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext"/> to a public property of a view component marked
            with <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContextAttribute"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewComponents.DefaultViewComponentActivator.#ctor(Microsoft.AspNetCore.Mvc.Infrastructure.ITypeActivatorCache)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.DefaultViewComponentActivator"/> class.
            </summary>
            <param name="typeActivatorCache">
            The <see cref="T:Microsoft.AspNetCore.Mvc.Infrastructure.ITypeActivatorCache"/> used to create new view component instances.
            </param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewComponents.DefaultViewComponentActivator.Create(Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewComponents.DefaultViewComponentActivator.Release(Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext,System.Object)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewComponents.DefaultViewComponentDescriptorCollectionProvider">
            <summary>
            A default implementation of <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.IViewComponentDescriptorCollectionProvider"/>
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewComponents.DefaultViewComponentDescriptorCollectionProvider.#ctor(Microsoft.AspNetCore.Mvc.ViewComponents.IViewComponentDescriptorProvider)">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.DefaultViewComponentDescriptorCollectionProvider"/>.
            </summary>
            <param name="descriptorProvider">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.IViewComponentDescriptorProvider"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewComponents.DefaultViewComponentDescriptorCollectionProvider.ViewComponents">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewComponents.DefaultViewComponentDescriptorProvider">
            <summary>
            Default implementation of <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.IViewComponentDescriptorProvider"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewComponents.DefaultViewComponentDescriptorProvider.#ctor(Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.DefaultViewComponentDescriptorProvider"/>.
            </summary>
            <param name="partManager">The <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewComponents.DefaultViewComponentDescriptorProvider.GetViewComponents">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewComponents.DefaultViewComponentDescriptorProvider.GetCandidateTypes">
            <summary>
            Gets the candidate <see cref="T:System.Reflection.TypeInfo"/> instances provided by the <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager"/>.
            </summary>
            <returns>A list of <see cref="T:System.Reflection.TypeInfo"/> instances.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewComponents.DefaultViewComponentFactory">
            <summary>
            Default implementation for <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.IViewComponentFactory"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewComponents.DefaultViewComponentFactory.#ctor(Microsoft.AspNetCore.Mvc.ViewComponents.IViewComponentActivator)">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.DefaultViewComponentFactory"/>
            </summary>
            <param name="activator">
            The <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.IViewComponentActivator"/> used to create new view component instances.
            </param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewComponents.DefaultViewComponentFactory.CreateViewComponent(Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewComponents.DefaultViewComponentFactory.ReleaseViewComponent(Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewComponents.DefaultViewComponentFactory.ReleaseViewComponentAsync(Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext,System.Object)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewComponents.DefaultViewComponentHelper">
            <summary>
            Default implementation for <see cref="T:Microsoft.AspNetCore.Mvc.IViewComponentHelper"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewComponents.DefaultViewComponentHelper.#ctor(Microsoft.AspNetCore.Mvc.ViewComponents.IViewComponentDescriptorCollectionProvider,System.Text.Encodings.Web.HtmlEncoder,Microsoft.AspNetCore.Mvc.ViewComponents.IViewComponentSelector,Microsoft.AspNetCore.Mvc.ViewComponents.IViewComponentInvokerFactory,Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.IViewBufferScope)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.DefaultViewComponentHelper"/>.
            </summary>
            <param name="descriptorProvider">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.IViewComponentDescriptorCollectionProvider"/>
            used to locate view components.</param>
            <param name="htmlEncoder">The <see cref="T:System.Text.Encodings.Web.HtmlEncoder"/>.</param>
            <param name="selector">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.IViewComponentSelector"/>.</param>
            <param name="invokerFactory">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.IViewComponentInvokerFactory"/>.</param>
            <param name="viewBufferScope">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.IViewBufferScope"/> that manages the lifetime of
            <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.Buffers.ViewBuffer"/> instances.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewComponents.DefaultViewComponentHelper.Contextualize(Microsoft.AspNetCore.Mvc.Rendering.ViewContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewComponents.DefaultViewComponentHelper.InvokeAsync(System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewComponents.DefaultViewComponentHelper.InvokeAsync(System.Type,System.Object)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewComponents.DefaultViewComponentInvoker">
            <summary>
            Default implementation for <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.IViewComponentInvoker"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewComponents.DefaultViewComponentInvoker.#ctor(Microsoft.AspNetCore.Mvc.ViewComponents.IViewComponentFactory,Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentInvokerCache,System.Diagnostics.DiagnosticListener,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.DefaultViewComponentInvoker"/>.
            </summary>
            <param name="viewComponentFactory">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.IViewComponentFactory"/>.</param>
            <param name="viewComponentInvokerCache">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentInvokerCache"/>.</param>
            <param name="diagnosticListener">The <see cref="T:System.Diagnostics.DiagnosticListener"/>.</param>
            <param name="logger">The <see cref="T:Microsoft.Extensions.Logging.ILogger"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewComponents.DefaultViewComponentInvoker.InvokeAsync(Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewComponents.DefaultViewComponentInvokerFactory.CreateInstance(Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewComponents.DefaultViewComponentSelector">
            <summary>
            Default implementation of <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.IViewComponentSelector"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewComponents.DefaultViewComponentSelector.#ctor(Microsoft.AspNetCore.Mvc.ViewComponents.IViewComponentDescriptorCollectionProvider)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.DefaultViewComponentSelector"/>.
            </summary>
            <param name="descriptorProvider">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.IViewComponentDescriptorCollectionProvider"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewComponents.DefaultViewComponentSelector.SelectComponent(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewComponents.HtmlContentViewComponentResult">
            <summary>
            An <see cref="T:Microsoft.AspNetCore.Mvc.IViewComponentResult"/> which writes an <see cref="T:Microsoft.AspNetCore.Html.IHtmlContent"/> when executed.
            </summary>
            <remarks>
            The provided content will be HTML-encoded as specified when the content was created. To encoded and write
            text, use a <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.ContentViewComponentResult"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewComponents.HtmlContentViewComponentResult.#ctor(Microsoft.AspNetCore.Html.IHtmlContent)">
            <summary>
            Initializes a new <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.HtmlContentViewComponentResult"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewComponents.HtmlContentViewComponentResult.EncodedContent">
            <summary>
            Gets the encoded content.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewComponents.HtmlContentViewComponentResult.Execute(Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext)">
            <summary>
            Writes the <see cref="P:Microsoft.AspNetCore.Mvc.ViewComponents.HtmlContentViewComponentResult.EncodedContent"/>.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext"/>.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewComponents.HtmlContentViewComponentResult.ExecuteAsync(Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext)">
            <summary>
            Writes the <see cref="P:Microsoft.AspNetCore.Mvc.ViewComponents.HtmlContentViewComponentResult.EncodedContent"/>.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext"/>.</param>
            <returns>A completed <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewComponents.IViewComponentActivator">
            <summary>
            Provides methods to instantiate and release a ViewComponent.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewComponents.IViewComponentActivator.Create(Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext)">
            <summary>
            Instantiates a ViewComponent.
            </summary>
            <param name="context">
            The <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext"/> for the executing <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponent"/>.
            </param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewComponents.IViewComponentActivator.Release(Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext,System.Object)">
            <summary>
            Releases a ViewComponent instance.
            </summary>
            <param name="context">
            The <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext"/> associated with the <paramref name="viewComponent"/>.
            </param>
            <param name="viewComponent">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponent"/> to release.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewComponents.IViewComponentActivator.ReleaseAsync(Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext,System.Object)">
            <summary>
            Releases a ViewComponent instance.
            </summary>
            <param name="context">
            The <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext"/> associated with the <paramref name="viewComponent"/>.
            </param>
            <param name="viewComponent">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponent"/> to release.</param>
            <returns>A <see cref="T:System.Threading.Tasks.ValueTask"/> that completes when the view component has been disposed.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewComponents.IViewComponentDescriptorCollectionProvider">
            <summary>
            Provides the currently cached collection of <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor"/>.
            </summary>
            <remarks>
            <para>
            The default implementation does not update the cache, it is up to the user
            to create or use an implementation that can update the available view components in
            the application. The implementor is also responsible for updating the
            <see cref="P:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptorCollection.Version"/> in a thread safe way.
            </para>
            <para>
            Default consumers of this service, are aware of the version and will recache
            data as appropriate, but rely on the version being unique.
            </para>
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewComponents.IViewComponentDescriptorCollectionProvider.ViewComponents">
            <summary>
            Returns the current cached <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptorCollection"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewComponents.IViewComponentDescriptorProvider">
            <summary>
            Discovers the view components in the application.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewComponents.IViewComponentDescriptorProvider.GetViewComponents">
            <summary>
            Gets the set of <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor"/>.
            </summary>
            <returns>A list of <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor"/>.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewComponents.IViewComponentFactory">
            <summary>
            Provides methods for creation and disposal of view components.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewComponents.IViewComponentFactory.CreateViewComponent(Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext)">
            <summary>
            Creates a new controller for the specified <paramref name="context"/>.
            </summary>
            <param name="context"><see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext"/> for the view component.</param>
            <returns>The view component.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewComponents.IViewComponentFactory.ReleaseViewComponent(Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext,System.Object)">
            <summary>
            Releases a view component instance.
            </summary>
            <param name="context">The context associated with the <paramref name="component"/>.</param>
            <param name="component">The view component.</param>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewComponents.IViewComponentFactory.ReleaseViewComponentAsync(Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext,System.Object)">
            <summary>
            Releases a view component instance asynchronously.
            </summary>
            <param name="context">The context associated with the <paramref name="component"/>.</param>
            <param name="component">The view component.</param>
            <returns>A <see cref="T:System.Threading.Tasks.ValueTask"/> that completes when the view component has been released.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewComponents.IViewComponentInvoker">
            <summary>
            Specifies the contract for execution of a view component.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewComponents.IViewComponentInvoker.InvokeAsync(Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext)">
            <summary>
            Executes the view component specified by <see cref="P:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext.ViewComponentDescriptor"/>
            of <paramref name="context"/> and writes the result to <see cref="P:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext.Writer"/>.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation of execution.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewComponents.IViewComponentInvokerFactory">
            <summary>
            Interface that exposes the ability to create an <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.IViewComponentInvoker"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewComponents.IViewComponentInvokerFactory.CreateInstance(Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext)">
            <summary>
            Creates a <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.IViewComponentInvoker"/>.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext"/>.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.IViewComponentInvoker"/>.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewComponents.IViewComponentSelector">
            <summary>
            Selects a view component based on a view component name.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewComponents.IViewComponentSelector.SelectComponent(System.String)">
            <summary>
            Selects a view component based on <paramref name="componentName"/>.
            </summary>
            <param name="componentName">The view component name.</param>
            <returns>A <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor"/>, or <c>null</c> if no match is found.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewComponents.ServiceBasedViewComponentActivator">
            <summary>
            A <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.IViewComponentActivator"/> that retrieves view components as services from the request's
            <see cref="T:System.IServiceProvider"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewComponents.ServiceBasedViewComponentActivator.Create(Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewComponents.ServiceBasedViewComponentActivator.Release(Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext,System.Object)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext">
            <summary>
            A context for view components.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext.#ctor">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext"/>.
            </summary>
            <remarks>
            The default constructor is provided for unit test purposes only.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext.#ctor(Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor,System.Collections.Generic.IDictionary{System.String,System.Object},System.Text.Encodings.Web.HtmlEncoder,Microsoft.AspNetCore.Mvc.Rendering.ViewContext,System.IO.TextWriter)">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext"/>.
            </summary>
            <param name="viewComponentDescriptor">
            The <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext"/> for the view component being invoked.
            </param>
            <param name="arguments">The view component arguments.</param>
            <param name="htmlEncoder">The <see cref="P:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext.HtmlEncoder"/> to use.</param>
            <param name="viewContext">The <see cref="P:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext.ViewContext"/>.</param>
            <param name="writer">The <see cref="T:System.IO.TextWriter"/> for writing output.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext.Arguments">
            <summary>
            Gets or sets the view component arguments.
            </summary>
            <remarks>
            The property setter is provided for unit test purposes only.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext.HtmlEncoder">
            <summary>
            Gets or sets the <see cref="T:System.Text.Encodings.Web.HtmlEncoder"/>.
            </summary>
            <remarks>
            The property setter is provided for unit test purposes only.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext.ViewComponentDescriptor">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor"/> for the view component being invoked.
            </summary>
            <remarks>
            The property setter is provided for unit test purposes only.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext.ViewContext">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.ViewContext"/>.
            </summary>
            <remarks>
            The property setter is provided for unit test purposes only.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext.ViewData">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary"/>.
            </summary>
            <remarks>
            This is an alias for <c>ViewContext.ViewData</c>.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext.TempData">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary"/>.
            </summary>
            <remarks>
            This is an alias for <c>ViewContext.TempData</c>.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext.Writer">
            <summary>
            Gets the <see cref="T:System.IO.TextWriter"/> for output.
            </summary>
            <remarks>
            This is an alias for <c>ViewContext.Writer</c>.
            </remarks>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContextAttribute">
            <summary>
            Specifies that a controller property should be set with the current
            <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext"/> when creating the view component. The property must have a public
            set method.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentConventions">
            <summary>
            Static class that adds standard view component convention methods. This class cannot be inherited.
            </summary>
        </member>
        <member name="F:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentConventions.ViewComponentSuffix">
            <summary>
            The suffix for a view component name.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentConventions.GetComponentName(System.Reflection.TypeInfo)">
            <summary>
            Gets the name of a component.
            </summary>
            <param name="componentType"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentConventions.GetComponentFullName(System.Reflection.TypeInfo)">
            <summary>
            Get the component's full name from a type from the <see cref="P:Microsoft.AspNetCore.Mvc.ViewComponentAttribute.Name"/> first.
            If not defined, the full name is the Namespace with the <see cref="M:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentConventions.GetShortNameByConvention(System.Reflection.TypeInfo)"/>.
            </summary>
            <param name="componentType">The component type.</param>
            <returns>The full name of the component.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentConventions.IsComponent(System.Reflection.TypeInfo)">
            <summary>
            Returns <see langword="true"/> if the type is a public, non abstract, non generic class which
            defines <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponentAttribute"/>, but not the <see cref="T:Microsoft.AspNetCore.Mvc.NonViewComponentAttribute"/>
            and has a name that ends in ViewComponent.
            </summary>
            <param name="typeInfo">The <see cref="T:System.Reflection.TypeInfo"/> to inspect.</param>
            <returns>If the type is a component.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor">
            <summary>
            A descriptor for a view component.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor.#ctor">
            <summary>
            Creates a new <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor.DisplayName">
            <summary>
            Gets or sets the display name of the view component.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor.FullName">
            <summary>
            Gets or sets the full name.
            </summary>
            <remarks>
            <para>
            The full name is defaulted to the full namespace of the view component class, prepended to
            the class name with a '.' character as the separator. If the view component class uses
            <c>ViewComponent</c> as a suffix, the suffix will be omitted from the <see cref="P:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor.FullName"/>.
            </para>
            <example>
                Class Name: Contoso.Products.LoginViewComponent
                View Component FullName: Contoso.Products.Login
            </example>
            <example>
                Class Name: Contoso.Blog.Tags
                View Component FullName: Contoso.Blog.Tags
            </example>
            <para>
            If <see cref="P:Microsoft.AspNetCore.Mvc.ViewComponentAttribute.Name"/> is used to set a name, then this will be used as
            the <see cref="P:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor.FullName"/>.
            </para>
            <example>
                [ViewComponent(Name = "Contoso.Forum.UsersOnline")]
                public class OnlineUsersViewComponent
                {
                }
                View Component FullName: Contoso.Forum.UsersOnline
            </example>
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor.Id">
            <summary>
            Gets or set the generated unique identifier for this <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor.ShortName">
            <summary>
            Gets or sets the short name.
            </summary>
            <remarks>
            <para>
            The short name is defaulted to the name of the view component class. If the view component class uses
            <c>ViewComponent</c> as a suffix, the suffix will be omitted from the <see cref="P:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor.ShortName"/>.
            </para>
            <example>
                Class Name: Contoso.Products.LoginViewComponent
                View Component ShortName: Login
            </example>
            <example>
                Class Name: Contoso.Blog.Tags
                View Component ShortName: Tags
            </example>
            <para>
            If <see cref="P:Microsoft.AspNetCore.Mvc.ViewComponentAttribute.Name"/> is used to set a name, then the last segment of the
            value (using '.' as a separate) will be used as the <see cref="P:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor.ShortName"/>.
            </para>
            <example>
                [ViewComponent(Name = "Contoso.Forum.UsersOnline")]
                public class OnlineUsersViewComponent
                {
                }
                View Component ShortName: UsersOnline
            </example>
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor.TypeInfo">
            <summary>
            Gets or sets the <see cref="T:System.Reflection.TypeInfo"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor.MethodInfo">
            <summary>
            Gets or sets the <see cref="T:System.Reflection.MethodInfo"/> to invoke.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor.Parameters">
            <summary>
            Gets or sets the parameters associated with the method described by <see cref="P:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor.MethodInfo"/>.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptorCollection">
            <summary>
            A cached collection of <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor" />.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptorCollection.#ctor(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptor},System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptorCollection"/>.
            </summary>
            <param name="items">The result of view component discovery</param>
            <param name="version">The unique version of discovered view components.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptorCollection.Items">
            <summary>
            Returns the cached <see cref="T:System.Collections.Generic.IReadOnlyList`1"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentDescriptorCollection.Version">
            <summary>
            Returns the unique version of the currently cached items.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentFeature">
            <summary>
            The list of view component types in an MVC application.The <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentFeature"/> can be populated
            using the <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager"/> that is available during startup at <see cref="P:Microsoft.Extensions.DependencyInjection.IMvcBuilder.PartManager"/>
            and <see cref="P:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder.PartManager"/> or at a later stage by requiring the <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPartManager"/>
            as a dependency in a component.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentFeature.ViewComponents">
            <summary>
            Gets the list of view component types in an MVC application.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentFeatureProvider">
            <summary>
            Discovers view components from a list of <see cref="T:Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPart"/> instances.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentFeatureProvider.PopulateFeature(System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Mvc.ApplicationParts.ApplicationPart},Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentFeature)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewComponents.ViewViewComponentResult">
            <summary>
            A <see cref="T:Microsoft.AspNetCore.Mvc.IViewComponentResult"/> that renders a partial view when executed.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewComponents.ViewViewComponentResult.ViewName">
            <summary>
            Gets or sets the view name.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewComponents.ViewViewComponentResult.ViewData">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewComponents.ViewViewComponentResult.TempData">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary"/> instance.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewComponents.ViewViewComponentResult.ViewEngine">
            <summary>
            Gets or sets the <see cref="P:Microsoft.AspNetCore.Mvc.ViewComponents.ViewViewComponentResult.ViewEngine"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewComponents.ViewViewComponentResult.Execute(Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext)">
            <summary>
            Locates and renders a view specified by <see cref="P:Microsoft.AspNetCore.Mvc.ViewComponents.ViewViewComponentResult.ViewName"/>. If <see cref="P:Microsoft.AspNetCore.Mvc.ViewComponents.ViewViewComponentResult.ViewName"/> is <c>null</c>,
            then the view name searched for is<c>&quot;Default&quot;</c>.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext"/> for the current component execution.</param>
            <remarks>
            This method synchronously calls and blocks on <see cref="M:Microsoft.AspNetCore.Mvc.ViewComponents.ViewViewComponentResult.ExecuteAsync(Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext)"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewComponents.ViewViewComponentResult.ExecuteAsync(Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext)">
            <summary>
            Locates and renders a view specified by <see cref="P:Microsoft.AspNetCore.Mvc.ViewComponents.ViewViewComponentResult.ViewName"/>. If <see cref="P:Microsoft.AspNetCore.Mvc.ViewComponents.ViewViewComponentResult.ViewName"/> is <c>null</c>,
            then the view name searched for is<c>&quot;Default&quot;</c>.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewComponents.ViewComponentContext"/> for the current component execution.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> which will complete when view rendering is completed.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewDataAttribute">
            <summary>
            Properties decorated with <see cref="T:Microsoft.AspNetCore.Mvc.ViewDataAttribute"/> will have their values stored in
            and loaded from the <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary"/>. <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary"/>
            is supported on properties of Controllers, and Razor Page handlers.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewDataAttribute.Key">
            <summary>
            Gets or sets the key used to get or add the property from value from <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary"/>.
            When unspecified, the key is the property name.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewEngines.CompositeViewEngine">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewEngines.CompositeViewEngine.#ctor(Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Mvc.MvcViewOptions})">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.AspNetCore.Mvc.ViewEngines.CompositeViewEngine"/>.
            </summary>
            <param name="optionsAccessor">The options accessor for <see cref="T:Microsoft.AspNetCore.Mvc.MvcViewOptions"/>.</param>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewEngines.CompositeViewEngine.ViewEngines">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewEngines.CompositeViewEngine.FindView(Microsoft.AspNetCore.Mvc.ActionContext,System.String,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewEngines.CompositeViewEngine.GetView(System.String,System.String,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewEngines.ICompositeViewEngine">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine"/> that delegates to one of a collection of view engines.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewEngines.ICompositeViewEngine.ViewEngines">
            <summary>
            Gets the list of <see cref="T:Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine"/> this instance of <see cref="T:Microsoft.AspNetCore.Mvc.ViewEngines.ICompositeViewEngine"/> delegates
            to.
            </summary>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewEngines.IView">
            <summary>
            Specifies the contract for a view.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewEngines.IView.Path">
            <summary>
            Gets the path of the view as resolved by the <see cref="T:Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewEngines.IView.RenderAsync(Microsoft.AspNetCore.Mvc.Rendering.ViewContext)">
            <summary>
            Asynchronously renders the view using the specified <paramref name="context"/>.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.Rendering.ViewContext"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that on completion renders the view.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine">
            <summary>
            Defines the contract for a view engine.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.FindView(Microsoft.AspNetCore.Mvc.ActionContext,System.String,System.Boolean)">
            <summary>
            Finds the view with the given <paramref name="viewName"/> using view locations and information from the
            <paramref name="context"/>.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.ActionContext"/>.</param>
            <param name="viewName">The name or path of the view that is rendered to the response.</param>
            <param name="isMainPage">Determines if the page being found is the main page for an action.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult"/> of locating the view.</returns>
            <remarks>Use <see cref="M:Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.GetView(System.String,System.String,System.Boolean)"/> when the absolute or relative
            path of the view is known.</remarks>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine.GetView(System.String,System.String,System.Boolean)">
            <summary>
            Gets the view with the given <paramref name="viewPath"/>, relative to <paramref name="executingFilePath"/>
            unless <paramref name="viewPath"/> is already absolute.
            </summary>
            <param name="executingFilePath">The absolute path to the currently-executing view, if any.</param>
            <param name="viewPath">The path to the view.</param>
            <param name="isMainPage">Determines if the page being found is the main page for an action.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult"/> of locating the view.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult">
            <summary>
            Represents the result of an <see cref="T:Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine" />.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult.SearchedLocations">
            <summary>
            The list of locations searched.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult.View">
            <summary>
            The <see cref="T:Microsoft.AspNetCore.Mvc.ViewEngines.IView"/>.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult.ViewName">
            <summary>
            Gets or sets the name of the view.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult.Success">
            <summary>
            Whether the result was successful
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult.NotFound(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Returns a result that represents when a view is not found.
            </summary>
            <param name="viewName">The name of the view.</param>
            <param name="searchedLocations">The locations searched.</param>
            <returns>The not found result.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult.Found(System.String,Microsoft.AspNetCore.Mvc.ViewEngines.IView)">
            <summary>
            Returns a result when a view is found.
            </summary>
            <param name="viewName">The name of the view.</param>
            <param name="view">The <see cref="T:Microsoft.AspNetCore.Mvc.ViewEngines.IView"/>.</param>
            <returns>The found result.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult.EnsureSuccessful(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Ensure this <see cref="T:Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult"/> was successful.
            </summary>
            <param name="originalLocations">
            Additional <see cref="P:Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult.SearchedLocations"/> to include in the thrown <see cref="T:System.InvalidOperationException"/>
            if <see cref="P:Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult.Success"/> is <c>false</c>.
            </param>
            <exception cref="T:System.InvalidOperationException">
            Thrown if <see cref="P:Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult.Success"/> is <c>false</c>.
            </exception>
            <returns>This <see cref="T:Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult"/> if <see cref="P:Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult.Success"/> is <c>true</c>.</returns>
        </member>
        <member name="T:Microsoft.AspNetCore.Mvc.ViewResult">
            <summary>
            Represents an <see cref="T:Microsoft.AspNetCore.Mvc.ActionResult"/> that renders a view to the response.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewResult.StatusCode">
            <summary>
            Gets or sets the HTTP status code.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewResult.ViewName">
            <summary>
            Gets or sets the name or path of the view that is rendered to the response.
            </summary>
            <remarks>
            When <c>null</c>, defaults to <see cref="P:Microsoft.AspNetCore.Mvc.Controllers.ControllerActionDescriptor.ActionName"/>.
            </remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewResult.Model">
            <summary>
            Gets the view data model.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewResult.ViewData">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary"/> for this result.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewResult.TempData">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataDictionary"/> for this result.
            </summary>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewResult.ViewEngine">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Mvc.ViewEngines.IViewEngine"/> used to locate views.
            </summary>
            <remarks>When <c>null</c>, an instance of <see cref="T:Microsoft.AspNetCore.Mvc.ViewEngines.ICompositeViewEngine"/> from
            <c>ActionContext.HttpContext.RequestServices</c> is used.</remarks>
        </member>
        <member name="P:Microsoft.AspNetCore.Mvc.ViewResult.ContentType">
            <summary>
            Gets or sets the Content-Type header for the response.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.Mvc.ViewResult.ExecuteResultAsync(Microsoft.AspNetCore.Mvc.ActionContext)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.MvcViewFeaturesMvcBuilderExtensions">
            <summary>
            Extensions methods for configuring MVC via an <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.MvcViewFeaturesMvcBuilderExtensions.AddViewOptions(Microsoft.Extensions.DependencyInjection.IMvcBuilder,System.Action{Microsoft.AspNetCore.Mvc.MvcViewOptions})">
            <summary>
            Adds configuration of <see cref="T:Microsoft.AspNetCore.Mvc.MvcViewOptions"/> for the application.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/>.</param>
            <param name="setupAction">
            An <see cref="T:System.Action`1"/> to configure the provided <see cref="T:Microsoft.AspNetCore.Mvc.MvcViewOptions"/>.
            </param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.MvcViewFeaturesMvcBuilderExtensions.AddViewComponentsAsServices(Microsoft.Extensions.DependencyInjection.IMvcBuilder)">
            <summary>
            Registers discovered view components as services in the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/>.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.MvcViewFeaturesMvcBuilderExtensions.AddSessionStateTempDataProvider(Microsoft.Extensions.DependencyInjection.IMvcBuilder)">
            <summary>
            Registers <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.SessionStateTempDataProvider"/> as the default <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataProvider"/>
            in the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/>.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.MvcViewFeaturesMvcBuilderExtensions.AddCookieTempDataProvider(Microsoft.Extensions.DependencyInjection.IMvcBuilder)">
            <summary>
            Registers <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.CookieTempDataProvider"/> as the default <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataProvider"/> in the
            <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/>.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.MvcViewFeaturesMvcBuilderExtensions.AddCookieTempDataProvider(Microsoft.Extensions.DependencyInjection.IMvcBuilder,System.Action{Microsoft.AspNetCore.Mvc.CookieTempDataProviderOptions})">
            <summary>
            Registers <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.CookieTempDataProvider"/> as the default <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataProvider"/> in the
            <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/>.</param>
            <param name="setupAction">
            An <see cref="T:System.Action`1"/> to configure the provided
            <see cref="T:Microsoft.AspNetCore.Mvc.CookieTempDataProviderOptions"/>.
            </param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/>.</returns>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.MvcViewFeaturesMvcCoreBuilderExtensions">
            <summary>
            Static class that adds extension methods to <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder"/>. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.MvcViewFeaturesMvcCoreBuilderExtensions.AddViews(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder)">
            <summary>
            Add view related services.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder"/>.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.MvcViewFeaturesMvcCoreBuilderExtensions.AddCookieTempDataProvider(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder)">
            <summary>
            Registers <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.CookieTempDataProvider"/> as the default <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataProvider"/> in the
            <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>. Also registers the default view services.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder"/>.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.MvcViewFeaturesMvcCoreBuilderExtensions.AddViews(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder,System.Action{Microsoft.AspNetCore.Mvc.MvcViewOptions})">
            <summary>
            Add view related services.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder"/>.</param>
            <param name="setupAction">The setup action for <see cref="T:Microsoft.AspNetCore.Mvc.MvcViewOptions"/>.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.MvcViewFeaturesMvcCoreBuilderExtensions.AddCookieTempDataProvider(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder,System.Action{Microsoft.AspNetCore.Mvc.CookieTempDataProviderOptions})">
            <summary>
            Registers <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.CookieTempDataProvider"/> as the default <see cref="T:Microsoft.AspNetCore.Mvc.ViewFeatures.ITempDataProvider"/> in the
            <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>. Also registers the default view services.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder"/>.</param>
            <param name="setupAction">
            An <see cref="T:System.Action`1"/> to configure the provided
            <see cref="T:Microsoft.AspNetCore.Mvc.CookieTempDataProviderOptions"/>.
            </param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder"/>.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.MvcViewFeaturesMvcCoreBuilderExtensions.ConfigureViews(Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder,System.Action{Microsoft.AspNetCore.Mvc.MvcViewOptions})">
            <summary>
            Configures <see cref="T:Microsoft.AspNetCore.Mvc.MvcViewOptions"/>.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder"/>.</param>
            <param name="setupAction">The setup action.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcCoreBuilder"/>.</returns>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.MvcViewOptionsSetup">
            <summary>
            Sets up default options for <see cref="T:Microsoft.AspNetCore.Mvc.MvcViewOptions"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.TempDataMvcOptionsSetup">
            <summary>
            Sets up default options for <see cref="T:Microsoft.AspNetCore.Mvc.MvcOptions"/>.
            </summary>
        </member>
    </members>
</doc>
