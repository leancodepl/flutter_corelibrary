load('ext://restart_process', 'docker_build_with_restart')
allow_k8s_contexts('k3d-exampleapp')
default_registry('k3d-exampleapp-registry.local.lncd.pl:21345')

local_resource(
  'build-api',
  'dotnet publish -o dev/out/api src/Apps/ExampleApp.Api',
  dir='.',
  deps=['src', 'tests', 'ExampleApp.sln', 'Directory.Build.targets'],
  ignore=['**/obj', '**/bin'],
  env={ 'APP_VERSION': '0.0.1-dev' },
  labels=['app']
)

local_resource(
  'build-migrations',
  'dotnet publish -o dev/out/migrations src/Apps/ExampleApp.Migrations',
  dir='.',
  deps=['src', 'tests', 'ExampleApp.sln', 'Directory.Build.targets'],
  ignore=['**/obj', '**/bin'],
  env={ 'APP_VERSION': '0.0.1-dev' },
  labels=['app']
)

local_resource(
  'build-tests',
  'dotnet publish -o dev/out/tests tests/ExampleApp.Tests.csproj',
  dir='.',
  deps=['src', 'tests', 'ExampleApp.sln', 'Directory.Build.targets'],
  ignore=['**/obj', '**/bin'],
  env={ 'APP_VERSION': '0.0.1-dev' },
  labels=['tests']
)

local_resource(
  'build-integration-tests',
  'dotnet publish -o dev/out/integration_tests tests/ExampleApp.IntegrationTests',
  dir='.',
  deps=['src', 'tests/ExampleApp.IntegrationTests', 'ExampleApp.sln', 'Directory.Build.targets'],
  ignore=['**/obj', '**/bin'],
  env={ 'APP_VERSION': '0.0.1-dev' },
  labels=['tests']
)

docker_build_with_restart(
  'exampleapp-api',
  context='dev',
  dockerfile='dev/Dockerfile.api',
  entrypoint='/home/app/config/run.sh',
  only=['out/api', 'config', 'sshd_config'],
  live_update=[
    sync('dev/out/api', '/home/app/bin'),
    sync('dev/config', '/home/app/config'),
  ],
)

docker_build_with_restart(
  'exampleapp-migrations',
  context='dev',
  entrypoint='/home/app/config/migrate.sh',
  dockerfile='dev/Dockerfile.migrations',
  only=['out/migrations', 'config'],
  live_update=[
    sync('dev/out/migrations', '/home/app/bin'),
    sync('dev/config', '/home/app/config'),
  ],
)

docker_build_with_restart(
  'exampleapp-tests',
  context='dev',
  dockerfile='dev/Dockerfile.tests',
  entrypoint='dotnet vstest *.Tests.dll; sleep 3600',
  only=['out/tests', 'config'],
  live_update=[
    sync('dev/out/tests', '/home/app/bin'),
    sync('dev/config', '/home/app/config'),
  ],
)

docker_build_with_restart(
  'exampleapp-integration-tests',
  context='dev',
  dockerfile='dev/Dockerfile.integration_tests',
  entrypoint='/home/app/config/run_tests.sh',
  only=['out/integration_tests', 'config', 'sshd_config'],
  live_update=[
    sync('dev/out/integration_tests', '/home/app/bin'),
    sync('dev/config', '/home/app/config'),
  ],
)

k8s_yaml('dev/k8s/api.yaml')
k8s_yaml('dev/k8s/migrations.yaml')
k8s_yaml('dev/k8s/tests.yaml')
k8s_yaml('dev/k8s/integration_tests.yaml')

k8s_resource('exampleapp-api', new_name='api', resource_deps=['build-api'], labels=['app'])
k8s_resource('exampleapp-migrations', new_name='migrations', resource_deps=['build-migrations'], trigger_mode=TRIGGER_MODE_MANUAL, labels=['app'])
k8s_resource('exampleapp-tests', new_name='tests', resource_deps=['build-tests'], labels=['tests'])
k8s_resource('exampleapp-integration-tests', new_name='integration_tests', resource_deps=['build-integration-tests'], labels=['tests'])

# vim:set sw=2 ts=2:
